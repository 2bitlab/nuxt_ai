{
  "openapi": "3.1.0",
  "info": {
    "title": "My awesome API",
    "version": "0.5.0",
    "description": "My awesome API created with ZenStack",
    "summary": "Created with ZenStack"
  },
  "tags": [
    {
      "name": "user",
      "description": "User operations"
    },
    {
      "name": "account",
      "description": "Account operations"
    },
    {
      "name": "session",
      "description": "Session operations"
    },
    {
      "name": "verificationToken",
      "description": "VerificationToken operations"
    },
    {
      "name": "loginLog",
      "description": "LoginLog operations"
    },
    {
      "name": "balanceLog",
      "description": "BalanceLog operations"
    },
    {
      "name": "shop",
      "description": "Shop operations"
    },
    {
      "name": "shopMember",
      "description": "ShopMember operations"
    },
    {
      "name": "produceSpecification",
      "description": "ProduceSpecification operations"
    },
    {
      "name": "produceSpecificationValue",
      "description": "ProduceSpecificationValue operations"
    },
    {
      "name": "producePrice",
      "description": "ProducePrice operations"
    },
    {
      "name": "produceSpecificationValuePrice",
      "description": "ProduceSpecificationValuePrice operations"
    },
    {
      "name": "produce",
      "description": "Produce operations"
    },
    {
      "name": "cardProduceAccount",
      "description": "CardProduceAccount operations"
    },
    {
      "name": "cardProduce",
      "description": "CardProduce operations"
    },
    {
      "name": "comboProduce",
      "description": "ComboProduce operations"
    },
    {
      "name": "freeExpressFeeRule",
      "description": "FreeExpressFeeRule operations"
    },
    {
      "name": "freeExpressFeeRuleCity",
      "description": "FreeExpressFeeRuleCity operations"
    },
    {
      "name": "expressFeeRule",
      "description": "ExpressFeeRule operations"
    },
    {
      "name": "expressFeeRuleCity",
      "description": "ExpressFeeRuleCity operations"
    },
    {
      "name": "physicalProduce",
      "description": "PhysicalProduce operations"
    },
    {
      "name": "i18nValue",
      "description": "I18nValue operations"
    },
    {
      "name": "configValue",
      "description": "ConfigValue operations"
    },
    {
      "name": "video",
      "description": "Video operations"
    },
    {
      "name": "videoType",
      "description": "VideoType operations"
    },
    {
      "name": "videoTag",
      "description": "VideoTag operations"
    },
    {
      "name": "videoSet",
      "description": "VideoSet operations"
    },
    {
      "name": "site",
      "description": "Site operations"
    },
    {
      "name": "page",
      "description": "Page operations"
    },
    {
      "name": "crawlTask",
      "description": "CrawlTask operations"
    }
  ],
  "components": {
    "schemas": {
      "ShowStatus": {
        "type": "string",
        "enum": [
          "OPEND",
          "DRAFT",
          "REVIEW"
        ]
      },
      "ShopMemberRole": {
        "type": "string",
        "enum": [
          "OWNER",
          "ADMIN",
          "SALER"
        ]
      },
      "CurrencyType": {
        "type": "string",
        "enum": [
          "AUD",
          "CAD",
          "CHF",
          "DKK",
          "EUR",
          "GBP",
          "HKD",
          "JPY",
          "KRW",
          "KZT",
          "MOP",
          "MYR",
          "NOK",
          "NZD",
          "PKR",
          "RUB",
          "SEK",
          "SGD",
          "THB",
          "USD",
          "ZAR",
          "PHP",
          "CNY"
        ]
      },
      "ProduceStatus": {
        "type": "string",
        "enum": [
          "IN_STOCK",
          "DRAFT",
          "REVIEW"
        ]
      },
      "LimitBuyType": {
        "type": "string",
        "enum": [
          "DAY",
          "WEEK",
          "MONTH",
          "ONCE"
        ]
      },
      "ProduceType": {
        "type": "string",
        "enum": [
          "CARD",
          "COMBO",
          "PHYSICAL"
        ]
      },
      "CardProduceAccountStatus": {
        "type": "string",
        "enum": [
          "IN_STOCK",
          "SOLD"
        ]
      },
      "FreeExpressFeeRuleType": {
        "type": "string",
        "enum": [
          "ORDER_AMOUNT_LIMIT",
          "ORDER_FEE_LIMIT",
          "PRODUCE_AMOUNT_LIMIT",
          "PRODUCE_FEE_LIMIT"
        ]
      },
      "ExpressFeeRuleTyle": {
        "type": "string",
        "enum": [
          "AMOUNT",
          "WEIGHT"
        ]
      },
      "ConfigValueKey": {
        "type": "string",
        "enum": [
          "TENCENT_COS_SECRET",
          "TENCENT_COS_UPLOAD",
          "TENCENT_VECTOR_DB",
          "OPENAI_API_KEY"
        ]
      },
      "PageStatus": {
        "type": "string",
        "enum": [
          "IS_404",
          "IS_500",
          "IS_200",
          "IS_WATING"
        ]
      },
      "UserScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "email",
          "emailVerified",
          "image",
          "phone",
          "role",
          "password",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "deleted",
          "block",
          "inviterId"
        ]
      },
      "AccountScalarFieldEnum": {
        "type": "string",
        "enum": [
          "userId",
          "type",
          "provider",
          "providerAccountId",
          "refresh_token",
          "access_token",
          "expires_at",
          "token_type",
          "scope",
          "id_token",
          "session_state"
        ]
      },
      "SessionScalarFieldEnum": {
        "type": "string",
        "enum": [
          "sessionToken",
          "userId",
          "expires"
        ]
      },
      "VerificationTokenScalarFieldEnum": {
        "type": "string",
        "enum": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "LoginLogScalarFieldEnum": {
        "type": "string",
        "enum": [
          "day",
          "userId",
          "startAt",
          "endAt"
        ]
      },
      "BalanceLogScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "balance",
          "change",
          "changeBefore",
          "remark",
          "log",
          "createdAt",
          "creatorId",
          "preBalanceLogId",
          "userId"
        ]
      },
      "ShopScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "logo",
          "status"
        ]
      },
      "ShopMemberScalarFieldEnum": {
        "type": "string",
        "enum": [
          "role",
          "shopId",
          "userId"
        ]
      },
      "ProduceSpecificationScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "producId"
        ]
      },
      "ProduceSpecificationValueScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "value",
          "iamge",
          "produceSpecificationId",
          "deletedAt",
          "deleted"
        ]
      },
      "ProducePriceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "goods_no",
          "currency",
          "price",
          "cost",
          "weight",
          "stock",
          "reduceStock",
          "saled",
          "saledAmount",
          "deletedAt",
          "deleted",
          "producId"
        ]
      },
      "ProduceSpecificationValuePriceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "producePriceId",
          "produceSpecificationValueId"
        ]
      },
      "ProduceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "status",
          "linePrice",
          "tags",
          "visits",
          "saled",
          "saledAmount",
          "isLimitBuy",
          "limitBuyType",
          "limitBuyValue",
          "minBuyValue",
          "shopId",
          "type"
        ]
      },
      "CardProduceAccountScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "value",
          "status",
          "cardProduceId"
        ]
      },
      "CardProduceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId"
        ]
      },
      "ComboProduceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId"
        ]
      },
      "FreeExpressFeeRuleScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleCityScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "citys",
          "limit",
          "freeExpressFeeRuleId"
        ]
      },
      "ExpressFeeRuleScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "ExpressFeeRuleCityScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRuleId"
        ]
      },
      "PhysicalProduceScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "expressFeeRuleId"
        ]
      },
      "I18nValueScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "key",
          "value",
          "lang"
        ]
      },
      "ConfigValueScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "key",
          "value"
        ]
      },
      "VideoScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "url",
          "title",
          "summary",
          "coverUrl",
          "publishedAt",
          "videoTypeId",
          "videoSetId"
        ]
      },
      "VideoTypeScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label",
          "parentId"
        ]
      },
      "VideoTagScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label"
        ]
      },
      "VideoSetScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label"
        ]
      },
      "SiteScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "host",
          "keywords",
          "description",
          "icon",
          "thumbnail",
          "createdAt",
          "updatedAt"
        ]
      },
      "PageScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "url",
          "content",
          "contentSize",
          "cleanHtml",
          "cleanHtmlSize",
          "isHost",
          "status",
          "parentId",
          "createdAt",
          "updatedAt",
          "siteId"
        ]
      },
      "CrawlTaskScalarFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "siteId"
        ]
      },
      "SortOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "NullableJsonNullValueInput": {
        "type": "string",
        "enum": [
          "DbNull",
          "JsonNull"
        ]
      },
      "JsonNullValueInput": {
        "type": "string",
        "enum": [
          "JsonNull"
        ]
      },
      "NullsOrder": {
        "type": "string",
        "enum": [
          "first",
          "last"
        ]
      },
      "UserOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "email",
          "image",
          "phone",
          "role",
          "password",
          "inviterId"
        ]
      },
      "AccountOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "userId",
          "type",
          "provider",
          "providerAccountId",
          "refresh_token",
          "access_token",
          "token_type",
          "scope",
          "id_token",
          "session_state"
        ]
      },
      "SessionOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "sessionToken",
          "userId"
        ]
      },
      "VerificationTokenOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "identifier",
          "token"
        ]
      },
      "LoginLogOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "day",
          "userId"
        ]
      },
      "JsonNullValueFilter": {
        "type": "string",
        "enum": [
          "DbNull",
          "JsonNull",
          "AnyNull"
        ]
      },
      "BalanceLogOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "remark",
          "creatorId",
          "preBalanceLogId",
          "userId"
        ]
      },
      "ShopOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "name",
          "logo"
        ]
      },
      "ShopMemberOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "shopId",
          "userId"
        ]
      },
      "ProduceSpecificationOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "name",
          "producId"
        ]
      },
      "ProduceSpecificationValueOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "value",
          "iamge",
          "produceSpecificationId"
        ]
      },
      "ProducePriceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "goods_no",
          "producId"
        ]
      },
      "ProduceSpecificationValuePriceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "producePriceId",
          "produceSpecificationValueId"
        ]
      },
      "ProduceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "name",
          "tags",
          "shopId"
        ]
      },
      "CardProduceAccountOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "value",
          "cardProduceId"
        ]
      },
      "CardProduceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId"
        ]
      },
      "ComboProduceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId"
        ]
      },
      "FreeExpressFeeRuleOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "name"
        ]
      },
      "FreeExpressFeeRuleCityOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "citys",
          "freeExpressFeeRuleId"
        ]
      },
      "ExpressFeeRuleOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "name"
        ]
      },
      "ExpressFeeRuleCityOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "citys",
          "expressFeeRuleId"
        ]
      },
      "PhysicalProduceOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "produceId",
          "freeExpressFeeRuleId",
          "expressFeeRuleId"
        ]
      },
      "I18nValueOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "key",
          "value",
          "lang"
        ]
      },
      "ConfigValueOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId"
        ]
      },
      "VideoOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId",
          "videoSetId"
        ]
      },
      "VideoTypeOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label",
          "parentId"
        ]
      },
      "VideoTagOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label"
        ]
      },
      "VideoSetOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "label"
        ]
      },
      "SiteOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "title",
          "host",
          "keywords",
          "description",
          "icon",
          "thumbnail"
        ]
      },
      "PageOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "url",
          "content",
          "cleanHtml",
          "parentId",
          "siteId"
        ]
      },
      "CrawlTaskOrderByRelevanceFieldEnum": {
        "type": "string",
        "enum": [
          "id",
          "creatorId",
          "siteId"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "inviter": {
            "$ref": "#/components/schemas/User"
          },
          "invitee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "shops": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shop"
            }
          },
          "producs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Produce"
            }
          },
          "produceSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecification"
            }
          },
          "freeExpressFeeRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRule"
            }
          },
          "expressFeeRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRule"
            }
          },
          "shopMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMember"
            }
          },
          "i18nValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/I18nValue"
            }
          },
          "configValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValue"
            }
          },
          "loginLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginLog"
            }
          },
          "balanceLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLog"
            }
          },
          "creatorBalanceLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLog"
            }
          },
          "crawlTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTask"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "block"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "userId",
          "type",
          "provider",
          "providerAccountId",
          "user"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "sessionToken",
          "userId",
          "expires",
          "user"
        ]
      },
      "VerificationToken": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "LoginLog": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "day",
          "userId",
          "startAt",
          "endAt",
          "user"
        ]
      },
      "BalanceLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {},
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLog"
          },
          "balanceLogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLog"
            }
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "id",
          "balance",
          "change",
          "changeBefore",
          "remark",
          "createdAt",
          "userId",
          "user"
        ]
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "producs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Produce"
            }
          },
          "shopMember": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMember"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "status"
        ]
      },
      "ShopMember": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "userId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "role",
          "shopId",
          "shop",
          "userId",
          "user"
        ]
      },
      "ProduceSpecification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValue"
            }
          },
          "producId": {
            "type": "string"
          },
          "produc": {
            "$ref": "#/components/schemas/Produce"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "producId",
          "produc"
        ]
      },
      "ProduceSpecificationValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecification"
          },
          "producePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePrice"
            }
          },
          "produceSpecificationValuePrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePrice"
            }
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "value",
          "produceSpecificationId",
          "produceSpecification",
          "deleted"
        ]
      },
      "ProducePrice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          },
          "produc": {
            "$ref": "#/components/schemas/Produce"
          },
          "produceSpecificationValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValue"
            }
          },
          "produceSpecificationValuePrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePrice"
            }
          }
        },
        "required": [
          "id",
          "currency",
          "price",
          "cost",
          "weight",
          "stock",
          "reduceStock",
          "saled",
          "saledAmount",
          "deleted",
          "producId",
          "produc"
        ]
      },
      "ProduceSpecificationValuePrice": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePrice"
          },
          "produceSpecificationValueId": {
            "type": "string"
          },
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValue"
          }
        },
        "required": [
          "producePriceId",
          "producePrice",
          "produceSpecificationValueId",
          "produceSpecificationValue"
        ]
      },
      "Produce": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "shop": {
            "$ref": "#/components/schemas/Shop"
          },
          "produceSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecification"
            }
          },
          "producePrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePrice"
            }
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduce"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduce"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduce"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "status",
          "linePrice",
          "visits",
          "saled",
          "saledAmount",
          "isLimitBuy",
          "shopId",
          "shop",
          "type"
        ]
      },
      "CardProduceAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduceId": {
            "type": "string"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduce"
          }
        },
        "required": [
          "id",
          "value",
          "status",
          "cardProduceId",
          "cardProduce"
        ]
      },
      "CardProduce": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/Produce"
          },
          "cardProduceAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccount"
            }
          }
        },
        "required": [
          "id",
          "produceId",
          "produce"
        ]
      },
      "ComboProduce": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/Produce"
          }
        },
        "required": [
          "id",
          "produceId",
          "produce"
        ]
      },
      "FreeExpressFeeRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "freeExpressFeeRuleCitys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleCity"
            }
          },
          "physicalProduces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduce"
            }
          },
          "isDef": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleCity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRule"
          }
        },
        "required": [
          "id",
          "citys",
          "limit",
          "freeExpressFeeRuleId",
          "freeExpressFeeRule"
        ]
      },
      "ExpressFeeRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "expressFeeRuleCitys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleCity"
            }
          },
          "physicalProduces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduce"
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "ExpressFeeRuleCity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRule"
          }
        },
        "required": [
          "id",
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRuleId",
          "expressFeeRule"
        ]
      },
      "PhysicalProduce": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/Produce"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRule"
          },
          "expressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRule"
          }
        },
        "required": [
          "id",
          "produceId",
          "produce",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "freeExpressFeeRule",
          "expressFeeRuleId",
          "expressFeeRule"
        ]
      },
      "I18nValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "key",
          "value",
          "lang"
        ]
      },
      "ConfigValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {}
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "key",
          "value"
        ]
      },
      "Video": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoType"
          },
          "videoTags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTag"
            }
          },
          "videoSetId": {
            "type": "string"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSet"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "url",
          "title",
          "summary",
          "coverUrl",
          "publishedAt",
          "videoTypeId",
          "videoType"
        ]
      },
      "VideoType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/VideoType"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoType"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "VideoTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "VideoSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          },
          "crawlTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTask"
            }
          }
        },
        "required": [
          "id",
          "host",
          "createdAt",
          "updatedAt"
        ]
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Page"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          }
        },
        "required": [
          "id",
          "url",
          "contentSize",
          "cleanHtmlSize",
          "isHost",
          "status",
          "createdAt",
          "updatedAt",
          "siteId",
          "site"
        ]
      },
      "CrawlTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/Site"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "siteId",
          "site"
        ]
      },
      "UserWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionListRelationFilter"
          },
          "inviter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "invitee": {
            "$ref": "#/components/schemas/UserListRelationFilter"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopListRelationFilter"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceListRelationFilter"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationListRelationFilter"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleListRelationFilter"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleListRelationFilter"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberListRelationFilter"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueListRelationFilter"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueListRelationFilter"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogListRelationFilter"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskListRelationFilter"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "UserOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "block": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionOrderByRelationAggregateInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserOrderByRelationAggregateInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopOrderByRelationAggregateInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceOrderByRelationAggregateInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByRelationAggregateInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByRelationAggregateInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByRelationAggregateInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberOrderByRelationAggregateInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueOrderByRelationAggregateInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueOrderByRelationAggregateInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogOrderByRelationAggregateInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogOrderByRelationAggregateInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogOrderByRelationAggregateInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskOrderByRelationAggregateInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/UserOrderByRelevanceInput"
          }
        }
      },
      "UserWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereInput"
                }
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionListRelationFilter"
          },
          "inviter": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "invitee": {
            "$ref": "#/components/schemas/UserListRelationFilter"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopListRelationFilter"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceListRelationFilter"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationListRelationFilter"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleListRelationFilter"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleListRelationFilter"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberListRelationFilter"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueListRelationFilter"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueListRelationFilter"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogListRelationFilter"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskListRelationFilter"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "UserScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "AccountWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "AccountOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "type": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "provider": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "refresh_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/AccountOrderByRelevanceInput"
          }
        }
      },
      "AccountWhereUniqueInput": {
        "type": "object",
        "properties": {
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/AccountProviderProviderAccountIdCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereInput"
                }
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "AccountScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SessionWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "sessionToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "SessionOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expires": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/SessionOrderByRelevanceInput"
          }
        }
      },
      "SessionWhereUniqueInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereInput"
                }
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "SessionScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "sessionToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "VerificationTokenWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationTokenWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenWhereInput"
                }
              }
            ]
          },
          "identifier": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "VerificationTokenOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "token": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expires": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "_relevance": {
            "$ref": "#/components/schemas/VerificationTokenOrderByRelevanceInput"
          }
        }
      },
      "VerificationTokenWhereUniqueInput": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "identifier_token": {
            "$ref": "#/components/schemas/VerificationTokenIdentifierTokenCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationTokenWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenWhereInput"
                }
              }
            ]
          },
          "identifier": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "VerificationTokenScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "identifier": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "LoginLogWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginLogWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereInput"
                }
              }
            ]
          },
          "day": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "LoginLogOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "startAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "endAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/LoginLogOrderByRelevanceInput"
          }
        }
      },
      "LoginLogWhereUniqueInput": {
        "type": "object",
        "properties": {
          "day_userId": {
            "$ref": "#/components/schemas/LoginLogDayUserIdCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginLogWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereInput"
                }
              }
            ]
          },
          "day": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "LoginLogScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "day": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "BalanceLogWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLogWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "log": {
            "$ref": "#/components/schemas/JsonNullableFilter"
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "preBalanceLog": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              }
            ]
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "BalanceLogOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "balance": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "change": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "changeBefore": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "remark": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogOrderByWithRelationAndSearchRelevanceInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogOrderByRelationAggregateInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/BalanceLogOrderByRelevanceInput"
          }
        }
      },
      "BalanceLogWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLogWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereInput"
                }
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "log": {
            "$ref": "#/components/schemas/JsonNullableFilter"
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "preBalanceLog": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              }
            ]
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogListRelationFilter"
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "BalanceLogScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "log": {
            "$ref": "#/components/schemas/JsonNullableWithAggregatesFilter"
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ShopWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShowStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ShowStatus"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceListRelationFilter"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberListRelationFilter"
          }
        }
      },
      "ShopOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceOrderByRelationAggregateInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ShopOrderByRelevanceInput"
          }
        }
      },
      "ShopWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShowStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ShowStatus"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceListRelationFilter"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberListRelationFilter"
          }
        }
      },
      "ShopScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShowStatusWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ShowStatus"
              }
            ]
          }
        }
      },
      "ShopMemberWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereInput"
                }
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFilter"
              },
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "shop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "ShopMemberOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "shopId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "userId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopOrderByWithRelationAndSearchRelevanceInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ShopMemberOrderByRelevanceInput"
          }
        }
      },
      "ShopMemberWhereUniqueInput": {
        "type": "object",
        "properties": {
          "shopId_userId": {
            "$ref": "#/components/schemas/ShopMemberShopIdUserIdCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereInput"
                }
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFilter"
              },
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "shop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "ShopMemberScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceSpecificationWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueListRelationFilter"
          },
          "produc": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "producId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByRelationAggregateInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByRelevanceInput"
          }
        }
      },
      "ProduceSpecificationWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueListRelationFilter"
          },
          "produc": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "produceSpecification": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              }
            ]
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceListRelationFilter"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceListRelationFilter"
          }
        }
      },
      "ProduceSpecificationValueOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "value": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "iamge": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "produceSpecificationId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByWithRelationAndSearchRelevanceInput"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceOrderByRelationAggregateInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByRelevanceInput"
          }
        }
      },
      "ProduceSpecificationValueWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
                }
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "produceSpecification": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
              }
            ]
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceListRelationFilter"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceListRelationFilter"
          }
        }
      },
      "ProduceSpecificationValueScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ProducePriceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePriceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFilter"
              },
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produc": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueListRelationFilter"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceListRelationFilter"
          }
        }
      },
      "ProducePriceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "goods_no": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "currency": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "price": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "cost": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "weight": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "stock": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "reduceStock": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "saled": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "saledAmount": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "producId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByRelationAggregateInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ProducePriceOrderByRelevanceInput"
          }
        }
      },
      "ProducePriceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePriceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereInput"
                }
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFilter"
              },
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produc": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueListRelationFilter"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceListRelationFilter"
          }
        }
      },
      "ProducePriceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
                }
              }
            ]
          },
          "producePriceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              }
            ]
          },
          "produceSpecificationValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produceSpecificationValueId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceOrderByWithRelationAndSearchRelevanceInput"
          },
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByRelevanceInput"
          }
        }
      },
      "ProduceSpecificationValuePriceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "producePriceId_produceSpecificationValueId": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceProducePriceIdProduceSpecificationValueIdCompoundUniqueInput"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
                }
              }
            ]
          },
          "producePriceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProducePriceWhereInput"
              }
            ]
          },
          "produceSpecificationValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "producePriceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceStatus"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumLimitBuyTypeNullableFilter"
              },
              {
                "$ref": "#/components/schemas/LimitBuyType"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceTypeFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceType"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "shop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationListRelationFilter"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceListRelationFilter"
          },
          "cardProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "comboProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "physicalProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          }
        }
      },
      "ProduceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "linePrice": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "tags": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "visits": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "saled": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "saledAmount": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isLimitBuy": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "shopId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "type": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopOrderByWithRelationAndSearchRelevanceInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByRelationAggregateInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceOrderByRelationAggregateInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ProduceOrderByRelevanceInput"
          }
        }
      },
      "ProduceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceStatus"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumLimitBuyTypeNullableFilter"
              },
              {
                "$ref": "#/components/schemas/LimitBuyType"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceTypeFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceType"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "shop": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ShopWhereInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationListRelationFilter"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceListRelationFilter"
          },
          "cardProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "comboProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "physicalProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          }
        }
      },
      "ProduceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceStatusWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceStatus"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumLimitBuyTypeNullableWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/LimitBuyType"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceTypeWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceType"
              }
            ]
          }
        }
      },
      "CardProduceAccountWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              }
            ]
          },
          "cardProduceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cardProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "value": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "cardProduceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/CardProduceAccountOrderByRelevanceInput"
          }
        }
      },
      "CardProduceAccountWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereInput"
                }
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              }
            ]
          },
          "cardProduceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cardProduce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              }
            ]
          },
          "cardProduceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CardProduceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountListRelationFilter"
          }
        }
      },
      "CardProduceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/CardProduceOrderByRelevanceInput"
          }
        }
      },
      "CardProduceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceWhereInput"
                }
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountListRelationFilter"
          }
        }
      },
      "CardProduceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ComboProduceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          }
        }
      },
      "ComboProduceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ComboProduceOrderByRelevanceInput"
          }
        }
      },
      "ComboProduceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceWhereInput"
                }
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          }
        }
      },
      "ComboProduceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityListRelationFilter"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceListRelationFilter"
          }
        }
      },
      "FreeExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "type": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isDef": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByRelationAggregateInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByRelevanceInput"
          }
        }
      },
      "FreeExpressFeeRuleWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityListRelationFilter"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceListRelationFilter"
          }
        }
      },
      "FreeExpressFeeRuleScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "citys": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "limit": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "freeExpressFeeRuleId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByRelevanceInput"
          }
        }
      },
      "FreeExpressFeeRuleCityWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityListRelationFilter"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceListRelationFilter"
          }
        }
      },
      "ExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "name": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "type": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isDef": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByRelationAggregateInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByRelevanceInput"
          }
        }
      },
      "ExpressFeeRuleWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityListRelationFilter"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceListRelationFilter"
          }
        }
      },
      "ExpressFeeRuleScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "citys": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "firstLimit": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "firstFee": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "step": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "stepFee": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expressFeeRuleId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByRelevanceInput"
          }
        }
      },
      "ExpressFeeRuleCityWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
                }
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "PhysicalProduceWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              }
            ]
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produceId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expressFee": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isFreeExpressFee": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "freeExpressFeeRuleId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "expressFeeRuleId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByRelevanceInput"
          }
        }
      },
      "PhysicalProduceWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduceWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereInput"
                }
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produce": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceWhereInput"
              }
            ]
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
              }
            ]
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleRelationFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalWithAggregatesFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "I18nValueWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/I18nValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "I18nValueOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "key": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "value": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "lang": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/I18nValueOrderByRelevanceInput"
          }
        }
      },
      "I18nValueWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/I18nValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "I18nValueScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ConfigValueWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFilter"
              },
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/JsonFilter"
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "ConfigValueOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "key": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "value": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/ConfigValueOrderByRelevanceInput"
          }
        }
      },
      "ConfigValueWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFilter"
              },
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/JsonFilter"
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          }
        }
      },
      "ConfigValueScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/JsonWithAggregatesFilter"
          }
        }
      },
      "VideoWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "videoType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagListRelationFilter"
          },
          "videoSet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              }
            ]
          }
        }
      },
      "VideoOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "url": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "summary": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "coverUrl": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "publishedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "videoTypeId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "videoSetId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeOrderByWithRelationAndSearchRelevanceInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagOrderByRelationAggregateInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/VideoOrderByRelevanceInput"
          }
        }
      },
      "VideoWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "videoType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagListRelationFilter"
          },
          "videoSet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              }
            ]
          }
        }
      },
      "VideoScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoTypeWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTypeWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeListRelationFilter"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoTypeOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "label": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeOrderByWithRelationAndSearchRelevanceInput"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeOrderByRelationAggregateInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/VideoTypeOrderByRelevanceInput"
          }
        }
      },
      "VideoTypeWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTypeWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereInput"
                }
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeListRelationFilter"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoTypeScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoTagWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTagWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoTagOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "label": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/VideoTagOrderByRelevanceInput"
          }
        }
      },
      "VideoTagWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTagWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereInput"
                }
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoTagScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoSetWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoSetWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoSetOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "label": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/VideoSetOrderByRelevanceInput"
          }
        }
      },
      "VideoSetWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoSetWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetWhereInput"
                }
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoListRelationFilter"
          }
        }
      },
      "VideoSetScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SiteWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "pages": {
            "$ref": "#/components/schemas/PageListRelationFilter"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskListRelationFilter"
          }
        }
      },
      "SiteOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "host": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "keywords": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "pages": {
            "$ref": "#/components/schemas/PageOrderByRelationAggregateInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskOrderByRelationAggregateInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/SiteOrderByRelevanceInput"
          }
        }
      },
      "SiteWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteWhereInput"
                }
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "pages": {
            "$ref": "#/components/schemas/PageListRelationFilter"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskListRelationFilter"
          }
        }
      },
      "SiteScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "PageWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPageStatusFilter"
              },
              {
                "$ref": "#/components/schemas/PageStatus"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/PageWhereInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/PageListRelationFilter"
          },
          "site": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              }
            ]
          }
        }
      },
      "PageOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "url": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "contentSize": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "cleanHtml": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "isHost": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "status": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "siteId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "parent": {
            "$ref": "#/components/schemas/PageOrderByWithRelationAndSearchRelevanceInput"
          },
          "children": {
            "$ref": "#/components/schemas/PageOrderByRelationAggregateInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/PageOrderByRelevanceInput"
          }
        }
      },
      "PageWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereInput"
                }
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPageStatusFilter"
              },
              {
                "$ref": "#/components/schemas/PageStatus"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parent": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/PageWhereInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/PageListRelationFilter"
          },
          "site": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              }
            ]
          }
        }
      },
      "PageScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntWithAggregatesFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPageStatusWithAggregatesFilter"
              },
              {
                "$ref": "#/components/schemas/PageStatus"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CrawlTaskWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTaskWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "site": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              }
            ]
          }
        }
      },
      "CrawlTaskOrderByWithRelationAndSearchRelevanceInput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "createdAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              },
              {
                "$ref": "#/components/schemas/SortOrderInput"
              }
            ]
          },
          "deleted": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "published": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "siteId": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "creator": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteOrderByWithRelationAndSearchRelevanceInput"
          },
          "_relevance": {
            "$ref": "#/components/schemas/CrawlTaskOrderByRelevanceInput"
          }
        }
      },
      "CrawlTaskWhereUniqueInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTaskWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereInput"
                }
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "creator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserNullableRelationFilter"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "site": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteRelationFilter"
              },
              {
                "$ref": "#/components/schemas/SiteWhereInput"
              }
            ]
          }
        }
      },
      "CrawlTaskScalarWhereWithAggregatesInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableWithAggregatesFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolWithAggregatesFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringWithAggregatesFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          }
        }
      },
      "UserUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountCreateInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutAccountsInput"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId",
          "user"
        ]
      },
      "AccountUpdateInput": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutAccountsNestedInput"
          }
        }
      },
      "AccountCreateManyInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        },
        "required": [
          "userId",
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "AccountUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SessionCreateInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutSessionsInput"
          }
        },
        "required": [
          "sessionToken",
          "expires",
          "user"
        ]
      },
      "SessionUpdateInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutSessionsNestedInput"
          }
        }
      },
      "SessionCreateManyInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sessionToken",
          "userId",
          "expires"
        ]
      },
      "SessionUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VerificationTokenCreateInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "VerificationTokenUpdateInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VerificationTokenCreateManyInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "VerificationTokenUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "LoginLogCreateInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutLoginLogsInput"
          }
        },
        "required": [
          "day",
          "endAt",
          "user"
        ]
      },
      "LoginLogUpdateInput": {
        "type": "object",
        "properties": {
          "day": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutLoginLogsNestedInput"
          }
        }
      },
      "LoginLogCreateManyInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "day",
          "userId",
          "endAt"
        ]
      },
      "LoginLogUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "day": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BalanceLogCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCreatorBalanceLogsInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedOneWithoutBalanceLogsInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutPreBalanceLogInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutBalanceLogsInput"
          }
        },
        "required": [
          "remark",
          "user"
        ]
      },
      "BalanceLogUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCreatorBalanceLogsNestedInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogUpdateOneWithoutBalanceLogsNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutPreBalanceLogNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutBalanceLogsNestedInput"
          }
        }
      },
      "BalanceLogCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "BalanceLogUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutShopsInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutShopInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutShopsNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutShopNestedInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ShopCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopMemberCreateInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutShopMemberInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutShopMembersInput"
          }
        },
        "required": [
          "role",
          "shop",
          "user"
        ]
      },
      "ShopMemberUpdateInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutShopMemberNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutShopMembersNestedInput"
          }
        }
      },
      "ShopMemberCreateManyInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "shopId",
          "userId"
        ]
      },
      "ShopMemberUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProduceSpecificationsInput"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProduceSpecificationInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name",
          "produc"
        ]
      },
      "ProduceSpecificationUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProduceSpecificationsNestedInput"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProduceSpecificationNestedInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "producId"
        ]
      },
      "ProduceSpecificationUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedOneWithoutValuesInput"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProduceSpecificationValuesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProduceSpecificationValueInput"
          }
        },
        "required": [
          "value",
          "produceSpecification"
        ]
      },
      "ProduceSpecificationValueUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateOneRequiredWithoutValuesNestedInput"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProduceSpecificationValuesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProduceSpecificationValueNestedInput"
          }
        }
      },
      "ProduceSpecificationValueCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "value",
          "produceSpecificationId"
        ]
      },
      "ProduceSpecificationValueUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProducePriceCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProducePriceInput"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProducePricesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProducePriceInput"
          }
        },
        "required": [
          "reduceStock",
          "produc"
        ]
      },
      "ProducePriceUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProducePriceNestedInput"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProducePricesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProducePriceNestedInput"
          }
        }
      },
      "ProducePriceCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          }
        },
        "required": [
          "reduceStock",
          "producId"
        ]
      },
      "ProducePriceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceCreateInput": {
        "type": "object",
        "properties": {
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedOneWithoutProduceSpecificationValuePriceInput"
          },
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedOneWithoutProduceSpecificationValuePriceInput"
          }
        },
        "required": [
          "producePrice",
          "produceSpecificationValue"
        ]
      },
      "ProduceSpecificationValuePriceUpdateInput": {
        "type": "object",
        "properties": {
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput"
          },
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput"
          }
        }
      },
      "ProduceSpecificationValuePriceCreateManyInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "produceSpecificationValueId": {
            "type": "string"
          }
        },
        "required": [
          "producePriceId",
          "produceSpecificationValueId"
        ]
      },
      "ProduceSpecificationValuePriceUpdateManyMutationInput": {
        "type": "object",
        "properties": {}
      },
      "ProduceCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutCardProduceAccountsInput"
          }
        },
        "required": [
          "value",
          "cardProduce"
        ]
      },
      "CardProduceAccountUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneRequiredWithoutCardProduceAccountsNestedInput"
          }
        }
      },
      "CardProduceAccountCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduceId": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "cardProduceId"
        ]
      },
      "CardProduceAccountUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutCardProduceInput"
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountCreateNestedManyWithoutCardProduceInput"
          }
        },
        "required": [
          "produce"
        ]
      },
      "CardProduceUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutCardProduceNestedInput"
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithoutCardProduceNestedInput"
          }
        }
      },
      "CardProduceCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        },
        "required": [
          "produceId"
        ]
      },
      "CardProduceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ComboProduceCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutComboProduceInput"
          }
        },
        "required": [
          "produce"
        ]
      },
      "ComboProduceUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutComboProduceNestedInput"
          }
        }
      },
      "ComboProduceCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        },
        "required": [
          "produceId"
        ]
      },
      "ComboProduceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutFreeExpressFeeRulesInput"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateNestedManyWithoutFreeExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutFreeExpressFeeRulesNestedInput"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedOneWithoutFreeExpressFeeRuleCitysInput"
          }
        },
        "required": [
          "citys",
          "limit",
          "freeExpressFeeRule"
        ]
      },
      "FreeExpressFeeRuleCityUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateOneRequiredWithoutFreeExpressFeeRuleCitysNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleCityCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "citys",
          "limit",
          "freeExpressFeeRuleId"
        ]
      },
      "FreeExpressFeeRuleCityUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutExpressFeeRulesInput"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateNestedManyWithoutExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutExpressFeeRulesNestedInput"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithoutExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedOneWithoutExpressFeeRuleCitysInput"
          }
        },
        "required": [
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRule"
        ]
      },
      "ExpressFeeRuleCityUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateOneRequiredWithoutExpressFeeRuleCitysNestedInput"
          }
        }
      },
      "ExpressFeeRuleCityCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRuleId"
        ]
      },
      "ExpressFeeRuleCityUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutPhysicalProduceInput"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          }
        },
        "required": [
          "expressFee",
          "isFreeExpressFee",
          "produce",
          "freeExpressFeeRule",
          "expressFeeRule"
        ]
      },
      "PhysicalProduceUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutPhysicalProduceNestedInput"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          }
        }
      },
      "PhysicalProduceCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "expressFeeRuleId"
        ]
      },
      "PhysicalProduceUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "I18nValueCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutI18nValuesInput"
          }
        },
        "required": [
          "key",
          "value",
          "lang"
        ]
      },
      "I18nValueUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutI18nValuesNestedInput"
          }
        }
      },
      "I18nValueCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "lang"
        ]
      },
      "I18nValueUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ConfigValueCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutConfigValuesInput"
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ConfigValueUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutConfigValuesNestedInput"
          }
        }
      },
      "ConfigValueCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ConfigValueUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        }
      },
      "VideoCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutVideosInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutVideosInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagCreateNestedManyWithoutVideosInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetCreateNestedOneWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoType"
        ]
      },
      "VideoUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutVideosNestedInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneRequiredWithoutVideosNestedInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUpdateManyWithoutVideosNestedInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetUpdateOneWithoutVideosNestedInput"
          }
        }
      },
      "VideoCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "VideoUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTypeCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutChildrenInput"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedManyWithoutParentInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutVideoTypeInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneWithoutChildrenNestedInput"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUpdateManyWithoutParentNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutVideoTypeNestedInput"
          }
        }
      },
      "VideoTypeCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTagCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutVideoTagsInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTagUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutVideoTagsNestedInput"
          }
        }
      },
      "VideoTagCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTagUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoSetCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutVideoSetInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoSetUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutVideoSetNestedInput"
          }
        }
      },
      "VideoSetCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoSetUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SiteCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pages": {
            "$ref": "#/components/schemas/PageCreateNestedManyWithoutSiteInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutSiteInput"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "pages": {
            "$ref": "#/components/schemas/PageUpdateManyWithoutSiteNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutSiteNestedInput"
          }
        }
      },
      "SiteCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PageCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "parent": {
            "$ref": "#/components/schemas/PageCreateNestedOneWithoutChildrenInput"
          },
          "children": {
            "$ref": "#/components/schemas/PageCreateNestedManyWithoutParentInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteCreateNestedOneWithoutPagesInput"
          }
        },
        "required": [
          "url",
          "site"
        ]
      },
      "PageUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/PageUpdateOneWithoutChildrenNestedInput"
          },
          "children": {
            "$ref": "#/components/schemas/PageUpdateManyWithoutParentNestedInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteUpdateOneRequiredWithoutPagesNestedInput"
          }
        }
      },
      "PageCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "siteId"
        ]
      },
      "PageUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CrawlTaskCreateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCrawlTasksInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteCreateNestedOneWithoutCrawlTasksInput"
          }
        },
        "required": [
          "site"
        ]
      },
      "CrawlTaskUpdateInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCrawlTasksNestedInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteUpdateOneRequiredWithoutCrawlTasksNestedInput"
          }
        }
      },
      "CrawlTaskCreateManyInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "siteId"
        ]
      },
      "CrawlTaskUpdateManyMutationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "StringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "StringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              }
            ]
          }
        }
      },
      "DateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              }
            ]
          }
        }
      },
      "DateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "BoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "AccountListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/AccountWhereInput"
          }
        }
      },
      "SessionListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/SessionWhereInput"
          }
        }
      },
      "UserNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "UserListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "ShopListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ShopWhereInput"
          }
        }
      },
      "ProduceListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        }
      },
      "ProduceSpecificationListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          }
        }
      },
      "FreeExpressFeeRuleListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          }
        }
      },
      "ExpressFeeRuleListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          }
        }
      },
      "ShopMemberListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          }
        }
      },
      "I18nValueListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          }
        }
      },
      "ConfigValueListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          }
        }
      },
      "LoginLogListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          }
        }
      },
      "BalanceLogListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          }
        }
      },
      "CrawlTaskListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          }
        }
      },
      "VideoListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/VideoWhereInput"
          }
        }
      },
      "SortOrderInput": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "nulls": {
            "$ref": "#/components/schemas/NullsOrder"
          }
        },
        "required": [
          "sort"
        ]
      },
      "AccountOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "SessionOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "UserOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ShopOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ProduceOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ProduceSpecificationOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "FreeExpressFeeRuleOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ExpressFeeRuleOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ShopMemberOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "I18nValueOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ConfigValueOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "LoginLogOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "BalanceLogOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "CrawlTaskOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "VideoOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "UserOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "StringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "StringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "DateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "DateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "BoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "IntNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              }
            ]
          }
        }
      },
      "UserRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        }
      },
      "AccountOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "AccountProviderProviderAccountIdCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          }
        },
        "required": [
          "provider",
          "providerAccountId"
        ]
      },
      "IntNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatNullableFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          }
        }
      },
      "SessionOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "VerificationTokenOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VerificationTokenOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationTokenOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "VerificationTokenIdentifierTokenCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "token"
        ]
      },
      "LoginLogOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "LoginLogDayUserIdCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "day",
          "userId"
        ]
      },
      "DecimalFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "in": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "lt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "lte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "not": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/NestedDecimalFilter"
              }
            ]
          }
        }
      },
      "JsonNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          }
        }
      },
      "BalanceLogNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          }
        }
      },
      "BalanceLogOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "DecimalWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "in": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "lt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "lte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "not": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/NestedDecimalWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          }
        }
      },
      "JsonNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedJsonNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedJsonNullableFilter"
          }
        }
      },
      "EnumShowStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
              }
            ]
          }
        }
      },
      "ShopOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumShowStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShowStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
          }
        }
      },
      "EnumShopMemberRoleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
              }
            ]
          }
        }
      },
      "ShopRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ShopWhereInput"
          }
        }
      },
      "ShopMemberOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "ShopMemberShopIdUserIdCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "shopId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "shopId",
          "userId"
        ]
      },
      "EnumShopMemberRoleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShopMemberRoleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
          }
        }
      },
      "ProduceSpecificationValueListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          }
        }
      },
      "ProduceRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        }
      },
      "ProduceSpecificationValueOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ProduceSpecificationOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "ProduceSpecificationRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          }
        }
      },
      "ProducePriceListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          }
        }
      },
      "ProduceSpecificationValuePriceListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          }
        }
      },
      "ProducePriceOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ProduceSpecificationValuePriceOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ProduceSpecificationValueOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumCurrencyTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
              }
            ]
          }
        }
      },
      "IntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "ProducePriceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumCurrencyTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCurrencyTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
          }
        }
      },
      "IntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "ProducePriceRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          }
        }
      },
      "ProduceSpecificationValueRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          }
        }
      },
      "ProduceSpecificationValuePriceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "ProduceSpecificationValuePriceProducePriceIdProduceSpecificationValueIdCompoundUniqueInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "produceSpecificationValueId": {
            "type": "string"
          }
        },
        "required": [
          "producePriceId",
          "produceSpecificationValueId"
        ]
      },
      "EnumProduceStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
              }
            ]
          }
        }
      },
      "EnumLimitBuyTypeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
              }
            ]
          }
        }
      },
      "EnumProduceTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
              }
            ]
          }
        }
      },
      "CardProduceNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          }
        }
      },
      "ComboProduceNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          }
        }
      },
      "PhysicalProduceNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          }
        }
      },
      "ProduceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumProduceStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
          }
        }
      },
      "EnumLimitBuyTypeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
          }
        }
      },
      "EnumProduceTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
          }
        }
      },
      "EnumCardProduceAccountStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
              }
            ]
          }
        }
      },
      "CardProduceRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          }
        }
      },
      "CardProduceAccountOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumCardProduceAccountStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
          }
        }
      },
      "CardProduceAccountListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          }
        }
      },
      "CardProduceAccountOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "CardProduceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "ComboProduceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ComboProduceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumFreeExpressFeeRuleTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          }
        }
      },
      "PhysicalProduceListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          }
        }
      },
      "FreeExpressFeeRuleCityOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "PhysicalProduceOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "FreeExpressFeeRuleOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumFreeExpressFeeRuleTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
          }
        }
      },
      "FreeExpressFeeRuleRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          }
        }
      },
      "FreeExpressFeeRuleCityOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumExpressFeeRuleTyleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          }
        }
      },
      "ExpressFeeRuleCityOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "ExpressFeeRuleOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumExpressFeeRuleTyleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
          }
        }
      },
      "ExpressFeeRuleRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          }
        }
      },
      "ExpressFeeRuleCityOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "PhysicalProduceOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "I18nValueOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumConfigValueKeyFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
              }
            ]
          }
        }
      },
      "JsonFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          }
        }
      },
      "ConfigValueOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumConfigValueKeyWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/NestedEnumConfigValueKeyWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
          }
        }
      },
      "JsonWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedJsonFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedJsonFilter"
          }
        }
      },
      "VideoTypeRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          }
        }
      },
      "VideoTagListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          }
        }
      },
      "VideoSetNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          }
        }
      },
      "VideoTagOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "VideoOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "VideoTypeNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          }
        }
      },
      "VideoTypeListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          }
        }
      },
      "VideoTypeOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "VideoTypeOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "VideoTagOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "VideoSetOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoSetOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "PageListRelationFilter": {
        "type": "object",
        "properties": {
          "every": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/PageWhereInput"
          }
        }
      },
      "PageOrderByRelationAggregateInput": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "SiteOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SiteOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumPageStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
              }
            ]
          }
        }
      },
      "PageNullableRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/PageWhereInput"
          }
        }
      },
      "SiteRelationFilter": {
        "type": "object",
        "properties": {
          "is": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/SiteWhereInput"
          }
        }
      },
      "PageOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "EnumPageStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPageStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
          }
        }
      },
      "CrawlTaskOrderByRelevanceInput": {
        "type": "object",
        "properties": {
          "fields": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskOrderByRelevanceFieldEnum"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskOrderByRelevanceFieldEnum"
                }
              }
            ]
          },
          "sort": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "search": {
            "type": "string"
          }
        },
        "required": [
          "fields",
          "sort",
          "search"
        ]
      },
      "AccountCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SessionCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviteeInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviteeInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedManyWithoutInviterInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/UserCreateManyInviterInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "I18nValueCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/I18nValueCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ConfigValueCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "LoginLogCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/LoginLogCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "AccountUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SessionUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserUncheckedCreateNestedManyWithoutInviterInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/UserCreateManyInviterInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "I18nValueUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/I18nValueCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ConfigValueUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "LoginLogUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/LoginLogCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUncheckedCreateNestedManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyUserInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoUncheckedCreateNestedManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyCreatorInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "StringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        }
      },
      "NullableStringFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string"
          }
        }
      },
      "NullableDateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DateTimeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BoolFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean"
          }
        }
      },
      "AccountUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SessionUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserUpdateOneWithoutInviteeNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviteeInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviteeInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutInviteeInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInviteeInput"
              }
            ]
          }
        }
      },
      "UserUpdateManyWithoutInviterNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutInviterInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/UserCreateManyInviterInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutInviterInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutInviterInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "I18nValueUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/I18nValueCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ConfigValueUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "LoginLogUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/LoginLogCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/AccountCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/SessionCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserUncheckedUpdateManyWithoutInviterNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
                }
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateOrConnectWithoutInviterInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpsertWithWhereUniqueWithoutInviterInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/UserCreateManyInviterInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateWithWhereUniqueWithoutInviterInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserUpdateManyWithWhereWithoutInviterInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "I18nValueUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/I18nValueCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "LoginLogUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/LoginLogCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutUserNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutUserInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyUserInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutUserInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutUserInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutCreatorNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutCreatorInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyCreatorInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutCreatorInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutCreatorInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "NullableIntFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "integer"
          },
          "increment": {
            "type": "integer"
          },
          "decrement": {
            "type": "integer"
          },
          "multiply": {
            "type": "integer"
          },
          "divide": {
            "type": "integer"
          }
        }
      },
      "UserUpdateOneRequiredWithoutAccountsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "UserUpdateOneRequiredWithoutSessionsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutLoginLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutLoginLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "UserUpdateOneRequiredWithoutLoginLogsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutLoginLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutLoginLogsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutLoginLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutLoginLogsInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCreatorBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutCreatorBalanceLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "BalanceLogCreateNestedOneWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutBalanceLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          }
        }
      },
      "BalanceLogCreateNestedManyWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutBalanceLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "BalanceLogUncheckedCreateNestedManyWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "DecimalFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "increment": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "decrement": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "multiply": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "divide": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "UserUpdateOneWithoutCreatorBalanceLogsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCreatorBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutCreatorBalanceLogsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutCreatorBalanceLogsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCreatorBalanceLogsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUpdateOneWithoutBalanceLogsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutBalanceLogsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/BalanceLogUpsertWithoutBalanceLogsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateToOneWithWhereWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUpdateManyWithoutPreBalanceLogNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutBalanceLogsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutBalanceLogsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutBalanceLogsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutPreBalanceLogNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
                }
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateOrConnectWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpsertWithWhereUniqueWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateWithWhereUniqueWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogUpdateManyWithWhereWithoutPreBalanceLogInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutShopsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutShopsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ProduceCreateNestedManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyShopInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberCreateNestedManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyShopInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUncheckedCreateNestedManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyShopInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedCreateNestedManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyShopInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "EnumShowStatusFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ShowStatus"
          }
        }
      },
      "UserUpdateOneWithoutShopsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutShopsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutShopsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopsInput"
              }
            ]
          }
        }
      },
      "ProduceUpdateManyWithoutShopNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyShopInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutShopInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUpdateManyWithoutShopNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyShopInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutShopInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUncheckedUpdateManyWithoutShopNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpsertWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceCreateManyShopInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceUpdateManyWithWhereWithoutShopInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedUpdateManyWithoutShopNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
                }
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateOrConnectWithoutShopInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpsertWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ShopMemberCreateManyShopInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateWithWhereUniqueWithoutShopInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberUpdateManyWithWhereWithoutShopInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ShopCreateNestedOneWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutShopMemberInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ShopCreateOrConnectWithoutShopMemberInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          }
        }
      },
      "UserCreateNestedOneWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutShopMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "EnumShopMemberRoleFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ShopMemberRole"
          }
        }
      },
      "ShopUpdateOneRequiredWithoutShopMemberNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutShopMemberInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ShopCreateOrConnectWithoutShopMemberInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ShopUpsertWithoutShopMemberInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateToOneWithWhereWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutShopMemberInput"
              }
            ]
          }
        }
      },
      "UserUpdateOneRequiredWithoutShopMembersNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopMembersInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutShopMembersInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutShopMembersInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopMembersInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProduceSpecificationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutProduceSpecificationsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationValueCreateNestedManyWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceCreateNestedOneWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutProduceSpecificationInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedCreateNestedManyWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserUpdateOneWithoutProduceSpecificationsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProduceSpecificationsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutProduceSpecificationsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutProduceSpecificationsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProduceSpecificationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUpdateManyWithoutProduceSpecificationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUpdateOneRequiredWithoutProduceSpecificationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutProduceSpecificationInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceUpsertWithoutProduceSpecificationInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateToOneWithWhereWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProduceSpecificationInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateManyWithoutProduceSpecificationNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProduceSpecificationInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationCreateNestedOneWithoutValuesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutValuesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          }
        }
      },
      "ProducePriceCreateNestedManyWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceCreateNestedManyWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceUncheckedCreateNestedManyWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationUpdateOneRequiredWithoutValuesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutValuesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceSpecificationUpsertWithoutValuesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateToOneWithWhereWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutValuesInput"
              }
            ]
          }
        }
      },
      "ProducePriceUpdateManyWithoutProduceSpecificationValuesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateManyWithoutProduceSpecificationValueNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceUncheckedUpdateManyWithoutProduceSpecificationValuesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProduceSpecificationValuesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProduceSpecificationValuesInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProduceSpecificationValueNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProduceSpecificationValueInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceCreateNestedOneWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutProducePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationValueCreateNestedManyWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceCreateNestedManyWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUncheckedCreateNestedManyWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "EnumCurrencyTypeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/CurrencyType"
          }
        }
      },
      "IntFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "type": "integer"
          },
          "increment": {
            "type": "integer"
          },
          "decrement": {
            "type": "integer"
          },
          "multiply": {
            "type": "integer"
          },
          "divide": {
            "type": "integer"
          }
        }
      },
      "ProduceUpdateOneRequiredWithoutProducePriceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutProducePriceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceUpsertWithoutProducePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateToOneWithWhereWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProducePriceInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUpdateManyWithoutProducePricesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProducePricesInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProducePricesInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProducePricesInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateManyWithoutProducePriceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProducePriceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProducePriceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProducePriceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateManyWithoutProducePricesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithWhereUniqueWithoutProducePricesInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithWhereUniqueWithoutProducePricesInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProducePricesInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithWhereWithoutProducePricesInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProducePriceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProducePriceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProducePriceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProducePriceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceCreateNestedOneWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationValueCreateNestedOneWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationValuePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          }
        }
      },
      "ProducePriceUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProduceSpecificationValuePriceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProducePriceUpsertWithoutProduceSpecificationValuePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateToOneWithWhereWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationValuePriceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpsertWithoutProduceSpecificationValuePriceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateToOneWithWhereWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutProducsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutProducsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ShopCreateNestedOneWithoutProducsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ShopCreateOrConnectWithoutProducsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationCreateNestedManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceCreateNestedManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProducePriceCreateManyProducInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          }
        }
      },
      "ComboProduceCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ComboProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          }
        }
      },
      "PhysicalProduceCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          }
        }
      },
      "ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceUncheckedCreateNestedManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProducePriceCreateManyProducInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceUncheckedCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          }
        }
      },
      "ComboProduceUncheckedCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ComboProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          }
        }
      },
      "PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          }
        }
      },
      "EnumProduceStatusFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ProduceStatus"
          }
        }
      },
      "NullableEnumLimitBuyTypeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/LimitBuyType"
          }
        }
      },
      "EnumProduceTypeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ProduceType"
          }
        }
      },
      "UserUpdateOneWithoutProducsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutProducsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutProducsInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProducsInput"
              }
            ]
          }
        }
      },
      "ShopUpdateOneRequiredWithoutProducsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ShopCreateOrConnectWithoutProducsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ShopUpsertWithoutProducsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateToOneWithWhereWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutProducsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationUpdateManyWithoutProducNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutProducInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceUpdateManyWithoutProducNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProducePriceCreateManyProducInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProducInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CardProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "ComboProduceUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ComboProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ComboProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/PhysicalProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpsertWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithWhereWithoutProducInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProducePriceUncheckedUpdateManyWithoutProducNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
                }
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateOrConnectWithoutProducInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpsertWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ProducePriceCreateManyProducInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateWithWhereUniqueWithoutProducInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceUpdateManyWithWhereWithoutProducInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceUncheckedUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CardProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "ComboProduceUncheckedUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ComboProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ComboProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/PhysicalProduceUpsertWithoutProduceInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateToOneWithWhereWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        }
      },
      "CardProduceCreateNestedOneWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutCardProduceAccountsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutCardProduceAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          }
        }
      },
      "EnumCardProduceAccountStatusFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          }
        }
      },
      "CardProduceUpdateOneRequiredWithoutCardProduceAccountsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutCardProduceAccountsInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/CardProduceCreateOrConnectWithoutCardProduceAccountsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/CardProduceUpsertWithoutCardProduceAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateToOneWithWhereWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutCardProduceAccountsInput"
              }
            ]
          }
        }
      },
      "ProduceCreateNestedOneWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCardProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCardProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          }
        }
      },
      "CardProduceAccountCreateNestedManyWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
                }
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceAccountUncheckedCreateNestedManyWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
                }
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ProduceUpdateOneRequiredWithoutCardProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCardProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutCardProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceUpsertWithoutCardProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateToOneWithWhereWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutCardProduceInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountUpdateManyWithoutCardProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
                }
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpsertWithWhereUniqueWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpsertWithWhereUniqueWithoutCardProduceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateWithWhereUniqueWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpdateWithWhereUniqueWithoutCardProduceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithWhereWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithWhereWithoutCardProduceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CardProduceAccountUncheckedUpdateManyWithoutCardProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
                }
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateOrConnectWithoutCardProduceInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpsertWithWhereUniqueWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpsertWithWhereUniqueWithoutCardProduceInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateWithWhereUniqueWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpdateWithWhereUniqueWithoutCardProduceInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithWhereWithoutCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithWhereWithoutCardProduceInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ProduceCreateNestedOneWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutComboProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutComboProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          }
        }
      },
      "ProduceUpdateOneRequiredWithoutComboProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutComboProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutComboProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceUpsertWithoutComboProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateToOneWithWhereWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutComboProduceInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutFreeExpressFeeRulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutFreeExpressFeeRulesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "FreeExpressFeeRuleCityCreateNestedManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceCreateNestedManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          }
        }
      },
      "UserUpdateOneWithoutFreeExpressFeeRulesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutFreeExpressFeeRulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutFreeExpressFeeRulesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutFreeExpressFeeRulesInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutFreeExpressFeeRulesInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityUpdateManyWithoutFreeExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUpdateManyWithoutFreeExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCreateNestedOneWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutFreeExpressFeeRuleCitysInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          }
        }
      },
      "FreeExpressFeeRuleUpdateOneRequiredWithoutFreeExpressFeeRuleCitysNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutFreeExpressFeeRuleCitysInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithoutFreeExpressFeeRuleCitysInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateToOneWithWhereWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutExpressFeeRulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutExpressFeeRulesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "ExpressFeeRuleCityCreateNestedManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceCreateNestedManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityUncheckedCreateNestedManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedCreateNestedManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "EnumExpressFeeRuleTyleFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          }
        }
      },
      "UserUpdateOneWithoutExpressFeeRulesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutExpressFeeRulesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutExpressFeeRulesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutExpressFeeRulesInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutExpressFeeRulesInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityUpdateManyWithoutExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithWhereWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithWhereWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUpdateManyWithoutExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityUncheckedUpdateManyWithoutExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithWhereWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithWhereWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedUpdateManyWithoutExpressFeeRuleNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
                }
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpsertWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateWithWhereUniqueWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithWhereWithoutExpressFeeRuleInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCreateNestedOneWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutExpressFeeRuleCitysInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutExpressFeeRuleCitysInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          }
        }
      },
      "ExpressFeeRuleUpdateOneRequiredWithoutExpressFeeRuleCitysNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutExpressFeeRuleCitysInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutExpressFeeRuleCitysInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithoutExpressFeeRuleCitysInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateToOneWithWhereWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutExpressFeeRuleCitysInput"
              }
            ]
          }
        }
      },
      "ProduceCreateNestedOneWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutPhysicalProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutPhysicalProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          }
        }
      },
      "FreeExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          }
        }
      },
      "ExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          }
        }
      },
      "ProduceUpdateOneRequiredWithoutPhysicalProduceNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutPhysicalProduceInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ProduceCreateOrConnectWithoutPhysicalProduceInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ProduceUpsertWithoutPhysicalProduceInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateToOneWithWhereWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutPhysicalProduceInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertWithoutPhysicalProducesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateToOneWithWhereWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpsertWithoutPhysicalProducesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateToOneWithWhereWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutI18nValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutI18nValuesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "UserUpdateOneWithoutI18nValuesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutI18nValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutI18nValuesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutI18nValuesInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutI18nValuesInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutConfigValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutConfigValuesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "EnumConfigValueKeyFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/ConfigValueKey"
          }
        }
      },
      "UserUpdateOneWithoutConfigValuesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutConfigValuesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutConfigValuesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutConfigValuesInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutConfigValuesInput"
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutVideosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutVideosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "VideoTypeCreateNestedOneWithoutVideosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutVideosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          }
        }
      },
      "VideoTagCreateNestedManyWithoutVideosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoSetCreateNestedOneWithoutVideosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoSetCreateOrConnectWithoutVideosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          }
        }
      },
      "VideoTagUncheckedCreateNestedManyWithoutVideosInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "UserUpdateOneWithoutVideosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutVideosInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutVideosInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        }
      },
      "VideoTypeUpdateOneRequiredWithoutVideosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutVideosInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/VideoTypeUpsertWithoutVideosInput"
          },
          "connect": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateToOneWithWhereWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        }
      },
      "VideoTagUpdateManyWithoutVideosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpsertWithWhereUniqueWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpsertWithWhereUniqueWithoutVideosInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateWithWhereUniqueWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpdateWithWhereUniqueWithoutVideosInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateManyWithWhereWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpdateManyWithWhereWithoutVideosInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoSetUpdateOneWithoutVideosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoSetCreateOrConnectWithoutVideosInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/VideoSetUpsertWithoutVideosInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetUpdateToOneWithWhereWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        }
      },
      "VideoTagUncheckedUpdateManyWithoutVideosNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagCreateOrConnectWithoutVideosInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpsertWithWhereUniqueWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpsertWithWhereUniqueWithoutVideosInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateWithWhereUniqueWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpdateWithWhereUniqueWithoutVideosInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateManyWithWhereWithoutVideosInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagUpdateManyWithWhereWithoutVideosInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoTypeCreateNestedOneWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutChildrenInput"
          },
          "connect": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          }
        }
      },
      "VideoTypeCreateNestedManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoTypeCreateManyParentInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoCreateNestedManyWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoTypeInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoTypeUncheckedCreateNestedManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoTypeCreateManyParentInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoUncheckedCreateNestedManyWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoTypeInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoTypeUpdateOneWithoutChildrenNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutChildrenInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/VideoTypeUpsertWithoutChildrenInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateToOneWithWhereWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutChildrenInput"
              }
            ]
          }
        }
      },
      "VideoTypeUpdateManyWithoutParentNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpsertWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpsertWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoTypeCreateManyParentInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpdateWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateManyWithWhereWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpdateManyWithWhereWithoutParentInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoUpdateManyWithoutVideoTypeNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTypeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoTypeInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTypeInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTypeInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoTypeUncheckedUpdateManyWithoutParentNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpsertWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpsertWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoTypeCreateManyParentInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpdateWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateManyWithWhereWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeUpdateManyWithWhereWithoutParentInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutVideoTypeNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTypeInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTypeInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoTypeInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTypeInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTypeInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoCreateNestedManyWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTagsInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoUpdateManyWithoutVideoTagsNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoTagsInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoTagsInput"
                }
              }
            ]
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoTagsInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTagsInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoTagsInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "VideoCreateNestedManyWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoSetInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoSetInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "VideoUpdateManyWithoutVideoSetNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
                }
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateOrConnectWithoutVideoSetInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpsertWithWhereUniqueWithoutVideoSetInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/VideoCreateManyVideoSetInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateWithWhereUniqueWithoutVideoSetInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoUpdateManyWithWhereWithoutVideoSetInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PageCreateNestedManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManySiteInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskCreateNestedManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManySiteInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PageUncheckedCreateNestedManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManySiteInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedCreateNestedManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManySiteInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "PageUpdateManyWithoutSiteNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManySiteInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutSiteInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUpdateManyWithoutSiteNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManySiteInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutSiteInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PageUncheckedUpdateManyWithoutSiteNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManySiteInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutSiteInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedUpdateManyWithoutSiteNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
                }
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateOrConnectWithoutSiteInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpsertWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/CrawlTaskCreateManySiteInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateWithWhereUniqueWithoutSiteInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutSiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskUpdateManyWithWhereWithoutSiteInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "PageCreateNestedOneWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PageCreateOrConnectWithoutChildrenInput"
          },
          "connect": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          }
        }
      },
      "PageCreateNestedManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManyParentInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "SiteCreateNestedOneWithoutPagesInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutPagesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SiteCreateOrConnectWithoutPagesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          }
        }
      },
      "PageUncheckedCreateNestedManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManyParentInputEnvelope"
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          }
        }
      },
      "EnumPageStatusFieldUpdateOperationsInput": {
        "type": "object",
        "properties": {
          "set": {
            "$ref": "#/components/schemas/PageStatus"
          }
        }
      },
      "PageUpdateOneWithoutChildrenNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/PageCreateOrConnectWithoutChildrenInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/PageUpsertWithoutChildrenInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateToOneWithWhereWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutChildrenInput"
              }
            ]
          }
        }
      },
      "PageUpdateManyWithoutParentNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManyParentInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutParentInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "SiteUpdateOneRequiredWithoutPagesNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutPagesInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SiteCreateOrConnectWithoutPagesInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SiteUpsertWithoutPagesInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateToOneWithWhereWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutPagesInput"
              }
            ]
          }
        }
      },
      "PageUncheckedUpdateManyWithoutParentNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateWithoutParentInput"
                }
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
                }
              }
            ]
          },
          "connectOrCreate": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateOrConnectWithoutParentInput"
                }
              }
            ]
          },
          "upsert": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpsertWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "createMany": {
            "$ref": "#/components/schemas/PageCreateManyParentInputEnvelope"
          },
          "set": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "disconnect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "connect": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageWhereUniqueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageWhereUniqueInput"
                }
              }
            ]
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateWithWhereUniqueWithoutParentInput"
                }
              }
            ]
          },
          "updateMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageUpdateManyWithWhereWithoutParentInput"
                }
              }
            ]
          },
          "deleteMany": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          }
        }
      },
      "UserCreateNestedOneWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutCrawlTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          }
        }
      },
      "SiteCreateNestedOneWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SiteCreateOrConnectWithoutCrawlTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          }
        }
      },
      "UserUpdateOneWithoutCrawlTasksNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/UserCreateOrConnectWithoutCrawlTasksInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/UserUpsertWithoutCrawlTasksInput"
          },
          "disconnect": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "delete": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserWhereInput"
              }
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateToOneWithWhereWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          }
        }
      },
      "SiteUpdateOneRequiredWithoutCrawlTasksNestedInput": {
        "type": "object",
        "properties": {
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/SiteCreateOrConnectWithoutCrawlTasksInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/SiteUpsertWithoutCrawlTasksInput"
          },
          "connect": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateToOneWithWhereWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          }
        }
      },
      "NestedStringFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringFilter"
              }
            ]
          }
        }
      },
      "NestedStringNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeFilter"
              }
            ]
          }
        }
      },
      "NestedBoolFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolFilter"
              }
            ]
          }
        }
      },
      "NestedStringWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringFilter"
          }
        }
      },
      "NestedIntFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntFilter"
              }
            ]
          }
        }
      },
      "NestedStringNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lt": {
            "type": "string"
          },
          "lte": {
            "type": "string"
          },
          "gt": {
            "type": "string"
          },
          "gte": {
            "type": "string"
          },
          "contains": {
            "type": "string"
          },
          "startsWith": {
            "type": "string"
          },
          "endsWith": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "not": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NestedStringNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedStringNullableFilter"
          }
        }
      },
      "NestedIntNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableFilter"
              }
            ]
          }
        }
      },
      "NestedDateTimeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeNullableFilter"
          }
        }
      },
      "NestedDateTimeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "string",
            "format": "date-time"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "lt": {
            "type": "string",
            "format": "date-time"
          },
          "lte": {
            "type": "string",
            "format": "date-time"
          },
          "gt": {
            "type": "string",
            "format": "date-time"
          },
          "gte": {
            "type": "string",
            "format": "date-time"
          },
          "not": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NestedDateTimeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDateTimeFilter"
          }
        }
      },
      "NestedBoolWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "boolean"
          },
          "not": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/NestedBoolWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedBoolFilter"
          }
        }
      },
      "NestedIntNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatNullableFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          }
        }
      },
      "NestedFloatNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatNullableFilter"
              }
            ]
          }
        }
      },
      "NestedDecimalFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "in": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "lt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "lte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "not": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/NestedDecimalFilter"
              }
            ]
          }
        }
      },
      "NestedDecimalWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "in": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "lt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "lte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gt": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "gte": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "not": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/NestedDecimalWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedDecimalFilter"
          }
        }
      },
      "NestedJsonNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          }
        }
      },
      "NestedEnumShowStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
              }
            ]
          }
        }
      },
      "NestedEnumShowStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShowStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShowStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumShowStatusFilter"
          }
        }
      },
      "NestedEnumShopMemberRoleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
              }
            ]
          }
        }
      },
      "NestedEnumShopMemberRoleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberRole"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/NestedEnumShopMemberRoleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumShopMemberRoleFilter"
          }
        }
      },
      "NestedEnumCurrencyTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
              }
            ]
          }
        }
      },
      "NestedEnumCurrencyTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCurrencyTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumCurrencyTypeFilter"
          }
        }
      },
      "NestedIntWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "integer"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "lt": {
            "type": "integer"
          },
          "lte": {
            "type": "integer"
          },
          "gt": {
            "type": "integer"
          },
          "gte": {
            "type": "integer"
          },
          "not": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NestedIntWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_avg": {
            "$ref": "#/components/schemas/NestedFloatFilter"
          },
          "_sum": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedIntFilter"
          }
        }
      },
      "NestedFloatFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "type": "number"
          },
          "in": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lt": {
            "type": "number"
          },
          "lte": {
            "type": "number"
          },
          "gt": {
            "type": "number"
          },
          "gte": {
            "type": "number"
          },
          "not": {
            "oneOf": [
              {
                "type": "number"
              },
              {
                "$ref": "#/components/schemas/NestedFloatFilter"
              }
            ]
          }
        }
      },
      "NestedEnumProduceStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
              }
            ]
          }
        }
      },
      "NestedEnumLimitBuyTypeNullableFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
              }
            ]
          }
        }
      },
      "NestedEnumProduceTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
              }
            ]
          }
        }
      },
      "NestedEnumProduceStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumProduceStatusFilter"
          }
        }
      },
      "NestedEnumLimitBuyTypeNullableWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitBuyType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntNullableFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumLimitBuyTypeNullableFilter"
          }
        }
      },
      "NestedEnumProduceTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumProduceTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumProduceTypeFilter"
          }
        }
      },
      "NestedEnumCardProduceAccountStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
              }
            ]
          }
        }
      },
      "NestedEnumCardProduceAccountStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumCardProduceAccountStatusFilter"
          }
        }
      },
      "NestedEnumFreeExpressFeeRuleTypeFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
              }
            ]
          }
        }
      },
      "NestedEnumFreeExpressFeeRuleTypeWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleType"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumFreeExpressFeeRuleTypeFilter"
          }
        }
      },
      "NestedEnumExpressFeeRuleTyleFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
              }
            ]
          }
        }
      },
      "NestedEnumExpressFeeRuleTyleWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleTyle"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumExpressFeeRuleTyleFilter"
          }
        }
      },
      "NestedEnumConfigValueKeyFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
              }
            ]
          }
        }
      },
      "NestedEnumConfigValueKeyWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueKey"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/NestedEnumConfigValueKeyWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumConfigValueKeyFilter"
          }
        }
      },
      "NestedJsonFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          },
          "path": {
            "type": "string"
          },
          "string_contains": {
            "type": "string"
          },
          "string_starts_with": {
            "type": "string"
          },
          "string_ends_with": {
            "type": "string"
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {
            "oneOf": [
              {},
              {
                "$ref": "#/components/schemas/JsonNullValueFilter"
              }
            ]
          }
        }
      },
      "NestedEnumPageStatusFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
              }
            ]
          }
        }
      },
      "NestedEnumPageStatusWithAggregatesFilter": {
        "type": "object",
        "properties": {
          "equals": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "in": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "notIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageStatus"
            }
          },
          "not": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/NestedEnumPageStatusWithAggregatesFilter"
              }
            ]
          },
          "_count": {
            "$ref": "#/components/schemas/NestedIntFilter"
          },
          "_min": {
            "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
          },
          "_max": {
            "$ref": "#/components/schemas/NestedEnumPageStatusFilter"
          }
        }
      },
      "AccountCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "AccountUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "AccountCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "AccountCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "SessionCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sessionToken",
          "expires"
        ]
      },
      "SessionUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sessionToken",
          "expires"
        ]
      },
      "SessionCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SessionCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserCreateWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviteeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutInviterInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateManyInviterInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateManyInviterInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserCreateManyInviterInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ShopCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutShopInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutShopInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ShopCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceSpecificationCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProduceSpecificationInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name",
          "produc"
        ]
      },
      "ProduceSpecificationUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateNestedManyWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name",
          "producId"
        ]
      },
      "ProduceSpecificationCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "FreeExpressFeeRuleCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateNestedManyWithoutFreeExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FreeExpressFeeRuleCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ExpressFeeRuleCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateNestedManyWithoutExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateNestedManyWithoutExpressFeeRuleInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ExpressFeeRuleCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ShopMemberCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutShopMemberInput"
          }
        },
        "required": [
          "role",
          "shop"
        ]
      },
      "ShopMemberUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "shopId"
        ]
      },
      "ShopMemberCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ShopMemberCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "I18nValueCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "lang"
        ]
      },
      "I18nValueUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "lang"
        ]
      },
      "I18nValueCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "I18nValueCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ConfigValueCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ConfigValueUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "ConfigValueCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ConfigValueCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "LoginLogCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "day",
          "endAt"
        ]
      },
      "LoginLogUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "day",
          "endAt"
        ]
      },
      "LoginLogCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "LoginLogCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BalanceLogCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCreatorBalanceLogsInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedOneWithoutBalanceLogsInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutPreBalanceLogInput"
          }
        },
        "required": [
          "remark"
        ]
      },
      "BalanceLogUncheckedCreateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutPreBalanceLogInput"
          }
        },
        "required": [
          "remark"
        ]
      },
      "BalanceLogCreateOrConnectWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BalanceLogCreateManyUserInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateManyUserInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateManyUserInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "BalanceLogCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedOneWithoutBalanceLogsInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutPreBalanceLogInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutBalanceLogsInput"
          }
        },
        "required": [
          "remark",
          "user"
        ]
      },
      "BalanceLogUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutPreBalanceLogInput"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "BalanceLogCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BalanceLogCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "CrawlTaskCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "site": {
            "$ref": "#/components/schemas/SiteCreateNestedOneWithoutCrawlTasksInput"
          }
        },
        "required": [
          "site"
        ]
      },
      "CrawlTaskUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "siteId"
        ]
      },
      "CrawlTaskCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CrawlTaskCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutVideosInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagCreateNestedManyWithoutVideosInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetCreateNestedOneWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoType"
        ]
      },
      "VideoUncheckedCreateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedCreateNestedManyWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "VideoCreateOrConnectWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoCreateManyCreatorInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateManyCreatorInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateManyCreatorInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "AccountUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "AccountUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "AccountUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "AccountScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountScalarWhereInput"
                }
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "SessionUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "SessionUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SessionUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SessionScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SessionScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SessionScalarWhereInput"
                }
              }
            ]
          },
          "sessionToken": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "UserUpsertWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInviteeInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviteeInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInviteeInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInviteeInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutInviteeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUpsertWithWhereUniqueWithoutInviterInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInviterInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInviterInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutInviterInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutInviterInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "UserUpdateWithWhereUniqueWithoutInviterInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutInviterInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutInviterInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserUpdateManyWithWhereWithoutInviterInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ShopUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ShopUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShowStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ShowStatus"
              }
            ]
          }
        }
      },
      "ProduceUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceStatusFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceStatus"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumLimitBuyTypeNullableFilter"
              },
              {
                "$ref": "#/components/schemas/LimitBuyType"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntNullableFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumProduceTypeFilter"
              },
              {
                "$ref": "#/components/schemas/ProduceType"
              }
            ]
          }
        }
      },
      "ProduceSpecificationUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "FreeExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FreeExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FreeExpressFeeRuleScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFilter"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ExpressFeeRuleUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ExpressFeeRuleUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ExpressFeeRuleScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFilter"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ShopMemberUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ShopMemberUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopMemberUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopMemberScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
                }
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFilter"
              },
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "I18nValueUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "I18nValueUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "I18nValueUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "I18nValueScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/I18nValueScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/I18nValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/I18nValueScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ConfigValueUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ConfigValueUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ConfigValueUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ConfigValueScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigValueScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFilter"
              },
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              }
            ]
          },
          "value": {
            "$ref": "#/components/schemas/JsonFilter"
          }
        }
      },
      "LoginLogUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "LoginLogUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "LoginLogUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "LoginLogScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LoginLogScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoginLogScalarWhereInput"
                }
              }
            ]
          },
          "day": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          }
        }
      },
      "BalanceLogUpsertWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutUserInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BalanceLogUpdateWithWhereUniqueWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutUserInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BalanceLogUpdateManyWithWhereWithoutUserInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BalanceLogScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "log": {
            "$ref": "#/components/schemas/JsonNullableFilter"
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "BalanceLogUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BalanceLogUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BalanceLogUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CrawlTaskUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "CrawlTaskUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CrawlTaskUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CrawlTaskScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoUpsertWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutCreatorInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoUpdateWithWhereUniqueWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutCreatorInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoUpdateManyWithWhereWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "UserCreateWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutAccountsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutSessionsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutSessionsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutLoginLogsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutLoginLogsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutLoginLogsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutLoginLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutLoginLogsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutLoginLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCreatorBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BalanceLogCreateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCreatorBalanceLogsInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedOneWithoutBalanceLogsInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutBalanceLogsInput"
          }
        },
        "required": [
          "remark",
          "user"
        ]
      },
      "BalanceLogUncheckedCreateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "BalanceLogCreateOrConnectWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BalanceLogCreateWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCreatorBalanceLogsInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutPreBalanceLogInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutBalanceLogsInput"
          }
        },
        "required": [
          "remark",
          "user"
        ]
      },
      "BalanceLogUncheckedCreateWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutPreBalanceLogInput"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "BalanceLogCreateOrConnectWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "BalanceLogCreateManyPreBalanceLogInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BalanceLogCreateManyPreBalanceLogInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserCreateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCreatorBalanceLogsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCreatorBalanceLogsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCreatorBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCreatorBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutCreatorBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "BalanceLogUpsertWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "BalanceLogUpdateToOneWithWhereWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "BalanceLogUpdateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCreatorBalanceLogsNestedInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogUpdateOneWithoutBalanceLogsNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutBalanceLogsNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUpsertWithWhereUniqueWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutPreBalanceLogInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutPreBalanceLogInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogCreateWithoutPreBalanceLogInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedCreateWithoutPreBalanceLogInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "BalanceLogUpdateWithWhereUniqueWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateWithoutPreBalanceLogInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateWithoutPreBalanceLogInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "BalanceLogUpdateManyWithWhereWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceLogUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutPreBalanceLogInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "UserUpsertWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutBalanceLogsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutBalanceLogsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutBalanceLogsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutBalanceLogsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutShopsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutShopsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutShopsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceCreateWithoutShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice"
        ]
      },
      "ProduceUncheckedCreateWithoutShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice"
        ]
      },
      "ProduceCreateOrConnectWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceCreateManyShopInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateManyShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceCreateManyShopInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ShopMemberCreateWithoutShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "user": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutShopMembersInput"
          }
        },
        "required": [
          "role",
          "user"
        ]
      },
      "ShopMemberUncheckedCreateWithoutShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "userId"
        ]
      },
      "ShopMemberCreateOrConnectWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ShopMemberCreateManyShopInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateManyShopInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShopMemberCreateManyShopInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpsertWithoutShopsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutShopsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutShopsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutShopsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "ProduceUpsertWithWhereUniqueWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutShopInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceUpdateWithWhereUniqueWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceUpdateManyWithWhereWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopMemberUpsertWithWhereUniqueWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateWithoutShopInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberCreateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedCreateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ShopMemberUpdateWithWhereUniqueWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateWithoutShopInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopMemberUpdateManyWithWhereWithoutShopInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutShopInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ShopCreateWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutShopsInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopUncheckedCreateWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopCreateOrConnectWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutShopMemberInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserCreateWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopMembersInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ShopUpsertWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutShopMemberInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutShopMemberInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ShopUpdateToOneWithWhereWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutShopMemberInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutShopMemberInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ShopUpdateWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutShopsNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ShopUncheckedUpdateWithoutShopMemberInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "UserUpsertWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopMembersInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutShopMembersInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutShopMembersInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutShopMembersInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutShopMembersInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProduceSpecificationsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValueCreateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProduceSpecificationValuesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProduceSpecificationValueInput"
          }
        },
        "required": [
          "value"
        ]
      },
      "ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProduceSpecificationValuesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProduceSpecificationValueInput"
          }
        },
        "required": [
          "value"
        ]
      },
      "ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValueCreateManyProduceSpecificationInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyProduceSpecificationInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceCreateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProduceSpecificationsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProduceSpecificationsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProduceSpecificationsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProduceSpecificationsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutProduceSpecificationsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUpsertWithWhereUniqueWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationValueUpdateWithWhereUniqueWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValueUpdateManyWithWhereWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValueScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          }
        }
      },
      "ProduceUpsertWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProduceSpecificationInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProduceSpecificationInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceUpdateToOneWithWhereWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProduceSpecificationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProduceSpecificationInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpdateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceSpecificationCreateWithoutValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProduceSpecificationsInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name",
          "produc"
        ]
      },
      "ProduceSpecificationUncheckedCreateWithoutValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "producId"
        ]
      },
      "ProduceSpecificationCreateOrConnectWithoutValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProducePriceCreateWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProducePriceInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProducePriceInput"
          }
        },
        "required": [
          "reduceStock",
          "produc"
        ]
      },
      "ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProducePriceInput"
          }
        },
        "required": [
          "reduceStock",
          "producId"
        ]
      },
      "ProducePriceCreateOrConnectWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedOneWithoutProduceSpecificationValuePriceInput"
          }
        },
        "required": [
          "producePrice"
        ]
      },
      "ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          }
        },
        "required": [
          "producePriceId"
        ]
      },
      "ProduceSpecificationValuePriceCreateOrConnectWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceSpecificationUpsertWithoutValuesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutValuesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutValuesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceSpecificationUpdateToOneWithWhereWithoutValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutValuesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceSpecificationUpdateWithoutValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProduceSpecificationsNestedInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateWithoutValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProducePriceUpsertWithWhereUniqueWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProduceSpecificationValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProduceSpecificationValuesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProducePriceUpdateWithWhereUniqueWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProduceSpecificationValuesInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProduceSpecificationValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProducePriceUpdateManyWithWhereWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProduceSpecificationValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProducePriceScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFilter"
              },
              {
                "$ref": "#/components/schemas/CurrencyType"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeNullableFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithoutProduceSpecificationValueInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateWithoutProduceSpecificationValueInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProduceSpecificationValueInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProduceSpecificationValueInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithoutProduceSpecificationValueInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateWithoutProduceSpecificationValueInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProduceSpecificationValueInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValuePriceScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
                }
              }
            ]
          },
          "producePriceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceCreateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValueCreateWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedOneWithoutValuesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProduceSpecificationValueInput"
          }
        },
        "required": [
          "value",
          "produceSpecification"
        ]
      },
      "ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProduceSpecificationValueInput"
          }
        },
        "required": [
          "value",
          "produceSpecificationId"
        ]
      },
      "ProduceSpecificationValueCreateOrConnectWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceCreateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedOneWithoutProduceSpecificationValuePriceInput"
          }
        },
        "required": [
          "produceSpecificationValue"
        ]
      },
      "ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValueId": {
            "type": "string"
          }
        },
        "required": [
          "produceSpecificationValueId"
        ]
      },
      "ProduceSpecificationValuePriceCreateOrConnectWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceCreateManyProducePriceInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyProducePriceInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpsertWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProducePriceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceUpdateToOneWithWhereWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpdateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUpsertWithWhereUniqueWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProducePricesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProducePricesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProducePricesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProducePricesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationValueUpdateWithWhereUniqueWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProducePricesInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProducePricesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValueUpdateManyWithWhereWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProducePricesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValuePriceUpsertWithWhereUniqueWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateWithoutProducePriceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationValuePriceUpdateWithWhereUniqueWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateWithoutProducePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationValuePriceUpdateManyWithWhereWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProducePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProducePriceCreateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutProducePriceInput"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProducePricesInput"
          }
        },
        "required": [
          "reduceStock",
          "produc"
        ]
      },
      "ProducePriceUncheckedCreateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateNestedManyWithoutProducePricesInput"
          }
        },
        "required": [
          "reduceStock",
          "producId"
        ]
      },
      "ProducePriceCreateOrConnectWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationValueCreateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedOneWithoutValuesInput"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProduceSpecificationValuesInput"
          }
        },
        "required": [
          "value",
          "produceSpecification"
        ]
      },
      "ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProduceSpecificationValuesInput"
          }
        },
        "required": [
          "value",
          "produceSpecificationId"
        ]
      },
      "ProduceSpecificationValueCreateOrConnectWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProducePriceUpsertWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProducePriceUpdateToOneWithWhereWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProducePriceUpdateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProducePriceNestedInput"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProducePricesNestedInput"
          }
        }
      },
      "ProducePriceUncheckedUpdateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProducePricesNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUpsertWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceSpecificationValueUpdateToOneWithWhereWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateWithoutProduceSpecificationValuePriceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationValuePriceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceSpecificationValueUpdateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateOneRequiredWithoutValuesNestedInput"
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProduceSpecificationValuesNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationValuePriceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProduceSpecificationValuesNestedInput"
          }
        }
      },
      "UserCreateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutProducsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProducsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ShopCreateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutShopsInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopUncheckedCreateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutShopInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ShopCreateOrConnectWithoutProducsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutProducsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationCreateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProduceSpecificationsInput"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProduceSpecificationUncheckedCreateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateNestedManyWithoutProduceSpecificationInput"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProduceSpecificationCreateOrConnectWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceSpecificationCreateManyProducInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProduceSpecificationCreateManyProducInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProducePriceCreateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateNestedManyWithoutProducePricesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateNestedManyWithoutProducePriceInput"
          }
        },
        "required": [
          "reduceStock"
        ]
      },
      "ProducePriceUncheckedCreateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedCreateNestedManyWithoutProducePricesInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedCreateNestedManyWithoutProducePriceInput"
          }
        },
        "required": [
          "reduceStock"
        ]
      },
      "ProducePriceCreateOrConnectWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProducePriceCreateManyProducInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateManyProducInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProducePriceCreateManyProducInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "CardProduceCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountCreateNestedManyWithoutCardProduceInput"
          }
        }
      },
      "CardProduceUncheckedCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateNestedManyWithoutCardProduceInput"
          }
        }
      },
      "CardProduceCreateOrConnectWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ComboProduceCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "ComboProduceUncheckedCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "ComboProduceCreateOrConnectWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PhysicalProduceCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          }
        },
        "required": [
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRule",
          "expressFeeRule"
        ]
      },
      "PhysicalProduceUncheckedCreateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "expressFeeRuleId"
        ]
      },
      "PhysicalProduceCreateOrConnectWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutProducsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProducsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutProducsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutProducsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "ShopUpsertWithoutProducsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutProducsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopCreateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedCreateWithoutProducsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ShopUpdateToOneWithWhereWithoutProducsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopUpdateWithoutProducsInput"
              },
              {
                "$ref": "#/components/schemas/ShopUncheckedUpdateWithoutProducsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ShopUpdateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutShopsNestedInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ShopUncheckedUpdateWithoutProducsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ProduceSpecificationUpsertWithWhereUniqueWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutProducInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationCreateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProduceSpecificationUpdateWithWhereUniqueWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProduceSpecificationUpdateManyWithWhereWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProducePriceUpsertWithWhereUniqueWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProducInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceCreateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedCreateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ProducePriceUpdateWithWhereUniqueWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateWithoutProducInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ProducePriceUpdateManyWithWhereWithoutProducInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProducePriceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CardProduceUpsertWithoutProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "CardProduceUpdateToOneWithWhereWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CardProduceUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountUpdateManyWithoutCardProduceNestedInput"
          }
        }
      },
      "CardProduceUncheckedUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "cardProduceAccounts": {
            "$ref": "#/components/schemas/CardProduceAccountUncheckedUpdateManyWithoutCardProduceNestedInput"
          }
        }
      },
      "ComboProduceUpsertWithoutProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ComboProduceUpdateToOneWithWhereWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ComboProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/ComboProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ComboProduceUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ComboProduceUncheckedUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpsertWithoutProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "PhysicalProduceUpdateToOneWithWhereWithoutProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutProduceInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PhysicalProduceUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          }
        }
      },
      "PhysicalProduceUncheckedUpdateWithoutProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceCreateWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutCardProduceInput"
          }
        },
        "required": [
          "produce"
        ]
      },
      "CardProduceUncheckedCreateWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        },
        "required": [
          "produceId"
        ]
      },
      "CardProduceCreateOrConnectWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutCardProduceAccountsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CardProduceUpsertWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutCardProduceAccountsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceCreateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedCreateWithoutCardProduceAccountsInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "CardProduceUpdateToOneWithWhereWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceUpdateWithoutCardProduceAccountsInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceUncheckedUpdateWithoutCardProduceAccountsInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "CardProduceUpdateWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutCardProduceNestedInput"
          }
        }
      },
      "CardProduceUncheckedUpdateWithoutCardProduceAccountsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceCreateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CardProduceAccountCreateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          }
        },
        "required": [
          "value"
        ]
      },
      "CardProduceAccountUncheckedCreateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          }
        },
        "required": [
          "value"
        ]
      },
      "CardProduceAccountCreateOrConnectWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CardProduceAccountCreateManyCardProduceInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountCreateManyCardProduceInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpsertWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutCardProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutCardProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceUpdateToOneWithWhereWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpdateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "CardProduceAccountUpsertWithWhereUniqueWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedUpdateWithoutCardProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountCreateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedCreateWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "CardProduceAccountUpdateWithWhereUniqueWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateWithoutCardProduceInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedUpdateWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CardProduceAccountUpdateManyWithWhereWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountUncheckedUpdateManyWithoutCardProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CardProduceAccountScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CardProduceAccountScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFilter"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              }
            ]
          },
          "cardProduceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "ProduceCreateWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutComboProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceUpsertWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutComboProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutComboProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceUpdateToOneWithWhereWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutComboProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutComboProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpdateWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutComboProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "UserCreateWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutFreeExpressFeeRulesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "citys",
          "limit"
        ]
      },
      "FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "citys",
          "limit"
        ]
      },
      "FreeExpressFeeRuleCityCreateOrConnectWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "PhysicalProduceCreateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutPhysicalProduceInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          }
        },
        "required": [
          "expressFee",
          "isFreeExpressFee",
          "produce",
          "expressFeeRule"
        ]
      },
      "PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "expressFeeRuleId"
        ]
      },
      "PhysicalProduceCreateOrConnectWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PhysicalProduceCreateManyFreeExpressFeeRuleInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateManyFreeExpressFeeRuleInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpsertWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutFreeExpressFeeRulesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutFreeExpressFeeRulesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutFreeExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutFreeExpressFeeRulesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutFreeExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleCityUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedUpdateWithoutFreeExpressFeeRuleInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "FreeExpressFeeRuleCityUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedUpdateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FreeExpressFeeRuleCityUpdateManyWithWhereWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedUpdateManyWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "FreeExpressFeeRuleCityScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpsertWithWhereUniqueWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutFreeExpressFeeRuleInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "PhysicalProduceUpdateWithWhereUniqueWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutFreeExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PhysicalProduceUpdateManyWithWhereWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutFreeExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PhysicalProduceScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCreateWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutFreeExpressFeeRulesInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleUncheckedCreateWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleCreateOrConnectWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FreeExpressFeeRuleUpsertWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "FreeExpressFeeRuleUpdateToOneWithWhereWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutFreeExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutFreeExpressFeeRuleCitysInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FreeExpressFeeRuleUpdateWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutFreeExpressFeeRulesNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleUncheckedUpdateWithoutFreeExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "UserCreateWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutExpressFeeRulesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee"
        ]
      },
      "ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee"
        ]
      },
      "ExpressFeeRuleCityCreateOrConnectWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ExpressFeeRuleCityCreateManyExpressFeeRuleInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyExpressFeeRuleInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "PhysicalProduceCreateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceCreateNestedOneWithoutPhysicalProduceInput"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedOneWithoutPhysicalProducesInput"
          }
        },
        "required": [
          "expressFee",
          "isFreeExpressFee",
          "produce",
          "freeExpressFeeRule"
        ]
      },
      "PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId"
        ]
      },
      "PhysicalProduceCreateOrConnectWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PhysicalProduceCreateManyExpressFeeRuleInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalProduceCreateManyExpressFeeRuleInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpsertWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutExpressFeeRulesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutExpressFeeRulesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutExpressFeeRulesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutExpressFeeRulesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutExpressFeeRulesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "ExpressFeeRuleCityUpsertWithWhereUniqueWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedUpdateWithoutExpressFeeRuleInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "ExpressFeeRuleCityUpdateWithWhereUniqueWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedUpdateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ExpressFeeRuleCityUpdateManyWithWhereWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedUpdateManyWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ExpressFeeRuleCityScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DecimalFilter"
              },
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpsertWithWhereUniqueWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutExpressFeeRuleInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceCreateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "PhysicalProduceUpdateWithWhereUniqueWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateWithoutExpressFeeRuleInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PhysicalProduceUpdateManyWithWhereWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutExpressFeeRuleInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "ExpressFeeRuleCreateWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutExpressFeeRulesInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleUncheckedCreateWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleCreateOrConnectWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutExpressFeeRuleCitysInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ExpressFeeRuleUpsertWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutExpressFeeRuleCitysInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutExpressFeeRuleCitysInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ExpressFeeRuleUpdateToOneWithWhereWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutExpressFeeRuleCitysInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutExpressFeeRuleCitysInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ExpressFeeRuleUpdateWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutExpressFeeRulesNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleUncheckedUpdateWithoutExpressFeeRuleCitysInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ProduceCreateWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutProducsInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopCreateNestedOneWithoutProducsInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shop"
        ]
      },
      "ProduceUncheckedCreateWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutProducInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedCreateNestedManyWithoutProducInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedCreateNestedOneWithoutProduceInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedCreateNestedOneWithoutProduceInput"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceCreateOrConnectWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutPhysicalProduceInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "FreeExpressFeeRuleCreateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutFreeExpressFeeRulesInput"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedCreateNestedManyWithoutFreeExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "FreeExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ExpressFeeRuleCreateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutExpressFeeRulesInput"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedCreateNestedManyWithoutExpressFeeRuleInput"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleCreateOrConnectWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "ProduceUpsertWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutPhysicalProduceInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceCreateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedCreateWithoutPhysicalProduceInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ProduceUpdateToOneWithWhereWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceUpdateWithoutPhysicalProduceInput"
              },
              {
                "$ref": "#/components/schemas/ProduceUncheckedUpdateWithoutPhysicalProduceInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ProduceUpdateWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutPhysicalProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleUpsertWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "FreeExpressFeeRuleUpdateToOneWithWhereWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "FreeExpressFeeRuleUpdateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutFreeExpressFeeRulesNestedInput"
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleUpsertWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateWithoutPhysicalProducesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "ExpressFeeRuleUpdateToOneWithWhereWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateWithoutPhysicalProducesInput"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "ExpressFeeRuleUpdateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutExpressFeeRulesNestedInput"
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleUncheckedUpdateWithoutPhysicalProducesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "UserCreateWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutI18nValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutI18nValuesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutI18nValuesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutI18nValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutI18nValuesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutI18nValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutConfigValuesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutConfigValuesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutConfigValuesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutConfigValuesInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutConfigValuesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutConfigValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoTypeCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutChildrenInput"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedManyWithoutParentInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeUncheckedCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUncheckedCreateNestedManyWithoutParentInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeCreateOrConnectWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoTagCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTagUncheckedCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTagCreateOrConnectWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoSetCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoSetUncheckedCreateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoSetCreateOrConnectWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedCreateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutVideosInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutVideosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "VideoTypeUpsertWithoutVideosInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutVideosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "VideoTypeUpdateToOneWithWhereWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoTypeUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneWithoutChildrenNestedInput"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUpdateManyWithoutParentNestedInput"
          }
        }
      },
      "VideoTypeUncheckedUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUncheckedUpdateManyWithoutParentNestedInput"
          }
        }
      },
      "VideoTagUpsertWithWhereUniqueWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedUpdateWithoutVideosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedCreateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoTagUpdateWithWhereUniqueWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoTagUpdateManyWithWhereWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoTagUncheckedUpdateManyWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoTagScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTagScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTagScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTagScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoSetUpsertWithoutVideosInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedUpdateWithoutVideosInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetCreateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedCreateWithoutVideosInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "VideoSetUpdateToOneWithWhereWithoutVideosInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoSetUpdateWithoutVideosInput"
              },
              {
                "$ref": "#/components/schemas/VideoSetUncheckedUpdateWithoutVideosInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoSetUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoSetUncheckedUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTypeCreateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutChildrenInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutVideoTypeInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeUncheckedCreateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutVideoTypeInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeCreateOrConnectWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutChildrenInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoTypeCreateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedManyWithoutParentInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutVideoTypeInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeUncheckedCreateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUncheckedCreateNestedManyWithoutParentInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutVideoTypeInput"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoTypeCreateOrConnectWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoTypeCreateManyParentInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateManyParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeCreateManyParentInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoCreateWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutVideosInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagCreateNestedManyWithoutVideosInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetCreateNestedOneWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl"
        ]
      },
      "VideoUncheckedCreateWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoSetId": {
            "type": "string"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedCreateNestedManyWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl"
        ]
      },
      "VideoCreateOrConnectWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoCreateManyVideoTypeInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateManyVideoTypeInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateManyVideoTypeInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoTypeUpsertWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutChildrenInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "VideoTypeUpdateToOneWithWhereWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutChildrenInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoTypeUpdateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneWithoutChildrenNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutVideoTypeNestedInput"
          }
        }
      },
      "VideoTypeUncheckedUpdateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutVideoTypeNestedInput"
          }
        }
      },
      "VideoTypeUpsertWithWhereUniqueWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutParentInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeCreateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedCreateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoTypeUpdateWithWhereUniqueWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoTypeUpdateManyWithWhereWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoTypeUncheckedUpdateManyWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoTypeScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoTypeScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "VideoUpsertWithWhereUniqueWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoTypeInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoTypeInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTypeInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTypeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoUpdateWithWhereUniqueWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoTypeInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoTypeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoUpdateManyWithWhereWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutVideoTypeInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoCreateWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutVideosInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutVideosInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetCreateNestedOneWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoType"
        ]
      },
      "VideoUncheckedCreateWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "VideoCreateOrConnectWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoUpsertWithWhereUniqueWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoTagsInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoTagsInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoTagsInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoTagsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoUpdateWithWhereUniqueWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoTagsInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoTagsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoUpdateManyWithWhereWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutVideoTagsInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoCreateWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutVideosInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeCreateNestedOneWithoutVideosInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagCreateNestedManyWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoType"
        ]
      },
      "VideoUncheckedCreateWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedCreateNestedManyWithoutVideosInput"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "VideoCreateOrConnectWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "VideoCreateManyVideoSetInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateManyVideoSetInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VideoCreateManyVideoSetInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "VideoUpsertWithWhereUniqueWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoSetInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoSetInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoCreateWithoutVideoSetInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedCreateWithoutVideoSetInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "VideoUpdateWithWhereUniqueWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateWithoutVideoSetInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateWithoutVideoSetInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "VideoUpdateManyWithWhereWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/VideoUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutVideoSetInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PageCreateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "parent": {
            "$ref": "#/components/schemas/PageCreateNestedOneWithoutChildrenInput"
          },
          "children": {
            "$ref": "#/components/schemas/PageCreateNestedManyWithoutParentInput"
          }
        },
        "required": [
          "url"
        ]
      },
      "PageUncheckedCreateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "children": {
            "$ref": "#/components/schemas/PageUncheckedCreateNestedManyWithoutParentInput"
          }
        },
        "required": [
          "url"
        ]
      },
      "PageCreateOrConnectWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PageCreateManySiteInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateManySiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateManySiteInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "CrawlTaskCreateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutCrawlTasksInput"
          }
        }
      },
      "CrawlTaskUncheckedCreateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          }
        }
      },
      "CrawlTaskCreateOrConnectWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "CrawlTaskCreateManySiteInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateManySiteInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CrawlTaskCreateManySiteInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "PageUpsertWithWhereUniqueWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutSiteInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "PageUpdateWithWhereUniqueWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PageUpdateManyWithWhereWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateManyWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PageScalarWhereInput": {
        "type": "object",
        "properties": {
          "AND": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          },
          "OR": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageScalarWhereInput"
            }
          },
          "NOT": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageScalarWhereInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageScalarWhereInput"
                }
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/IntFilter"
              },
              {
                "type": "integer"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/BoolFilter"
              },
              {
                "type": "boolean"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnumPageStatusFilter"
              },
              {
                "$ref": "#/components/schemas/PageStatus"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringNullableFilter"
              },
              {
                "type": "string"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/DateTimeFilter"
              },
              {
                "type": "string",
                "format": "date-time"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/StringFilter"
              },
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "CrawlTaskUpsertWithWhereUniqueWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateWithoutSiteInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskCreateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedCreateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "CrawlTaskUpdateWithWhereUniqueWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateWithoutSiteInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "CrawlTaskUpdateManyWithWhereWithoutSiteInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutSiteInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PageCreateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "parent": {
            "$ref": "#/components/schemas/PageCreateNestedOneWithoutChildrenInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteCreateNestedOneWithoutPagesInput"
          }
        },
        "required": [
          "url",
          "site"
        ]
      },
      "PageUncheckedCreateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "siteId"
        ]
      },
      "PageCreateOrConnectWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutChildrenInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PageCreateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "children": {
            "$ref": "#/components/schemas/PageCreateNestedManyWithoutParentInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteCreateNestedOneWithoutPagesInput"
          }
        },
        "required": [
          "url",
          "site"
        ]
      },
      "PageUncheckedCreateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          },
          "children": {
            "$ref": "#/components/schemas/PageUncheckedCreateNestedManyWithoutParentInput"
          }
        },
        "required": [
          "url",
          "siteId"
        ]
      },
      "PageCreateOrConnectWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PageCreateManyParentInputEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateManyParentInput"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageCreateManyParentInput"
                }
              }
            ]
          },
          "skipDuplicates": {
            "type": "boolean"
          }
        },
        "required": [
          "data"
        ]
      },
      "SiteCreateWithoutPagesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskCreateNestedManyWithoutSiteInput"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteUncheckedCreateWithoutPagesInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedCreateNestedManyWithoutSiteInput"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteCreateOrConnectWithoutPagesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutPagesInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "PageUpsertWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutChildrenInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutChildrenInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "PageUpdateToOneWithWhereWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutChildrenInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutChildrenInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PageUpdateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/PageUpdateOneWithoutChildrenNestedInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteUpdateOneRequiredWithoutPagesNestedInput"
          }
        }
      },
      "PageUncheckedUpdateWithoutChildrenInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PageUpsertWithWhereUniqueWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutParentInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageCreateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedCreateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "update",
          "create"
        ]
      },
      "PageUpdateWithWhereUniqueWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateWithoutParentInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "PageUpdateManyWithWhereWithoutParentInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageScalarWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageUpdateManyMutationInput"
              },
              {
                "$ref": "#/components/schemas/PageUncheckedUpdateManyWithoutParentInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "data"
        ]
      },
      "SiteUpsertWithoutPagesInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutPagesInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutPagesInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SiteUpdateToOneWithWhereWithoutPagesInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutPagesInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutPagesInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SiteUpdateWithoutPagesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutSiteNestedInput"
          }
        }
      },
      "SiteUncheckedUpdateWithoutPagesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutSiteNestedInput"
          }
        }
      },
      "UserCreateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserCreateNestedOneWithoutInviteeInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserUncheckedCreateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedCreateNestedManyWithoutInviterInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedCreateNestedManyWithoutUserInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutUserInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedCreateNestedManyWithoutCreatorInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedCreateNestedManyWithoutCreatorInput"
          }
        }
      },
      "UserCreateOrConnectWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "SiteCreateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pages": {
            "$ref": "#/components/schemas/PageCreateNestedManyWithoutSiteInput"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteUncheckedCreateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "pages": {
            "$ref": "#/components/schemas/PageUncheckedCreateNestedManyWithoutSiteInput"
          }
        },
        "required": [
          "host"
        ]
      },
      "SiteCreateOrConnectWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          }
        },
        "required": [
          "where",
          "create"
        ]
      },
      "UserUpsertWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "UserUpdateToOneWithWhereWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/UserUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "UserUpdateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutInviteeNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "inviterId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "SiteUpsertWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "update": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          },
          "create": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteCreateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedCreateWithoutCrawlTasksInput"
              }
            ]
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          }
        },
        "required": [
          "update",
          "create"
        ]
      },
      "SiteUpdateToOneWithWhereWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SiteUpdateWithoutCrawlTasksInput"
              },
              {
                "$ref": "#/components/schemas/SiteUncheckedUpdateWithoutCrawlTasksInput"
              }
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "SiteUpdateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "pages": {
            "$ref": "#/components/schemas/PageUpdateManyWithoutSiteNestedInput"
          }
        }
      },
      "SiteUncheckedUpdateWithoutCrawlTasksInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "host": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "keywords": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "description": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "icon": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "thumbnail": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "pages": {
            "$ref": "#/components/schemas/PageUncheckedUpdateManyWithoutSiteNestedInput"
          }
        }
      },
      "AccountCreateManyUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "SessionCreateManyUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "sessionToken",
          "expires"
        ]
      },
      "UserCreateManyInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          }
        }
      },
      "ShopCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProduceCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          }
        },
        "required": [
          "name",
          "linePrice",
          "shopId"
        ]
      },
      "ProduceSpecificationCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "producId"
        ]
      },
      "FreeExpressFeeRuleCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ExpressFeeRuleCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "isDef"
        ]
      },
      "ShopMemberCreateManyUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "shopId"
        ]
      },
      "I18nValueCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value",
          "lang"
        ]
      },
      "ConfigValueCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "LoginLogCreateManyUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "day",
          "endAt"
        ]
      },
      "BalanceLogCreateManyUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          }
        },
        "required": [
          "remark"
        ]
      },
      "BalanceLogCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "CrawlTaskCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "siteId"
        ]
      },
      "VideoCreateManyCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "AccountUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "AccountUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "provider": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "providerAccountId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "refresh_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "access_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires_at": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "token_type": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "scope": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "id_token": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "session_state": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SessionUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "SessionUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expires": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserUpdateWithoutInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateWithoutInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
          },
          "invitee": {
            "$ref": "#/components/schemas/UserUncheckedUpdateManyWithoutInviterNestedInput"
          },
          "shops": {
            "$ref": "#/components/schemas/ShopUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "produceSpecifications": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "freeExpressFeeRules": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "expressFeeRules": {
            "$ref": "#/components/schemas/ExpressFeeRuleUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "shopMembers": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutUserNestedInput"
          },
          "i18nValues": {
            "$ref": "#/components/schemas/I18nValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "configValues": {
            "$ref": "#/components/schemas/ConfigValueUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "loginLogs": {
            "$ref": "#/components/schemas/LoginLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutUserNestedInput"
          },
          "creatorBalanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "crawlTasks": {
            "$ref": "#/components/schemas/CrawlTaskUncheckedUpdateManyWithoutCreatorNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutCreatorNestedInput"
          }
        }
      },
      "UserUncheckedUpdateManyWithoutInviterInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "email": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "emailVerified": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "image": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "phone": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "role": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "password": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "block": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUpdateManyWithoutShopNestedInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ShopUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "producs": {
            "$ref": "#/components/schemas/ProduceUncheckedUpdateManyWithoutShopNestedInput"
          },
          "shopMember": {
            "$ref": "#/components/schemas/ShopMemberUncheckedUpdateManyWithoutShopNestedInput"
          }
        }
      },
      "ShopUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "logo": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShowStatus"
              },
              {
                "$ref": "#/components/schemas/EnumShowStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProduceSpecificationNestedInput"
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutFreeExpressFeeRuleNestedInput"
          }
        }
      },
      "FreeExpressFeeRuleUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleType"
              },
              {
                "$ref": "#/components/schemas/EnumFreeExpressFeeRuleTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyWithoutExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUncheckedUpdateManyWithoutExpressFeeRuleNestedInput"
          },
          "physicalProduces": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateManyWithoutExpressFeeRuleNestedInput"
          }
        }
      },
      "ExpressFeeRuleUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ExpressFeeRuleTyle"
              },
              {
                "$ref": "#/components/schemas/EnumExpressFeeRuleTyleFieldUpdateOperationsInput"
              }
            ]
          },
          "isDef": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopMemberUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "shop": {
            "$ref": "#/components/schemas/ShopUpdateOneRequiredWithoutShopMemberNestedInput"
          }
        }
      },
      "ShopMemberUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "shopId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "I18nValueUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "I18nValueUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "I18nValueUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "lang": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ConfigValueUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        }
      },
      "ConfigValueUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        }
      },
      "ConfigValueUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "key": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConfigValueKey"
              },
              {
                "$ref": "#/components/schemas/EnumConfigValueKeyFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNullValueInput"
              },
              {}
            ]
          }
        }
      },
      "LoginLogUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "LoginLogUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "LoginLogUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "day": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "startAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "endAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCreatorBalanceLogsNestedInput"
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogUpdateOneWithoutBalanceLogsNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutPreBalanceLogNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutPreBalanceLogNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutUserInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BalanceLogUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLog": {
            "$ref": "#/components/schemas/BalanceLogUpdateOneWithoutBalanceLogsNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutPreBalanceLogNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutBalanceLogsNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutPreBalanceLogNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "preBalanceLogId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CrawlTaskUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "site": {
            "$ref": "#/components/schemas/SiteUpdateOneRequiredWithoutCrawlTasksNestedInput"
          }
        }
      },
      "CrawlTaskUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneRequiredWithoutVideosNestedInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUpdateManyWithoutVideosNestedInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetUpdateOneWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedUpdateManyWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutCreatorInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "BalanceLogCreateManyPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "remark",
          "userId"
        ]
      },
      "BalanceLogUpdateWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCreatorBalanceLogsNestedInput"
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyWithoutPreBalanceLogNestedInput"
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutBalanceLogsNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balanceLogs": {
            "$ref": "#/components/schemas/BalanceLogUncheckedUpdateManyWithoutPreBalanceLogNestedInput"
          }
        }
      },
      "BalanceLogUncheckedUpdateManyWithoutPreBalanceLogInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "balance": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "remark": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "log": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NullableJsonNullValueInput"
              },
              {}
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceCreateManyShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          }
        },
        "required": [
          "name",
          "linePrice"
        ]
      },
      "ShopMemberCreateManyShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "userId"
        ]
      },
      "ProduceUpdateWithoutShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProducsNestedInput"
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateWithoutShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUncheckedUpdateManyWithoutProducNestedInput"
          },
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProducNestedInput"
          },
          "cardProduce": {
            "$ref": "#/components/schemas/CardProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "comboProduce": {
            "$ref": "#/components/schemas/ComboProduceUncheckedUpdateOneWithoutProduceNestedInput"
          },
          "physicalProduce": {
            "$ref": "#/components/schemas/PhysicalProduceUncheckedUpdateOneWithoutProduceNestedInput"
          }
        }
      },
      "ProduceUncheckedUpdateManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceStatus"
              },
              {
                "$ref": "#/components/schemas/EnumProduceStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "linePrice": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "visits": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isLimitBuy": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyType": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LimitBuyType"
              },
              {
                "$ref": "#/components/schemas/NullableEnumLimitBuyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "limitBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "minBuyValue": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/NullableIntFieldUpdateOperationsInput"
              }
            ]
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProduceType"
              },
              {
                "$ref": "#/components/schemas/EnumProduceTypeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopMemberUpdateWithoutShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "user": {
            "$ref": "#/components/schemas/UserUpdateOneRequiredWithoutShopMembersNestedInput"
          }
        }
      },
      "ShopMemberUncheckedUpdateWithoutShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ShopMemberUncheckedUpdateManyWithoutShopInput": {
        "type": "object",
        "properties": {
          "role": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShopMemberRole"
              },
              {
                "$ref": "#/components/schemas/EnumShopMemberRoleFieldUpdateOperationsInput"
              }
            ]
          },
          "userId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueCreateManyProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "value"
        ]
      },
      "ProduceSpecificationValueUpdateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyWithoutProduceSpecificationValuesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProduceSpecificationValueNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producePrices": {
            "$ref": "#/components/schemas/ProducePriceUncheckedUpdateManyWithoutProduceSpecificationValuesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProduceSpecificationValueNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateManyWithoutProduceSpecificationInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceCreateManyProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          }
        },
        "required": [
          "producePriceId"
        ]
      },
      "ProducePriceUpdateWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produc": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutProducePriceNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProducePriceNestedInput"
          }
        }
      },
      "ProducePriceUncheckedUpdateWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProducePriceNestedInput"
          }
        }
      },
      "ProducePriceUncheckedUpdateManyWithoutProduceSpecificationValuesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "producId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePrice": {
            "$ref": "#/components/schemas/ProducePriceUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput"
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProduceSpecificationValueInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceCreateManyProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValueId": {
            "type": "string"
          }
        },
        "required": [
          "produceSpecificationValueId"
        ]
      },
      "ProduceSpecificationValueUpdateWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecification": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateOneRequiredWithoutValuesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProduceSpecificationValueNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProduceSpecificationValueNestedInput"
          }
        }
      },
      "ProduceSpecificationValueUncheckedUpdateManyWithoutProducePricesInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "iamge": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValue": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateOneRequiredWithoutProduceSpecificationValuePriceNestedInput"
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProducePriceInput": {
        "type": "object",
        "properties": {
          "produceSpecificationValueId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProduceSpecificationCreateManyProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProducePriceCreateManyProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "reduceStock"
        ]
      },
      "ProduceSpecificationUpdateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutProduceSpecificationsNestedInput"
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "values": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProduceSpecificationNestedInput"
          }
        }
      },
      "ProduceSpecificationUncheckedUpdateManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ProducePriceUpdateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyWithoutProducePricesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyWithoutProducePriceNestedInput"
          }
        }
      },
      "ProducePriceUncheckedUpdateWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produceSpecificationValues": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUncheckedUpdateManyWithoutProducePricesNestedInput"
          },
          "produceSpecificationValuePrice": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUncheckedUpdateManyWithoutProducePriceNestedInput"
          }
        }
      },
      "ProducePriceUncheckedUpdateManyWithoutProducInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "goods_no": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "currency": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CurrencyType"
              },
              {
                "$ref": "#/components/schemas/EnumCurrencyTypeFieldUpdateOperationsInput"
              }
            ]
          },
          "price": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "weight": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "reduceStock": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saled": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "saledAmount": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountCreateManyCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          }
        },
        "required": [
          "value"
        ]
      },
      "CardProduceAccountUpdateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountUncheckedUpdateWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CardProduceAccountUncheckedUpdateManyWithoutCardProduceInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CardProduceAccountStatus"
              },
              {
                "$ref": "#/components/schemas/EnumCardProduceAccountStatusFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityCreateManyFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "citys",
          "limit"
        ]
      },
      "PhysicalProduceCreateManyFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "expressFeeRuleId"
        ]
      },
      "FreeExpressFeeRuleCityUpdateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityUncheckedUpdateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityUncheckedUpdateManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "limit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpdateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutPhysicalProduceNestedInput"
          },
          "expressFeeRule": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          }
        }
      },
      "PhysicalProduceUncheckedUpdateWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedUpdateManyWithoutFreeExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityCreateManyExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee"
        ]
      },
      "PhysicalProduceCreateManyExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          }
        },
        "required": [
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId"
        ]
      },
      "ExpressFeeRuleCityUpdateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityUncheckedUpdateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityUncheckedUpdateManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "citys": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "firstLimit": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "firstFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "step": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "stepFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUpdateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "produce": {
            "$ref": "#/components/schemas/ProduceUpdateOneRequiredWithoutPhysicalProduceNestedInput"
          },
          "freeExpressFeeRule": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateOneRequiredWithoutPhysicalProducesNestedInput"
          }
        }
      },
      "PhysicalProduceUncheckedUpdateWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PhysicalProduceUncheckedUpdateManyWithoutExpressFeeRuleInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "produceId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "expressFee": {
            "oneOf": [
              {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              {
                "$ref": "#/components/schemas/DecimalFieldUpdateOperationsInput"
              }
            ]
          },
          "isFreeExpressFee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "freeExpressFeeRuleId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTagUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTagUncheckedUpdateWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTagUncheckedUpdateManyWithoutVideosInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoTypeCreateManyParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "VideoCreateManyVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoSetId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl"
        ]
      },
      "VideoTypeUpdateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUpdateManyWithoutParentNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUpdateManyWithoutVideoTypeNestedInput"
          }
        }
      },
      "VideoTypeUncheckedUpdateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/VideoTypeUncheckedUpdateManyWithoutParentNestedInput"
          },
          "videos": {
            "$ref": "#/components/schemas/VideoUncheckedUpdateManyWithoutVideoTypeNestedInput"
          }
        }
      },
      "VideoTypeUncheckedUpdateManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "label": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoUpdateWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutVideosNestedInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUpdateManyWithoutVideosNestedInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetUpdateOneWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedUpdateManyWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutVideoTypeInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoUpdateWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutVideosNestedInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneRequiredWithoutVideosNestedInput"
          },
          "videoSet": {
            "$ref": "#/components/schemas/VideoSetUpdateOneWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutVideoTagsInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoSetId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "VideoCreateManyVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "title",
          "summary",
          "coverUrl",
          "videoTypeId"
        ]
      },
      "VideoUpdateWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutVideosNestedInput"
          },
          "videoType": {
            "$ref": "#/components/schemas/VideoTypeUpdateOneRequiredWithoutVideosNestedInput"
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUpdateManyWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTags": {
            "$ref": "#/components/schemas/VideoTagUncheckedUpdateManyWithoutVideosNestedInput"
          }
        }
      },
      "VideoUncheckedUpdateManyWithoutVideoSetInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "title": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "summary": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "coverUrl": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "publishedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "videoTypeId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PageCreateManySiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "url"
        ]
      },
      "CrawlTaskCreateManySiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          }
        }
      },
      "PageUpdateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "parent": {
            "$ref": "#/components/schemas/PageUpdateOneWithoutChildrenNestedInput"
          },
          "children": {
            "$ref": "#/components/schemas/PageUpdateManyWithoutParentNestedInput"
          }
        }
      },
      "PageUncheckedUpdateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/PageUncheckedUpdateManyWithoutParentNestedInput"
          }
        }
      },
      "PageUncheckedUpdateManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "parentId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CrawlTaskUpdateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "creator": {
            "$ref": "#/components/schemas/UserUpdateOneWithoutCrawlTasksNestedInput"
          }
        }
      },
      "CrawlTaskUncheckedUpdateWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "CrawlTaskUncheckedUpdateManyWithoutSiteInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "deletedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "creatorId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "deleted": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "published": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "PageCreateManyParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "siteId"
        ]
      },
      "PageUpdateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/PageUpdateManyWithoutParentNestedInput"
          },
          "site": {
            "$ref": "#/components/schemas/SiteUpdateOneRequiredWithoutPagesNestedInput"
          }
        }
      },
      "PageUncheckedUpdateWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "children": {
            "$ref": "#/components/schemas/PageUncheckedUpdateManyWithoutParentNestedInput"
          }
        }
      },
      "PageUncheckedUpdateManyWithoutParentInput": {
        "type": "object",
        "properties": {
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "url": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          },
          "content": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "contentSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtml": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/NullableStringFieldUpdateOperationsInput"
              }
            ]
          },
          "cleanHtmlSize": {
            "oneOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/IntFieldUpdateOperationsInput"
              }
            ]
          },
          "isHost": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BoolFieldUpdateOperationsInput"
              }
            ]
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/PageStatus"
              },
              {
                "$ref": "#/components/schemas/EnumPageStatusFieldUpdateOperationsInput"
              }
            ]
          },
          "createdAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "updatedAt": {
            "oneOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "$ref": "#/components/schemas/DateTimeFieldUpdateOperationsInput"
              }
            ]
          },
          "siteId": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/StringFieldUpdateOperationsInput"
              }
            ]
          }
        }
      },
      "UserArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          }
        }
      },
      "BalanceLogArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          }
        }
      },
      "ShopArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          }
        }
      },
      "ProduceSpecificationArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          }
        }
      },
      "ProduceSpecificationValueArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          }
        }
      },
      "ProducePriceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          }
        }
      },
      "ProduceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          }
        }
      },
      "CardProduceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          }
        }
      },
      "ComboProduceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          }
        }
      },
      "FreeExpressFeeRuleArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          }
        }
      },
      "ExpressFeeRuleArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          }
        }
      },
      "PhysicalProduceArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          }
        }
      },
      "VideoTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          }
        }
      },
      "VideoSetArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          }
        }
      },
      "SiteArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          }
        }
      },
      "PageArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          }
        }
      },
      "UserInclude": {
        "type": "object",
        "properties": {
          "accounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountFindManyArgs"
              }
            ]
          },
          "sessions": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionFindManyArgs"
              }
            ]
          },
          "inviter": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "invitee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserFindManyArgs"
              }
            ]
          },
          "shops": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopFindManyArgs"
              }
            ]
          },
          "producs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceFindManyArgs"
              }
            ]
          },
          "produceSpecifications": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationFindManyArgs"
              }
            ]
          },
          "freeExpressFeeRules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleFindManyArgs"
              }
            ]
          },
          "expressFeeRules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleFindManyArgs"
              }
            ]
          },
          "shopMembers": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberFindManyArgs"
              }
            ]
          },
          "i18nValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/I18nValueFindManyArgs"
              }
            ]
          },
          "configValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ConfigValueFindManyArgs"
              }
            ]
          },
          "loginLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/LoginLogFindManyArgs"
              }
            ]
          },
          "balanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "creatorBalanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "crawlTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskFindManyArgs"
              }
            ]
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "AccountInclude": {
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "SessionInclude": {
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "LoginLogInclude": {
        "type": "object",
        "properties": {
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "BalanceLogInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "preBalanceLog": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogArgs"
              }
            ]
          },
          "balanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ShopInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "producs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceFindManyArgs"
              }
            ]
          },
          "shopMember": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ShopMemberInclude": {
        "type": "object",
        "properties": {
          "shop": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopArgs"
              }
            ]
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "values": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueFindManyArgs"
              }
            ]
          },
          "produc": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueInclude": {
        "type": "object",
        "properties": {
          "produceSpecification": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationArgs"
              }
            ]
          },
          "producePrices": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceFindManyArgs"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProducePriceInclude": {
        "type": "object",
        "properties": {
          "produc": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "produceSpecificationValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueFindManyArgs"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceInclude": {
        "type": "object",
        "properties": {
          "producePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceArgs"
              }
            ]
          },
          "produceSpecificationValue": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueArgs"
              }
            ]
          }
        }
      },
      "ProduceInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "shop": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopArgs"
              }
            ]
          },
          "produceSpecification": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationFindManyArgs"
              }
            ]
          },
          "producePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceFindManyArgs"
              }
            ]
          },
          "cardProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceArgs"
              }
            ]
          },
          "comboProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceArgs"
              }
            ]
          },
          "physicalProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "CardProduceAccountInclude": {
        "type": "object",
        "properties": {
          "cardProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceArgs"
              }
            ]
          }
        }
      },
      "CardProduceInclude": {
        "type": "object",
        "properties": {
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "cardProduceAccounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ComboProduceInclude": {
        "type": "object",
        "properties": {
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "freeExpressFeeRuleCitys": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityFindManyArgs"
              }
            ]
          },
          "physicalProduces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCityInclude": {
        "type": "object",
        "properties": {
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "expressFeeRuleCitys": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityFindManyArgs"
              }
            ]
          },
          "physicalProduces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityInclude": {
        "type": "object",
        "properties": {
          "expressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "PhysicalProduceInclude": {
        "type": "object",
        "properties": {
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleArgs"
              }
            ]
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "I18nValueInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "ConfigValueInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "VideoInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "videoType": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeArgs"
              }
            ]
          },
          "videoTags": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagFindManyArgs"
              }
            ]
          },
          "videoSet": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoTypeInclude": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeArgs"
              }
            ]
          },
          "children": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeFindManyArgs"
              }
            ]
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoTagInclude": {
        "type": "object",
        "properties": {
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoSetInclude": {
        "type": "object",
        "properties": {
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "SiteInclude": {
        "type": "object",
        "properties": {
          "pages": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageFindManyArgs"
              }
            ]
          },
          "crawlTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "PageInclude": {
        "type": "object",
        "properties": {
          "parent": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageArgs"
              }
            ]
          },
          "children": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageFindManyArgs"
              }
            ]
          },
          "site": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "CrawlTaskInclude": {
        "type": "object",
        "properties": {
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "site": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteArgs"
              }
            ]
          }
        }
      },
      "UserCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "boolean"
          },
          "sessions": {
            "type": "boolean"
          },
          "invitee": {
            "type": "boolean"
          },
          "shops": {
            "type": "boolean"
          },
          "producs": {
            "type": "boolean"
          },
          "produceSpecifications": {
            "type": "boolean"
          },
          "freeExpressFeeRules": {
            "type": "boolean"
          },
          "expressFeeRules": {
            "type": "boolean"
          },
          "shopMembers": {
            "type": "boolean"
          },
          "i18nValues": {
            "type": "boolean"
          },
          "configValues": {
            "type": "boolean"
          },
          "loginLogs": {
            "type": "boolean"
          },
          "balanceLogs": {
            "type": "boolean"
          },
          "creatorBalanceLogs": {
            "type": "boolean"
          },
          "crawlTasks": {
            "type": "boolean"
          },
          "videos": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "balanceLogs": {
            "type": "boolean"
          }
        }
      },
      "ShopCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "producs": {
            "type": "boolean"
          },
          "shopMember": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "values": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValueCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "producePrices": {
            "type": "boolean"
          },
          "produceSpecificationValuePrice": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "produceSpecificationValues": {
            "type": "boolean"
          },
          "produceSpecificationValuePrice": {
            "type": "boolean"
          }
        }
      },
      "ProduceCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "produceSpecification": {
            "type": "boolean"
          },
          "producePrice": {
            "type": "boolean"
          }
        }
      },
      "CardProduceCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "cardProduceAccounts": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "freeExpressFeeRuleCitys": {
            "type": "boolean"
          },
          "physicalProduces": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "expressFeeRuleCitys": {
            "type": "boolean"
          },
          "physicalProduces": {
            "type": "boolean"
          }
        }
      },
      "VideoCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "videoTags": {
            "type": "boolean"
          }
        }
      },
      "VideoTypeCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "children": {
            "type": "boolean"
          },
          "videos": {
            "type": "boolean"
          }
        }
      },
      "VideoTagCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "videos": {
            "type": "boolean"
          }
        }
      },
      "VideoSetCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "videos": {
            "type": "boolean"
          }
        }
      },
      "SiteCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "pages": {
            "type": "boolean"
          },
          "crawlTasks": {
            "type": "boolean"
          }
        }
      },
      "PageCountOutputTypeSelect": {
        "type": "object",
        "properties": {
          "children": {
            "type": "boolean"
          }
        }
      },
      "UserCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserCountOutputTypeSelect"
          }
        }
      },
      "BalanceLogCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogCountOutputTypeSelect"
          }
        }
      },
      "ShopCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopCountOutputTypeSelect"
          }
        }
      },
      "ProduceSpecificationCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationCountOutputTypeSelect"
          }
        }
      },
      "ProduceSpecificationValueCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCountOutputTypeSelect"
          }
        }
      },
      "ProducePriceCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceCountOutputTypeSelect"
          }
        }
      },
      "ProduceCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceCountOutputTypeSelect"
          }
        }
      },
      "CardProduceCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceCountOutputTypeSelect"
          }
        }
      },
      "FreeExpressFeeRuleCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCountOutputTypeSelect"
          }
        }
      },
      "ExpressFeeRuleCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCountOutputTypeSelect"
          }
        }
      },
      "VideoCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoCountOutputTypeSelect"
          }
        }
      },
      "VideoTypeCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeCountOutputTypeSelect"
          }
        }
      },
      "VideoTagCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagCountOutputTypeSelect"
          }
        }
      },
      "VideoSetCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetCountOutputTypeSelect"
          }
        }
      },
      "SiteCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteCountOutputTypeSelect"
          }
        }
      },
      "PageCountOutputTypeArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageCountOutputTypeSelect"
          }
        }
      },
      "UserSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "accounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountFindManyArgs"
              }
            ]
          },
          "sessions": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionFindManyArgs"
              }
            ]
          },
          "password": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "boolean"
          },
          "inviter": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "invitee": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserFindManyArgs"
              }
            ]
          },
          "shops": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopFindManyArgs"
              }
            ]
          },
          "producs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceFindManyArgs"
              }
            ]
          },
          "produceSpecifications": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationFindManyArgs"
              }
            ]
          },
          "freeExpressFeeRules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleFindManyArgs"
              }
            ]
          },
          "expressFeeRules": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleFindManyArgs"
              }
            ]
          },
          "shopMembers": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberFindManyArgs"
              }
            ]
          },
          "i18nValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/I18nValueFindManyArgs"
              }
            ]
          },
          "configValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ConfigValueFindManyArgs"
              }
            ]
          },
          "loginLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/LoginLogFindManyArgs"
              }
            ]
          },
          "balanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "creatorBalanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "crawlTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskFindManyArgs"
              }
            ]
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "AccountSelect": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "provider": {
            "type": "boolean"
          },
          "providerAccountId": {
            "type": "boolean"
          },
          "refresh_token": {
            "type": "boolean"
          },
          "access_token": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "boolean"
          },
          "token_type": {
            "type": "boolean"
          },
          "scope": {
            "type": "boolean"
          },
          "id_token": {
            "type": "boolean"
          },
          "session_state": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "SessionSelect": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "VerificationTokenSelect": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "boolean"
          },
          "token": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          }
        }
      },
      "LoginLogSelect": {
        "type": "object",
        "properties": {
          "day": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "startAt": {
            "type": "boolean"
          },
          "endAt": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "BalanceLogSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          },
          "remark": {
            "type": "boolean"
          },
          "log": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "preBalanceLogId": {
            "type": "boolean"
          },
          "preBalanceLog": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogArgs"
              }
            ]
          },
          "balanceLogs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogFindManyArgs"
              }
            ]
          },
          "userId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ShopSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "logo": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "producs": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceFindManyArgs"
              }
            ]
          },
          "shopMember": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ShopMemberSelect": {
        "type": "object",
        "properties": {
          "role": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "shop": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopArgs"
              }
            ]
          },
          "userId": {
            "type": "boolean"
          },
          "user": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "values": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueFindManyArgs"
              }
            ]
          },
          "producId": {
            "type": "boolean"
          },
          "produc": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValueSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "iamge": {
            "type": "boolean"
          },
          "produceSpecificationId": {
            "type": "boolean"
          },
          "produceSpecification": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationArgs"
              }
            ]
          },
          "producePrices": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceFindManyArgs"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindManyArgs"
              }
            ]
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProducePriceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "goods_no": {
            "type": "boolean"
          },
          "currency": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          },
          "produc": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "produceSpecificationValues": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueFindManyArgs"
              }
            ]
          },
          "produceSpecificationValuePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ProduceSpecificationValuePriceSelect": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "boolean"
          },
          "producePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceArgs"
              }
            ]
          },
          "produceSpecificationValueId": {
            "type": "boolean"
          },
          "produceSpecificationValue": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueArgs"
              }
            ]
          }
        }
      },
      "ProduceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "linePrice": {
            "type": "boolean"
          },
          "tags": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "shop": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopArgs"
              }
            ]
          },
          "produceSpecification": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationFindManyArgs"
              }
            ]
          },
          "producePrice": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceFindManyArgs"
              }
            ]
          },
          "type": {
            "type": "boolean"
          },
          "cardProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceArgs"
              }
            ]
          },
          "comboProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceArgs"
              }
            ]
          },
          "physicalProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "CardProduceAccountSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "cardProduceId": {
            "type": "boolean"
          },
          "cardProduce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceArgs"
              }
            ]
          }
        }
      },
      "CardProduceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "cardProduceAccounts": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ComboProduceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "freeExpressFeeRuleCitys": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityFindManyArgs"
              }
            ]
          },
          "physicalProduces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceFindManyArgs"
              }
            ]
          },
          "isDef": {
            "type": "boolean"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "FreeExpressFeeRuleCitySelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "limit": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          },
          "expressFeeRuleCitys": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityFindManyArgs"
              }
            ]
          },
          "physicalProduces": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCitySelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "PhysicalProduceSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "produce": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceArgs"
              }
            ]
          },
          "expressFee": {
            "type": "boolean"
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "freeExpressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleArgs"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "boolean"
          },
          "expressFeeRule": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleArgs"
              }
            ]
          }
        }
      },
      "I18nValueSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "lang": {
            "type": "boolean"
          }
        }
      },
      "ConfigValueSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          }
        }
      },
      "VideoSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "summary": {
            "type": "boolean"
          },
          "coverUrl": {
            "type": "boolean"
          },
          "publishedAt": {
            "type": "boolean"
          },
          "videoTypeId": {
            "type": "boolean"
          },
          "videoType": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeArgs"
              }
            ]
          },
          "videoTags": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagFindManyArgs"
              }
            ]
          },
          "videoSetId": {
            "type": "boolean"
          },
          "videoSet": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoTypeSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "parent": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeArgs"
              }
            ]
          },
          "children": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeFindManyArgs"
              }
            ]
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoTagSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "VideoSetSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "videos": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "SiteSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "host": {
            "type": "boolean"
          },
          "keywords": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "icon": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "pages": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageFindManyArgs"
              }
            ]
          },
          "crawlTasks": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskFindManyArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "PageSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          },
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtml": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "parent": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageArgs"
              }
            ]
          },
          "children": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageFindManyArgs"
              }
            ]
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          },
          "site": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteArgs"
              }
            ]
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageCountOutputTypeArgs"
              }
            ]
          }
        }
      },
      "CrawlTaskSelect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creator": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserArgs"
              }
            ]
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          },
          "site": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteArgs"
              }
            ]
          }
        }
      },
      "UserCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "UserMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "boolean"
          }
        }
      },
      "UserMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "image": {
            "type": "boolean"
          },
          "phone": {
            "type": "boolean"
          },
          "role": {
            "type": "boolean"
          },
          "password": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "boolean"
          }
        }
      },
      "AccountCountAggregateInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "provider": {
            "type": "boolean"
          },
          "providerAccountId": {
            "type": "boolean"
          },
          "refresh_token": {
            "type": "boolean"
          },
          "access_token": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "boolean"
          },
          "token_type": {
            "type": "boolean"
          },
          "scope": {
            "type": "boolean"
          },
          "id_token": {
            "type": "boolean"
          },
          "session_state": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "AccountAvgAggregateInput": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "boolean"
          }
        }
      },
      "AccountSumAggregateInput": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "boolean"
          }
        }
      },
      "AccountMinAggregateInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "provider": {
            "type": "boolean"
          },
          "providerAccountId": {
            "type": "boolean"
          },
          "refresh_token": {
            "type": "boolean"
          },
          "access_token": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "boolean"
          },
          "token_type": {
            "type": "boolean"
          },
          "scope": {
            "type": "boolean"
          },
          "id_token": {
            "type": "boolean"
          },
          "session_state": {
            "type": "boolean"
          }
        }
      },
      "AccountMaxAggregateInput": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "provider": {
            "type": "boolean"
          },
          "providerAccountId": {
            "type": "boolean"
          },
          "refresh_token": {
            "type": "boolean"
          },
          "access_token": {
            "type": "boolean"
          },
          "expires_at": {
            "type": "boolean"
          },
          "token_type": {
            "type": "boolean"
          },
          "scope": {
            "type": "boolean"
          },
          "id_token": {
            "type": "boolean"
          },
          "session_state": {
            "type": "boolean"
          }
        }
      },
      "SessionCountAggregateInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "SessionMinAggregateInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          }
        }
      },
      "SessionMaxAggregateInput": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          }
        }
      },
      "VerificationTokenCountAggregateInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "boolean"
          },
          "token": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "VerificationTokenMinAggregateInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "boolean"
          },
          "token": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          }
        }
      },
      "VerificationTokenMaxAggregateInput": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "boolean"
          },
          "token": {
            "type": "boolean"
          },
          "expires": {
            "type": "boolean"
          }
        }
      },
      "LoginLogCountAggregateInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "startAt": {
            "type": "boolean"
          },
          "endAt": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "LoginLogMinAggregateInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "startAt": {
            "type": "boolean"
          },
          "endAt": {
            "type": "boolean"
          }
        }
      },
      "LoginLogMaxAggregateInput": {
        "type": "object",
        "properties": {
          "day": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "startAt": {
            "type": "boolean"
          },
          "endAt": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          },
          "remark": {
            "type": "boolean"
          },
          "log": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "preBalanceLogId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogAvgAggregateInput": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogSumAggregateInput": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          },
          "remark": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "preBalanceLogId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "BalanceLogMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "balance": {
            "type": "boolean"
          },
          "change": {
            "type": "boolean"
          },
          "changeBefore": {
            "type": "boolean"
          },
          "remark": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "preBalanceLogId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "ShopCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "logo": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ShopMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "logo": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "ShopMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "logo": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          }
        }
      },
      "ShopMemberCountAggregateInput": {
        "type": "object",
        "properties": {
          "role": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ShopMemberMinAggregateInput": {
        "type": "object",
        "properties": {
          "role": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "ShopMemberMaxAggregateInput": {
        "type": "object",
        "properties": {
          "role": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "userId": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValueCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "iamge": {
            "type": "boolean"
          },
          "produceSpecificationId": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValueMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "iamge": {
            "type": "boolean"
          },
          "produceSpecificationId": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValueMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "iamge": {
            "type": "boolean"
          },
          "produceSpecificationId": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "goods_no": {
            "type": "boolean"
          },
          "currency": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceAvgAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceSumAggregateInput": {
        "type": "object",
        "properties": {
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "goods_no": {
            "type": "boolean"
          },
          "currency": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "goods_no": {
            "type": "boolean"
          },
          "currency": {
            "type": "boolean"
          },
          "price": {
            "type": "boolean"
          },
          "cost": {
            "type": "boolean"
          },
          "weight": {
            "type": "boolean"
          },
          "stock": {
            "type": "boolean"
          },
          "reduceStock": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValuePriceCountAggregateInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "boolean"
          },
          "produceSpecificationValueId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValuePriceMinAggregateInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "boolean"
          },
          "produceSpecificationValueId": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValuePriceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "boolean"
          },
          "produceSpecificationValueId": {
            "type": "boolean"
          }
        }
      },
      "ProduceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "linePrice": {
            "type": "boolean"
          },
          "tags": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ProduceAvgAggregateInput": {
        "type": "object",
        "properties": {
          "linePrice": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          }
        }
      },
      "ProduceSumAggregateInput": {
        "type": "object",
        "properties": {
          "linePrice": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          }
        }
      },
      "ProduceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "linePrice": {
            "type": "boolean"
          },
          "tags": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          }
        }
      },
      "ProduceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "linePrice": {
            "type": "boolean"
          },
          "tags": {
            "type": "boolean"
          },
          "visits": {
            "type": "boolean"
          },
          "saled": {
            "type": "boolean"
          },
          "saledAmount": {
            "type": "boolean"
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "type": "boolean"
          },
          "limitBuyValue": {
            "type": "boolean"
          },
          "minBuyValue": {
            "type": "boolean"
          },
          "shopId": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          }
        }
      },
      "CardProduceAccountCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "cardProduceId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "CardProduceAccountMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "cardProduceId": {
            "type": "boolean"
          }
        }
      },
      "CardProduceAccountMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "cardProduceId": {
            "type": "boolean"
          }
        }
      },
      "CardProduceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "CardProduceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          }
        }
      },
      "CardProduceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          }
        }
      },
      "ComboProduceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ComboProduceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          }
        }
      },
      "ComboProduceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCityCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "limit": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCityAvgAggregateInput": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCitySumAggregateInput": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCityMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "limit": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCityMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "limit": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "type": {
            "type": "boolean"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCityCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCityAvgAggregateInput": {
        "type": "object",
        "properties": {
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCitySumAggregateInput": {
        "type": "object",
        "properties": {
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCityMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCityMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "citys": {
            "type": "boolean"
          },
          "firstLimit": {
            "type": "boolean"
          },
          "firstFee": {
            "type": "boolean"
          },
          "step": {
            "type": "boolean"
          },
          "stepFee": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "PhysicalProduceCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "expressFee": {
            "type": "boolean"
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "PhysicalProduceAvgAggregateInput": {
        "type": "object",
        "properties": {
          "expressFee": {
            "type": "boolean"
          }
        }
      },
      "PhysicalProduceSumAggregateInput": {
        "type": "object",
        "properties": {
          "expressFee": {
            "type": "boolean"
          }
        }
      },
      "PhysicalProduceMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "expressFee": {
            "type": "boolean"
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "PhysicalProduceMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "produceId": {
            "type": "boolean"
          },
          "expressFee": {
            "type": "boolean"
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "boolean"
          },
          "expressFeeRuleId": {
            "type": "boolean"
          }
        }
      },
      "I18nValueCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "lang": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "I18nValueMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "lang": {
            "type": "boolean"
          }
        }
      },
      "I18nValueMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "lang": {
            "type": "boolean"
          }
        }
      },
      "ConfigValueCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          },
          "value": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "ConfigValueMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          }
        }
      },
      "ConfigValueMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "boolean"
          }
        }
      },
      "VideoCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "summary": {
            "type": "boolean"
          },
          "coverUrl": {
            "type": "boolean"
          },
          "publishedAt": {
            "type": "boolean"
          },
          "videoTypeId": {
            "type": "boolean"
          },
          "videoSetId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "VideoMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "summary": {
            "type": "boolean"
          },
          "coverUrl": {
            "type": "boolean"
          },
          "publishedAt": {
            "type": "boolean"
          },
          "videoTypeId": {
            "type": "boolean"
          },
          "videoSetId": {
            "type": "boolean"
          }
        }
      },
      "VideoMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "summary": {
            "type": "boolean"
          },
          "coverUrl": {
            "type": "boolean"
          },
          "publishedAt": {
            "type": "boolean"
          },
          "videoTypeId": {
            "type": "boolean"
          },
          "videoSetId": {
            "type": "boolean"
          }
        }
      },
      "VideoTypeCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "VideoTypeMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          }
        }
      },
      "VideoTypeMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          }
        }
      },
      "VideoTagCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "VideoTagMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          }
        }
      },
      "VideoTagMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          }
        }
      },
      "VideoSetCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "VideoSetMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          }
        }
      },
      "VideoSetMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "label": {
            "type": "boolean"
          }
        }
      },
      "SiteCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "host": {
            "type": "boolean"
          },
          "keywords": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "icon": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "SiteMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "host": {
            "type": "boolean"
          },
          "keywords": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "icon": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          }
        }
      },
      "SiteMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "title": {
            "type": "boolean"
          },
          "host": {
            "type": "boolean"
          },
          "keywords": {
            "type": "boolean"
          },
          "description": {
            "type": "boolean"
          },
          "icon": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          }
        }
      },
      "PageCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          },
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtml": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "PageAvgAggregateInput": {
        "type": "object",
        "properties": {
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          }
        }
      },
      "PageSumAggregateInput": {
        "type": "object",
        "properties": {
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          }
        }
      },
      "PageMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          },
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtml": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          }
        }
      },
      "PageMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "url": {
            "type": "boolean"
          },
          "content": {
            "type": "boolean"
          },
          "contentSize": {
            "type": "boolean"
          },
          "cleanHtml": {
            "type": "boolean"
          },
          "cleanHtmlSize": {
            "type": "boolean"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "type": "boolean"
          },
          "parentId": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          }
        }
      },
      "CrawlTaskCountAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          },
          "_all": {
            "type": "boolean"
          }
        }
      },
      "CrawlTaskMinAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          }
        }
      },
      "CrawlTaskMaxAggregateInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "boolean"
          },
          "updatedAt": {
            "type": "boolean"
          },
          "deletedAt": {
            "type": "boolean"
          },
          "creatorId": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "boolean"
          }
        }
      },
      "AggregateUser": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/UserCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateOutputType"
          }
        }
      },
      "UserGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/UserCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "block"
        ]
      },
      "AggregateAccount": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/AccountCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/AccountAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/AccountSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateOutputType"
          }
        }
      },
      "AccountGroupByOutputType": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/AccountCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/AccountAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/AccountSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateOutputType"
          }
        },
        "required": [
          "userId",
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "AggregateSession": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SessionCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/SessionMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/SessionMaxAggregateOutputType"
          }
        }
      },
      "SessionGroupByOutputType": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "$ref": "#/components/schemas/SessionCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/SessionMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/SessionMaxAggregateOutputType"
          }
        },
        "required": [
          "sessionToken",
          "userId",
          "expires"
        ]
      },
      "AggregateVerificationToken": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/VerificationTokenCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VerificationTokenMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VerificationTokenMaxAggregateOutputType"
          }
        }
      },
      "VerificationTokenGroupByOutputType": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "$ref": "#/components/schemas/VerificationTokenCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VerificationTokenMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VerificationTokenMaxAggregateOutputType"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "AggregateLoginLog": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/LoginLogCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/LoginLogMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/LoginLogMaxAggregateOutputType"
          }
        }
      },
      "LoginLogGroupByOutputType": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "$ref": "#/components/schemas/LoginLogCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/LoginLogMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/LoginLogMaxAggregateOutputType"
          }
        },
        "required": [
          "day",
          "userId",
          "startAt",
          "endAt"
        ]
      },
      "AggregateBalanceLog": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/BalanceLogCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/BalanceLogAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/BalanceLogSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/BalanceLogMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/BalanceLogMaxAggregateOutputType"
          }
        }
      },
      "BalanceLogGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "log": {},
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/BalanceLogCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/BalanceLogAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/BalanceLogSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/BalanceLogMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/BalanceLogMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "balance",
          "change",
          "changeBefore",
          "remark",
          "createdAt",
          "userId"
        ]
      },
      "AggregateShop": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ShopCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMaxAggregateOutputType"
          }
        }
      },
      "ShopGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          },
          "_count": {
            "$ref": "#/components/schemas/ShopCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "status"
        ]
      },
      "AggregateShopMember": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ShopMemberCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMemberMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMemberMaxAggregateOutputType"
          }
        }
      },
      "ShopMemberGroupByOutputType": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ShopMemberCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMemberMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMemberMaxAggregateOutputType"
          }
        },
        "required": [
          "role",
          "shopId",
          "userId"
        ]
      },
      "AggregateProduceSpecification": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationMaxAggregateOutputType"
          }
        }
      },
      "ProduceSpecificationGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "producId"
        ]
      },
      "AggregateProduceSpecificationValue": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMaxAggregateOutputType"
          }
        }
      },
      "ProduceSpecificationValueGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "value",
          "produceSpecificationId",
          "deleted"
        ]
      },
      "AggregateProducePrice": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ProducePriceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProducePriceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProducePriceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProducePriceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProducePriceMaxAggregateOutputType"
          }
        }
      },
      "ProducePriceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ProducePriceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProducePriceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProducePriceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProducePriceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProducePriceMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "currency",
          "price",
          "cost",
          "weight",
          "stock",
          "reduceStock",
          "saled",
          "saledAmount",
          "deleted",
          "producId"
        ]
      },
      "AggregateProduceSpecificationValuePrice": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMaxAggregateOutputType"
          }
        }
      },
      "ProduceSpecificationValuePriceGroupByOutputType": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "produceSpecificationValueId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMaxAggregateOutputType"
          }
        },
        "required": [
          "producePriceId",
          "produceSpecificationValueId"
        ]
      },
      "AggregateProduce": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ProduceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProduceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProduceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceMaxAggregateOutputType"
          }
        }
      },
      "ProduceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          },
          "_count": {
            "$ref": "#/components/schemas/ProduceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProduceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProduceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "status",
          "linePrice",
          "visits",
          "saled",
          "saledAmount",
          "isLimitBuy",
          "shopId",
          "type"
        ]
      },
      "AggregateCardProduceAccount": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/CardProduceAccountCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceAccountMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceAccountMaxAggregateOutputType"
          }
        }
      },
      "CardProduceAccountGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduceId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/CardProduceAccountCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceAccountMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceAccountMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "value",
          "status",
          "cardProduceId"
        ]
      },
      "AggregateCardProduce": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/CardProduceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceMaxAggregateOutputType"
          }
        }
      },
      "CardProduceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/CardProduceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "produceId"
        ]
      },
      "AggregateComboProduce": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ComboProduceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ComboProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ComboProduceMaxAggregateOutputType"
          }
        }
      },
      "ComboProduceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ComboProduceCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ComboProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ComboProduceMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "produceId"
        ]
      },
      "AggregateFreeExpressFeeRule": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMaxAggregateOutputType"
          }
        }
      },
      "FreeExpressFeeRuleGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          },
          "_count": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "AggregateFreeExpressFeeRuleCity": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMaxAggregateOutputType"
          }
        }
      },
      "FreeExpressFeeRuleCityGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "citys",
          "limit",
          "freeExpressFeeRuleId"
        ]
      },
      "AggregateExpressFeeRule": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ExpressFeeRuleCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleMaxAggregateOutputType"
          }
        }
      },
      "ExpressFeeRuleGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          },
          "_count": {
            "$ref": "#/components/schemas/ExpressFeeRuleCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "name",
          "type",
          "isDef"
        ]
      },
      "AggregateExpressFeeRuleCity": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMaxAggregateOutputType"
          }
        }
      },
      "ExpressFeeRuleCityGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRuleId"
        ]
      },
      "AggregatePhysicalProduce": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/PhysicalProduceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/PhysicalProduceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/PhysicalProduceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/PhysicalProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/PhysicalProduceMaxAggregateOutputType"
          }
        }
      },
      "PhysicalProduceGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRuleId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/PhysicalProduceCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/PhysicalProduceAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/PhysicalProduceSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/PhysicalProduceMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/PhysicalProduceMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "expressFeeRuleId"
        ]
      },
      "AggregateI18nValue": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/I18nValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/I18nValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/I18nValueMaxAggregateOutputType"
          }
        }
      },
      "I18nValueGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/I18nValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/I18nValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/I18nValueMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "key",
          "value",
          "lang"
        ]
      },
      "AggregateConfigValue": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/ConfigValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ConfigValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ConfigValueMaxAggregateOutputType"
          }
        }
      },
      "ConfigValueGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          },
          "value": {},
          "_count": {
            "$ref": "#/components/schemas/ConfigValueCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/ConfigValueMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/ConfigValueMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "key",
          "value"
        ]
      },
      "AggregateVideo": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/VideoCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoMaxAggregateOutputType"
          }
        }
      },
      "VideoGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/VideoCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "url",
          "title",
          "summary",
          "coverUrl",
          "publishedAt",
          "videoTypeId"
        ]
      },
      "AggregateVideoType": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/VideoTypeCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTypeMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTypeMaxAggregateOutputType"
          }
        }
      },
      "VideoTypeGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/VideoTypeCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTypeMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTypeMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "AggregateVideoTag": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/VideoTagCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTagMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTagMaxAggregateOutputType"
          }
        }
      },
      "VideoTagGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/VideoTagCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTagMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTagMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "AggregateVideoSet": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/VideoSetCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoSetMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoSetMaxAggregateOutputType"
          }
        }
      },
      "VideoSetGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/VideoSetCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/VideoSetMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoSetMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "AggregateSite": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/SiteCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/SiteMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/SiteMaxAggregateOutputType"
          }
        }
      },
      "SiteGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "_count": {
            "$ref": "#/components/schemas/SiteCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/SiteMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/SiteMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "host",
          "createdAt",
          "updatedAt"
        ]
      },
      "AggregatePage": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/PageCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/PageAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/PageSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/PageMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/PageMaxAggregateOutputType"
          }
        }
      },
      "PageGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/PageCountAggregateOutputType"
          },
          "_avg": {
            "$ref": "#/components/schemas/PageAvgAggregateOutputType"
          },
          "_sum": {
            "$ref": "#/components/schemas/PageSumAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/PageMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/PageMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "url",
          "contentSize",
          "cleanHtmlSize",
          "isHost",
          "status",
          "createdAt",
          "updatedAt",
          "siteId"
        ]
      },
      "AggregateCrawlTask": {
        "type": "object",
        "properties": {
          "_count": {
            "$ref": "#/components/schemas/CrawlTaskCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CrawlTaskMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CrawlTaskMaxAggregateOutputType"
          }
        }
      },
      "CrawlTaskGroupByOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          },
          "_count": {
            "$ref": "#/components/schemas/CrawlTaskCountAggregateOutputType"
          },
          "_min": {
            "$ref": "#/components/schemas/CrawlTaskMinAggregateOutputType"
          },
          "_max": {
            "$ref": "#/components/schemas/CrawlTaskMaxAggregateOutputType"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deleted",
          "published",
          "siteId"
        ]
      },
      "UserCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "email": {
            "type": "integer"
          },
          "emailVerified": {
            "type": "integer"
          },
          "image": {
            "type": "integer"
          },
          "phone": {
            "type": "integer"
          },
          "role": {
            "type": "integer"
          },
          "password": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "block": {
            "type": "integer"
          },
          "inviterId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "emailVerified",
          "image",
          "phone",
          "role",
          "password",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "deleted",
          "block",
          "inviterId",
          "_all"
        ]
      },
      "UserMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          }
        }
      },
      "UserMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "string",
            "format": "date-time"
          },
          "image": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "block": {
            "type": "boolean"
          },
          "inviterId": {
            "type": "string"
          }
        }
      },
      "AccountCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          },
          "provider": {
            "type": "integer"
          },
          "providerAccountId": {
            "type": "integer"
          },
          "refresh_token": {
            "type": "integer"
          },
          "access_token": {
            "type": "integer"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "integer"
          },
          "scope": {
            "type": "integer"
          },
          "id_token": {
            "type": "integer"
          },
          "session_state": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "userId",
          "type",
          "provider",
          "providerAccountId",
          "refresh_token",
          "access_token",
          "expires_at",
          "token_type",
          "scope",
          "id_token",
          "session_state",
          "_all"
        ]
      },
      "AccountAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "number"
          }
        }
      },
      "AccountSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "expires_at": {
            "type": "integer"
          }
        }
      },
      "AccountMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        }
      },
      "AccountMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "session_state": {
            "type": "string"
          }
        }
      },
      "SessionCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "expires": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "sessionToken",
          "userId",
          "expires",
          "_all"
        ]
      },
      "SessionMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SessionMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VerificationTokenCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "integer"
          },
          "token": {
            "type": "integer"
          },
          "expires": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires",
          "_all"
        ]
      },
      "VerificationTokenMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "VerificationTokenMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginLogCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "startAt": {
            "type": "integer"
          },
          "endAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "day",
          "userId",
          "startAt",
          "endAt",
          "_all"
        ]
      },
      "LoginLogMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginLogMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "startAt": {
            "type": "string",
            "format": "date-time"
          },
          "endAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BalanceLogCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "balance": {
            "type": "integer"
          },
          "change": {
            "type": "integer"
          },
          "changeBefore": {
            "type": "integer"
          },
          "remark": {
            "type": "integer"
          },
          "log": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "preBalanceLogId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "balance",
          "change",
          "changeBefore",
          "remark",
          "log",
          "createdAt",
          "creatorId",
          "preBalanceLogId",
          "userId",
          "_all"
        ]
      },
      "BalanceLogAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "BalanceLogSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "BalanceLogMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "BalanceLogMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "change": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "changeBefore": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "remark": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "preBalanceLogId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "ShopCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "logo": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "logo",
          "status",
          "_all"
        ]
      },
      "ShopMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          }
        }
      },
      "ShopMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ShowStatus"
          }
        }
      },
      "ShopMemberCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "role": {
            "type": "integer"
          },
          "shopId": {
            "type": "integer"
          },
          "userId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "role",
          "shopId",
          "userId",
          "_all"
        ]
      },
      "ShopMemberMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "ShopMemberMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "role": {
            "$ref": "#/components/schemas/ShopMemberRole"
          },
          "shopId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "ProduceSpecificationCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "producId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "producId",
          "_all"
        ]
      },
      "ProduceSpecificationMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          }
        }
      },
      "ProduceSpecificationMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "producId": {
            "type": "string"
          }
        }
      },
      "ProduceSpecificationValueCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          },
          "iamge": {
            "type": "integer"
          },
          "produceSpecificationId": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "value",
          "iamge",
          "produceSpecificationId",
          "deletedAt",
          "deleted",
          "_all"
        ]
      },
      "ProduceSpecificationValueMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "ProduceSpecificationValueMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "iamge": {
            "type": "string"
          },
          "produceSpecificationId": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          }
        }
      },
      "ProducePriceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "goods_no": {
            "type": "integer"
          },
          "currency": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "cost": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "producId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "goods_no",
          "currency",
          "price",
          "cost",
          "weight",
          "stock",
          "reduceStock",
          "saled",
          "saledAmount",
          "deletedAt",
          "deleted",
          "producId",
          "_all"
        ]
      },
      "ProducePriceAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "number"
          },
          "stock": {
            "type": "number"
          },
          "reduceStock": {
            "type": "number"
          },
          "saled": {
            "type": "number"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ProducePriceSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ProducePriceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          }
        }
      },
      "ProducePriceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goods_no": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyType"
          },
          "price": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "cost": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "weight": {
            "type": "integer"
          },
          "stock": {
            "type": "integer"
          },
          "reduceStock": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "producId": {
            "type": "string"
          }
        }
      },
      "ProduceSpecificationValuePriceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "integer"
          },
          "produceSpecificationValueId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "producePriceId",
          "produceSpecificationValueId",
          "_all"
        ]
      },
      "ProduceSpecificationValuePriceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "produceSpecificationValueId": {
            "type": "string"
          }
        }
      },
      "ProduceSpecificationValuePriceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "producePriceId": {
            "type": "string"
          },
          "produceSpecificationValueId": {
            "type": "string"
          }
        }
      },
      "ProduceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "linePrice": {
            "type": "integer"
          },
          "tags": {
            "type": "integer"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "type": "integer"
          },
          "isLimitBuy": {
            "type": "integer"
          },
          "limitBuyType": {
            "type": "integer"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "status",
          "linePrice",
          "tags",
          "visits",
          "saled",
          "saledAmount",
          "isLimitBuy",
          "limitBuyType",
          "limitBuyValue",
          "minBuyValue",
          "shopId",
          "type",
          "_all"
        ]
      },
      "ProduceAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "visits": {
            "type": "number"
          },
          "saled": {
            "type": "number"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "limitBuyValue": {
            "type": "number"
          },
          "minBuyValue": {
            "type": "number"
          }
        }
      },
      "ProduceSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          }
        }
      },
      "ProduceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          }
        }
      },
      "ProduceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ProduceStatus"
          },
          "linePrice": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "tags": {
            "type": "string"
          },
          "visits": {
            "type": "integer"
          },
          "saled": {
            "type": "integer"
          },
          "saledAmount": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isLimitBuy": {
            "type": "boolean"
          },
          "limitBuyType": {
            "$ref": "#/components/schemas/LimitBuyType"
          },
          "limitBuyValue": {
            "type": "integer"
          },
          "minBuyValue": {
            "type": "integer"
          },
          "shopId": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProduceType"
          }
        }
      },
      "CardProduceAccountCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "cardProduceId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "value",
          "status",
          "cardProduceId",
          "_all"
        ]
      },
      "CardProduceAccountMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduceId": {
            "type": "string"
          }
        }
      },
      "CardProduceAccountMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CardProduceAccountStatus"
          },
          "cardProduceId": {
            "type": "string"
          }
        }
      },
      "CardProduceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "produceId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "produceId",
          "_all"
        ]
      },
      "CardProduceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        }
      },
      "CardProduceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        }
      },
      "ComboProduceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "produceId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "produceId",
          "_all"
        ]
      },
      "ComboProduceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        }
      },
      "ComboProduceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          }
        }
      },
      "FreeExpressFeeRuleCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          },
          "isDef": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "type",
          "isDef",
          "_all"
        ]
      },
      "FreeExpressFeeRuleMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleType"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "FreeExpressFeeRuleCityCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "citys": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "citys",
          "limit",
          "freeExpressFeeRuleId",
          "_all"
        ]
      },
      "FreeExpressFeeRuleCityAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number"
          }
        }
      },
      "FreeExpressFeeRuleCitySumAggregateOutputType": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer"
          }
        }
      },
      "FreeExpressFeeRuleCityMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "FreeExpressFeeRuleCityMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "limit": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "ExpressFeeRuleCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "name": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          },
          "isDef": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "name",
          "type",
          "isDef",
          "_all"
        ]
      },
      "ExpressFeeRuleMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ExpressFeeRuleTyle"
          },
          "isDef": {
            "type": "boolean"
          }
        }
      },
      "ExpressFeeRuleCityCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "citys": {
            "type": "integer"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "type": "integer"
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "type": "integer"
          },
          "expressFeeRuleId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "citys",
          "firstLimit",
          "firstFee",
          "step",
          "stepFee",
          "expressFeeRuleId",
          "_all"
        ]
      },
      "ExpressFeeRuleCityAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "firstLimit": {
            "type": "number"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "number"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCitySumAggregateOutputType": {
        "type": "object",
        "properties": {
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "ExpressFeeRuleCityMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "ExpressFeeRuleCityMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "citys": {
            "type": "string"
          },
          "firstLimit": {
            "type": "integer"
          },
          "firstFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "step": {
            "type": "integer"
          },
          "stepFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "PhysicalProduceCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "produceId": {
            "type": "integer"
          },
          "expressFee": {
            "type": "integer"
          },
          "isFreeExpressFee": {
            "type": "integer"
          },
          "freeExpressFeeRuleId": {
            "type": "integer"
          },
          "expressFeeRuleId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "produceId",
          "expressFee",
          "isFreeExpressFee",
          "freeExpressFeeRuleId",
          "expressFeeRuleId",
          "_all"
        ]
      },
      "PhysicalProduceAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "PhysicalProduceSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "PhysicalProduceMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "PhysicalProduceMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "produceId": {
            "type": "string"
          },
          "expressFee": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "isFreeExpressFee": {
            "type": "boolean"
          },
          "freeExpressFeeRuleId": {
            "type": "string"
          },
          "expressFeeRuleId": {
            "type": "string"
          }
        }
      },
      "I18nValueCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "key": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          },
          "lang": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "key",
          "value",
          "lang",
          "_all"
        ]
      },
      "I18nValueMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        }
      },
      "I18nValueMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        }
      },
      "ConfigValueCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "key": {
            "type": "integer"
          },
          "value": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "key",
          "value",
          "_all"
        ]
      },
      "ConfigValueMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          }
        }
      },
      "ConfigValueMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "key": {
            "$ref": "#/components/schemas/ConfigValueKey"
          }
        }
      },
      "VideoCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "url": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "summary": {
            "type": "integer"
          },
          "coverUrl": {
            "type": "integer"
          },
          "publishedAt": {
            "type": "integer"
          },
          "videoTypeId": {
            "type": "integer"
          },
          "videoSetId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "url",
          "title",
          "summary",
          "coverUrl",
          "publishedAt",
          "videoTypeId",
          "videoSetId",
          "_all"
        ]
      },
      "VideoMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          }
        }
      },
      "VideoMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "coverUrl": {
            "type": "string"
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoTypeId": {
            "type": "string"
          },
          "videoSetId": {
            "type": "string"
          }
        }
      },
      "VideoTypeCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "integer"
          },
          "parentId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "label",
          "parentId",
          "_all"
        ]
      },
      "VideoTypeMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "VideoTypeMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "VideoTagCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "label",
          "_all"
        ]
      },
      "VideoTagMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "VideoTagMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "VideoSetCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "label": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "label",
          "_all"
        ]
      },
      "VideoSetMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "VideoSetMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "SiteCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "integer"
          },
          "host": {
            "type": "integer"
          },
          "keywords": {
            "type": "integer"
          },
          "description": {
            "type": "integer"
          },
          "icon": {
            "type": "integer"
          },
          "thumbnail": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "title",
          "host",
          "keywords",
          "description",
          "icon",
          "thumbnail",
          "createdAt",
          "updatedAt",
          "_all"
        ]
      },
      "SiteMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SiteMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "integer"
          },
          "content": {
            "type": "integer"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "integer"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "parentId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "siteId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "url",
          "content",
          "contentSize",
          "cleanHtml",
          "cleanHtmlSize",
          "isHost",
          "status",
          "parentId",
          "createdAt",
          "updatedAt",
          "siteId",
          "_all"
        ]
      },
      "PageAvgAggregateOutputType": {
        "type": "object",
        "properties": {
          "contentSize": {
            "type": "number"
          },
          "cleanHtmlSize": {
            "type": "number"
          }
        }
      },
      "PageSumAggregateOutputType": {
        "type": "object",
        "properties": {
          "contentSize": {
            "type": "integer"
          },
          "cleanHtmlSize": {
            "type": "integer"
          }
        }
      },
      "PageMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          }
        }
      },
      "PageMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "contentSize": {
            "type": "integer"
          },
          "cleanHtml": {
            "type": "string"
          },
          "cleanHtmlSize": {
            "type": "integer"
          },
          "isHost": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "parentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "siteId": {
            "type": "string"
          }
        }
      },
      "CrawlTaskCountAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "updatedAt": {
            "type": "integer"
          },
          "deletedAt": {
            "type": "integer"
          },
          "creatorId": {
            "type": "integer"
          },
          "deleted": {
            "type": "integer"
          },
          "published": {
            "type": "integer"
          },
          "siteId": {
            "type": "integer"
          },
          "_all": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "creatorId",
          "deleted",
          "published",
          "siteId",
          "_all"
        ]
      },
      "CrawlTaskMinAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          }
        }
      },
      "CrawlTaskMaxAggregateOutputType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creatorId": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "siteId": {
            "type": "string"
          }
        }
      },
      "_Meta": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Meta information about the request or response",
            "properties": {
              "serialization": {
                "description": "Serialization metadata"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "_Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "prisma": {
                "type": "boolean",
                "description": "Indicates if the error occurred during a Prisma call"
              },
              "rejectedByPolicy": {
                "type": "boolean",
                "description": "Indicates if the error was due to rejection by a policy"
              },
              "code": {
                "type": "string",
                "description": "Prisma error code. Only available when \"prisma\" field is true."
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "reason": {
                "type": "string",
                "description": "Detailed error reason"
              },
              "zodErrors": {
                "type": "object",
                "additionalProperties": true,
                "description": "Zod validation errors if the error is due to data validation failure"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "BatchPayload": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "UserCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "data": {
            "$ref": "#/components/schemas/UserCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UserCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/UserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/UserUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/UserCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/UserUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "include": {
            "$ref": "#/components/schemas/UserInclude"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/UserSelect"
          },
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/UserWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "UserGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/UserWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/UserOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/UserScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/UserScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/UserCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/UserMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/UserMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "data": {
            "$ref": "#/components/schemas/AccountCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccountCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/AccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/AccountUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/AccountCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/AccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/AccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/AccountSelect"
          },
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/AccountWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/AccountSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/AccountAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "AccountGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/AccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/AccountOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/AccountScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/AccountScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/AccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/AccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/AccountMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/AccountSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/AccountAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "data": {
            "$ref": "#/components/schemas/SessionCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SessionCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/SessionUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/SessionUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/SessionCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/SessionUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SessionInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SessionSelect"
          },
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SessionOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/SessionWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SessionMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SessionMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SessionGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SessionWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SessionOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/SessionScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/SessionScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SessionCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SessionMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SessionMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "data": {
            "$ref": "#/components/schemas/VerificationTokenCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VerificationTokenCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/VerificationTokenUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/VerificationTokenUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/VerificationTokenCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/VerificationTokenUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VerificationTokenSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VerificationTokenOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/VerificationTokenWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VerificationTokenCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VerificationTokenMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VerificationTokenMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VerificationTokenGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VerificationTokenWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VerificationTokenOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/VerificationTokenScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VerificationTokenCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VerificationTokenMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VerificationTokenMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "data": {
            "$ref": "#/components/schemas/LoginLogCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LoginLogCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/LoginLogUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/LoginLogUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/LoginLogCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/LoginLogUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/LoginLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/LoginLogSelect"
          },
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/LoginLogOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/LoginLogWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/LoginLogCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/LoginLogMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/LoginLogMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "LoginLogGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/LoginLogWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/LoginLogOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/LoginLogScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/LoginLogScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/LoginLogCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/LoginLogMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/LoginLogMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "data": {
            "$ref": "#/components/schemas/BalanceLogCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BalanceLogCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/BalanceLogUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/BalanceLogUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/BalanceLogCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/BalanceLogUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "include": {
            "$ref": "#/components/schemas/BalanceLogInclude"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/BalanceLogSelect"
          },
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BalanceLogOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/BalanceLogWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BalanceLogMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BalanceLogMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/BalanceLogSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/BalanceLogAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "BalanceLogGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/BalanceLogWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/BalanceLogOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/BalanceLogScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/BalanceLogScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BalanceLogCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/BalanceLogMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/BalanceLogMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/BalanceLogSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/BalanceLogAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ShopCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ShopCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ShopUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ShopUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ShopCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ShopUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ShopOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ShopWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ShopOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ShopScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ShopScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ShopMemberCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ShopMemberCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ShopMemberUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ShopMemberUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ShopMemberCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ShopMemberUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ShopMemberInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ShopMemberSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ShopMemberOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ShopMemberWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMemberMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMemberMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ShopMemberGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ShopMemberWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ShopMemberOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ShopMemberScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ShopMemberScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ShopMemberCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ShopMemberMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ShopMemberMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ProduceSpecificationCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ProduceSpecificationUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ProduceSpecificationScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ProduceSpecificationScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ProduceSpecificationValueCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ProduceSpecificationValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValueSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValueGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ProduceSpecificationValueScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ProduceSpecificationValueScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ProducePriceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProducePriceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProducePriceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProducePriceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ProducePriceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ProducePriceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProducePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProducePriceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProducePriceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ProducePriceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProducePriceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProducePriceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProducePriceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProducePriceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProducePriceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProducePriceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProducePriceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ProducePriceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ProducePriceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProducePriceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProducePriceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProducePriceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProducePriceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProducePriceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceSpecificationValuePriceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceSpecificationValuePriceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProduceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ProduceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ProduceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ProduceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ProduceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProduceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProduceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ProduceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ProduceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ProduceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ProduceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ProduceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ProduceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceAccountCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CardProduceAccountCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceAccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceAccountUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/CardProduceAccountCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/CardProduceAccountUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceAccountInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceAccountSelect"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CardProduceAccountOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/CardProduceAccountWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceAccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceAccountMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAccountGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceAccountWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CardProduceAccountOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/CardProduceAccountScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/CardProduceAccountScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceAccountCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceAccountMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceAccountMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CardProduceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/CardProduceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/CardProduceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/CardProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CardProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CardProduceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CardProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/CardProduceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CardProduceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CardProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CardProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/CardProduceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/CardProduceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CardProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CardProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CardProduceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ComboProduceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ComboProduceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ComboProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ComboProduceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ComboProduceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ComboProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ComboProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ComboProduceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ComboProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ComboProduceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ComboProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ComboProduceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ComboProduceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ComboProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ComboProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ComboProduceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ComboProduceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ComboProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ComboProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ComboProduceMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleSelect"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySelect"
          },
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "FreeExpressFeeRuleCityGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCitySumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/FreeExpressFeeRuleCityAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ExpressFeeRuleCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ExpressFeeRuleUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ExpressFeeRuleOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ExpressFeeRuleScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ExpressFeeRuleScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "include": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySelect"
          },
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ExpressFeeRuleCityGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/ExpressFeeRuleCitySumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/ExpressFeeRuleCityAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "data": {
            "$ref": "#/components/schemas/PhysicalProduceCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PhysicalProduceCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/PhysicalProduceCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/PhysicalProduceUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PhysicalProduceInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PhysicalProduceSelect"
          },
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/PhysicalProduceWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/PhysicalProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/PhysicalProduceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/PhysicalProduceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/PhysicalProduceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PhysicalProduceGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PhysicalProduceWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/PhysicalProduceOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/PhysicalProduceScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/PhysicalProduceScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PhysicalProduceCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/PhysicalProduceMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/PhysicalProduceMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/PhysicalProduceSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/PhysicalProduceAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "data": {
            "$ref": "#/components/schemas/I18nValueCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/I18nValueCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/I18nValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/I18nValueUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/I18nValueCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/I18nValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/I18nValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/I18nValueSelect"
          },
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/I18nValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/I18nValueWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/I18nValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/I18nValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/I18nValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "I18nValueGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/I18nValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/I18nValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/I18nValueScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/I18nValueScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/I18nValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/I18nValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/I18nValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "data": {
            "$ref": "#/components/schemas/ConfigValueCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ConfigValueCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/ConfigValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/ConfigValueUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/ConfigValueCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/ConfigValueUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "include": {
            "$ref": "#/components/schemas/ConfigValueInclude"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/ConfigValueSelect"
          },
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ConfigValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/ConfigValueWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ConfigValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ConfigValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ConfigValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "ConfigValueGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/ConfigValueWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ConfigValueOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/ConfigValueScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/ConfigValueScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/ConfigValueCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/ConfigValueMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/ConfigValueMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "data": {
            "$ref": "#/components/schemas/VideoCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VideoCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/VideoCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/VideoUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/VideoWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/VideoScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/VideoScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTypeCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VideoTypeCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTypeUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTypeUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/VideoTypeCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/VideoTypeUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTypeInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTypeSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoTypeOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/VideoTypeWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTypeMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTypeMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTypeGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTypeWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoTypeOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/VideoTypeScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/VideoTypeScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTypeCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTypeMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTypeMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTagCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VideoTagCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTagUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoTagUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/VideoTagCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/VideoTagUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoTagInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoTagSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoTagOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/VideoTagWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTagMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTagMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoTagGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoTagWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoTagOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/VideoTagScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/VideoTagScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoTagCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoTagMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoTagMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "data": {
            "$ref": "#/components/schemas/VideoSetCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VideoSetCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoSetUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/VideoSetUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/VideoSetCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/VideoSetUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "include": {
            "$ref": "#/components/schemas/VideoSetInclude"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/VideoSetSelect"
          },
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoSetOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/VideoSetWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoSetMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoSetMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "VideoSetGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/VideoSetWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/VideoSetOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/VideoSetScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/VideoSetScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/VideoSetCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/VideoSetMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/VideoSetMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "data": {
            "$ref": "#/components/schemas/SiteCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SiteCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/SiteUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/SiteUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/SiteCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/SiteUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "include": {
            "$ref": "#/components/schemas/SiteInclude"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/SiteSelect"
          },
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SiteOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/SiteWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SiteMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SiteMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "SiteGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/SiteWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SiteOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/SiteScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/SiteScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/SiteCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/SiteMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/SiteMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "data": {
            "$ref": "#/components/schemas/PageCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PageCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/PageUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/PageUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/PageCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/PageUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "include": {
            "$ref": "#/components/schemas/PageInclude"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/PageSelect"
          },
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/PageOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/PageWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/PageMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/PageMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/PageSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/PageAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "PageGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/PageWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/PageOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/PageScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/PageScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/PageCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/PageMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/PageMaxAggregateInput"
          },
          "_sum": {
            "$ref": "#/components/schemas/PageSumAggregateInput"
          },
          "_avg": {
            "$ref": "#/components/schemas/PageAvgAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskCreateArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "data": {
            "$ref": "#/components/schemas/CrawlTaskCreateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskCreateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CrawlTaskCreateManyInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskFindUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskFindFirstArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskFindManyArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskUpdateArgs": {
        "type": "object",
        "required": [
          "where",
          "data"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/CrawlTaskUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskUpdateManyArgs": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/CrawlTaskUpdateManyMutationInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskUpsertArgs": {
        "type": "object",
        "required": [
          "create",
          "update",
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/CrawlTaskCreateInput"
          },
          "update": {
            "$ref": "#/components/schemas/CrawlTaskUpdateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskDeleteUniqueArgs": {
        "type": "object",
        "required": [
          "where"
        ],
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "include": {
            "$ref": "#/components/schemas/CrawlTaskInclude"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskDeleteManyArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskCountArgs": {
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/CrawlTaskSelect"
          },
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskAggregateArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CrawlTaskOrderByWithRelationAndSearchRelevanceInput"
          },
          "cursor": {
            "$ref": "#/components/schemas/CrawlTaskWhereUniqueInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CrawlTaskMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CrawlTaskMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      },
      "CrawlTaskGroupByArgs": {
        "type": "object",
        "properties": {
          "where": {
            "$ref": "#/components/schemas/CrawlTaskWhereInput"
          },
          "orderBy": {
            "$ref": "#/components/schemas/CrawlTaskOrderByWithRelationAndSearchRelevanceInput"
          },
          "by": {
            "$ref": "#/components/schemas/CrawlTaskScalarFieldEnum"
          },
          "having": {
            "$ref": "#/components/schemas/CrawlTaskScalarWhereWithAggregatesInput"
          },
          "take": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "_count": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/CrawlTaskCountAggregateInput"
              }
            ]
          },
          "_min": {
            "$ref": "#/components/schemas/CrawlTaskMinAggregateInput"
          },
          "_max": {
            "$ref": "#/components/schemas/CrawlTaskMaxAggregateInput"
          },
          "meta": {
            "$ref": "#/components/schemas/_Meta"
          }
        }
      }
    }
  },
  "paths": {
    "/api/user/create": {
      "post": {
        "operationId": "createUser",
        "description": "Create a new User",
        "tags": [
          "user"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/user/createMany": {
      "post": {
        "operationId": "createManyUser",
        "description": "Create several User",
        "tags": [
          "user"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/user/findUnique": {
      "get": {
        "operationId": "findUniqueUser",
        "description": "Find one unique User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/findFirst": {
      "get": {
        "operationId": "findFirstUser",
        "description": "Find the first User matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/findMany": {
      "get": {
        "operationId": "findManyUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/update": {
      "patch": {
        "operationId": "updateUser",
        "description": "Update a User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/user/updateMany": {
      "patch": {
        "operationId": "updateManyUser",
        "description": "Update Users matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/user/upsert": {
      "post": {
        "operationId": "upsertUser",
        "description": "Upsert a User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/user/delete": {
      "delete": {
        "operationId": "deleteUser",
        "description": "Delete one unique User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/deleteMany": {
      "delete": {
        "operationId": "deleteManyUser",
        "description": "Delete Users matching the given condition",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/count": {
      "get": {
        "operationId": "countUser",
        "description": "Find a list of User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/UserCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/aggregate": {
      "get": {
        "operationId": "aggregateUser",
        "description": "Aggregate Users",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateUser",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/user/groupBy": {
      "get": {
        "operationId": "groupByUser",
        "description": "Group Users by fields",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/create": {
      "post": {
        "operationId": "createAccount",
        "description": "Create a new Account",
        "tags": [
          "account"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/account/createMany": {
      "post": {
        "operationId": "createManyAccount",
        "description": "Create several Account",
        "tags": [
          "account"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/account/findUnique": {
      "get": {
        "operationId": "findUniqueAccount",
        "description": "Find one unique Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/findFirst": {
      "get": {
        "operationId": "findFirstAccount",
        "description": "Find the first Account matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/findMany": {
      "get": {
        "operationId": "findManyAccount",
        "description": "Find a list of Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/update": {
      "patch": {
        "operationId": "updateAccount",
        "description": "Update a Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/account/updateMany": {
      "patch": {
        "operationId": "updateManyAccount",
        "description": "Update Accounts matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/account/upsert": {
      "post": {
        "operationId": "upsertAccount",
        "description": "Upsert a Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/account/delete": {
      "delete": {
        "operationId": "deleteAccount",
        "description": "Delete one unique Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Account",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/deleteMany": {
      "delete": {
        "operationId": "deleteManyAccount",
        "description": "Delete Accounts matching the given condition",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/count": {
      "get": {
        "operationId": "countAccount",
        "description": "Find a list of Account",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/AccountCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/aggregate": {
      "get": {
        "operationId": "aggregateAccount",
        "description": "Aggregate Accounts",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/account/groupBy": {
      "get": {
        "operationId": "groupByAccount",
        "description": "Group Accounts by fields",
        "tags": [
          "account"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/create": {
      "post": {
        "operationId": "createSession",
        "description": "Create a new Session",
        "tags": [
          "session"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/session/createMany": {
      "post": {
        "operationId": "createManySession",
        "description": "Create several Session",
        "tags": [
          "session"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/session/findUnique": {
      "get": {
        "operationId": "findUniqueSession",
        "description": "Find one unique Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/findFirst": {
      "get": {
        "operationId": "findFirstSession",
        "description": "Find the first Session matching the given condition",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/findMany": {
      "get": {
        "operationId": "findManySession",
        "description": "Find a list of Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Session"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/update": {
      "patch": {
        "operationId": "updateSession",
        "description": "Update a Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/session/updateMany": {
      "patch": {
        "operationId": "updateManySession",
        "description": "Update Sessions matching the given condition",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/session/upsert": {
      "post": {
        "operationId": "upsertSession",
        "description": "Upsert a Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/session/delete": {
      "delete": {
        "operationId": "deleteSession",
        "description": "Delete one unique Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Session",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/deleteMany": {
      "delete": {
        "operationId": "deleteManySession",
        "description": "Delete Sessions matching the given condition",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/count": {
      "get": {
        "operationId": "countSession",
        "description": "Find a list of Session",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SessionCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/aggregate": {
      "get": {
        "operationId": "aggregateSession",
        "description": "Aggregate Sessions",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSession",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/session/groupBy": {
      "get": {
        "operationId": "groupBySession",
        "description": "Group Sessions by fields",
        "tags": [
          "session"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SessionGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/create": {
      "post": {
        "operationId": "createVerificationToken",
        "description": "Create a new VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationTokenCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/verificationToken/createMany": {
      "post": {
        "operationId": "createManyVerificationToken",
        "description": "Create several VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationTokenCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/verificationToken/findUnique": {
      "get": {
        "operationId": "findUniqueVerificationToken",
        "description": "Find one unique VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/findFirst": {
      "get": {
        "operationId": "findFirstVerificationToken",
        "description": "Find the first VerificationToken matching the given condition",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/findMany": {
      "get": {
        "operationId": "findManyVerificationToken",
        "description": "Find a list of VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VerificationToken"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/update": {
      "patch": {
        "operationId": "updateVerificationToken",
        "description": "Update a VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationTokenUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/verificationToken/updateMany": {
      "patch": {
        "operationId": "updateManyVerificationToken",
        "description": "Update VerificationTokens matching the given condition",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationTokenUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/verificationToken/upsert": {
      "post": {
        "operationId": "upsertVerificationToken",
        "description": "Upsert a VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationTokenUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/verificationToken/delete": {
      "delete": {
        "operationId": "deleteVerificationToken",
        "description": "Delete one unique VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/deleteMany": {
      "delete": {
        "operationId": "deleteManyVerificationToken",
        "description": "Delete VerificationTokens matching the given condition",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/count": {
      "get": {
        "operationId": "countVerificationToken",
        "description": "Find a list of VerificationToken",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/VerificationTokenCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/aggregate": {
      "get": {
        "operationId": "aggregateVerificationToken",
        "description": "Aggregate VerificationTokens",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateVerificationToken",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/verificationToken/groupBy": {
      "get": {
        "operationId": "groupByVerificationToken",
        "description": "Group VerificationTokens by fields",
        "tags": [
          "verificationToken"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VerificationTokenGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationTokenGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/create": {
      "post": {
        "operationId": "createLoginLog",
        "description": "Create a new LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginLogCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/loginLog/createMany": {
      "post": {
        "operationId": "createManyLoginLog",
        "description": "Create several LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginLogCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/loginLog/findUnique": {
      "get": {
        "operationId": "findUniqueLoginLog",
        "description": "Find one unique LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/findFirst": {
      "get": {
        "operationId": "findFirstLoginLog",
        "description": "Find the first LoginLog matching the given condition",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/findMany": {
      "get": {
        "operationId": "findManyLoginLog",
        "description": "Find a list of LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoginLog"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/update": {
      "patch": {
        "operationId": "updateLoginLog",
        "description": "Update a LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginLogUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/loginLog/updateMany": {
      "patch": {
        "operationId": "updateManyLoginLog",
        "description": "Update LoginLogs matching the given condition",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginLogUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/loginLog/upsert": {
      "post": {
        "operationId": "upsertLoginLog",
        "description": "Upsert a LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginLogUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/loginLog/delete": {
      "delete": {
        "operationId": "deleteLoginLog",
        "description": "Delete one unique LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/deleteMany": {
      "delete": {
        "operationId": "deleteManyLoginLog",
        "description": "Delete LoginLogs matching the given condition",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/count": {
      "get": {
        "operationId": "countLoginLog",
        "description": "Find a list of LoginLog",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/LoginLogCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/aggregate": {
      "get": {
        "operationId": "aggregateLoginLog",
        "description": "Aggregate LoginLogs",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateLoginLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/loginLog/groupBy": {
      "get": {
        "operationId": "groupByLoginLog",
        "description": "Group LoginLogs by fields",
        "tags": [
          "loginLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LoginLogGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginLogGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/create": {
      "post": {
        "operationId": "createBalanceLog",
        "description": "Create a new BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLogCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/balanceLog/createMany": {
      "post": {
        "operationId": "createManyBalanceLog",
        "description": "Create several BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLogCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/balanceLog/findUnique": {
      "get": {
        "operationId": "findUniqueBalanceLog",
        "description": "Find one unique BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/findFirst": {
      "get": {
        "operationId": "findFirstBalanceLog",
        "description": "Find the first BalanceLog matching the given condition",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/findMany": {
      "get": {
        "operationId": "findManyBalanceLog",
        "description": "Find a list of BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BalanceLog"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/update": {
      "patch": {
        "operationId": "updateBalanceLog",
        "description": "Update a BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLogUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/balanceLog/updateMany": {
      "patch": {
        "operationId": "updateManyBalanceLog",
        "description": "Update BalanceLogs matching the given condition",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLogUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/balanceLog/upsert": {
      "post": {
        "operationId": "upsertBalanceLog",
        "description": "Upsert a BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceLogUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/balanceLog/delete": {
      "delete": {
        "operationId": "deleteBalanceLog",
        "description": "Delete one unique BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/deleteMany": {
      "delete": {
        "operationId": "deleteManyBalanceLog",
        "description": "Delete BalanceLogs matching the given condition",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/count": {
      "get": {
        "operationId": "countBalanceLog",
        "description": "Find a list of BalanceLog",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/BalanceLogCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/aggregate": {
      "get": {
        "operationId": "aggregateBalanceLog",
        "description": "Aggregate BalanceLogs",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateBalanceLog",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/balanceLog/groupBy": {
      "get": {
        "operationId": "groupByBalanceLog",
        "description": "Group BalanceLogs by fields",
        "tags": [
          "balanceLog"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BalanceLogGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceLogGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/create": {
      "post": {
        "operationId": "createShop",
        "description": "Create a new Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/shop/createMany": {
      "post": {
        "operationId": "createManyShop",
        "description": "Create several Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/shop/findUnique": {
      "get": {
        "operationId": "findUniqueShop",
        "description": "Find one unique Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/findFirst": {
      "get": {
        "operationId": "findFirstShop",
        "description": "Find the first Shop matching the given condition",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/findMany": {
      "get": {
        "operationId": "findManyShop",
        "description": "Find a list of Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shop"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/update": {
      "patch": {
        "operationId": "updateShop",
        "description": "Update a Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/shop/updateMany": {
      "patch": {
        "operationId": "updateManyShop",
        "description": "Update Shops matching the given condition",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/shop/upsert": {
      "post": {
        "operationId": "upsertShop",
        "description": "Upsert a Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/shop/delete": {
      "delete": {
        "operationId": "deleteShop",
        "description": "Delete one unique Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Shop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/deleteMany": {
      "delete": {
        "operationId": "deleteManyShop",
        "description": "Delete Shops matching the given condition",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/count": {
      "get": {
        "operationId": "countShop",
        "description": "Find a list of Shop",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ShopCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/aggregate": {
      "get": {
        "operationId": "aggregateShop",
        "description": "Aggregate Shops",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateShop",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shop/groupBy": {
      "get": {
        "operationId": "groupByShop",
        "description": "Group Shops by fields",
        "tags": [
          "shop"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShopGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/create": {
      "post": {
        "operationId": "createShopMember",
        "description": "Create a new ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopMemberCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/shopMember/createMany": {
      "post": {
        "operationId": "createManyShopMember",
        "description": "Create several ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopMemberCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/shopMember/findUnique": {
      "get": {
        "operationId": "findUniqueShopMember",
        "description": "Find one unique ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/findFirst": {
      "get": {
        "operationId": "findFirstShopMember",
        "description": "Find the first ShopMember matching the given condition",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/findMany": {
      "get": {
        "operationId": "findManyShopMember",
        "description": "Find a list of ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShopMember"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/update": {
      "patch": {
        "operationId": "updateShopMember",
        "description": "Update a ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopMemberUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/shopMember/updateMany": {
      "patch": {
        "operationId": "updateManyShopMember",
        "description": "Update ShopMembers matching the given condition",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopMemberUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/shopMember/upsert": {
      "post": {
        "operationId": "upsertShopMember",
        "description": "Upsert a ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopMemberUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/shopMember/delete": {
      "delete": {
        "operationId": "deleteShopMember",
        "description": "Delete one unique ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/deleteMany": {
      "delete": {
        "operationId": "deleteManyShopMember",
        "description": "Delete ShopMembers matching the given condition",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/count": {
      "get": {
        "operationId": "countShopMember",
        "description": "Find a list of ShopMember",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ShopMemberCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/aggregate": {
      "get": {
        "operationId": "aggregateShopMember",
        "description": "Aggregate ShopMembers",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateShopMember",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/shopMember/groupBy": {
      "get": {
        "operationId": "groupByShopMember",
        "description": "Group ShopMembers by fields",
        "tags": [
          "shopMember"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ShopMemberGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopMemberGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/create": {
      "post": {
        "operationId": "createProduceSpecification",
        "description": "Create a new ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecification/createMany": {
      "post": {
        "operationId": "createManyProduceSpecification",
        "description": "Create several ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecification/findUnique": {
      "get": {
        "operationId": "findUniqueProduceSpecification",
        "description": "Find one unique ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/findFirst": {
      "get": {
        "operationId": "findFirstProduceSpecification",
        "description": "Find the first ProduceSpecification matching the given condition",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/findMany": {
      "get": {
        "operationId": "findManyProduceSpecification",
        "description": "Find a list of ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecification"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/update": {
      "patch": {
        "operationId": "updateProduceSpecification",
        "description": "Update a ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecification/updateMany": {
      "patch": {
        "operationId": "updateManyProduceSpecification",
        "description": "Update ProduceSpecifications matching the given condition",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecification/upsert": {
      "post": {
        "operationId": "upsertProduceSpecification",
        "description": "Upsert a ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecification/delete": {
      "delete": {
        "operationId": "deleteProduceSpecification",
        "description": "Delete one unique ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/deleteMany": {
      "delete": {
        "operationId": "deleteManyProduceSpecification",
        "description": "Delete ProduceSpecifications matching the given condition",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/count": {
      "get": {
        "operationId": "countProduceSpecification",
        "description": "Find a list of ProduceSpecification",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProduceSpecificationCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/aggregate": {
      "get": {
        "operationId": "aggregateProduceSpecification",
        "description": "Aggregate ProduceSpecifications",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProduceSpecification",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecification/groupBy": {
      "get": {
        "operationId": "groupByProduceSpecification",
        "description": "Group ProduceSpecifications by fields",
        "tags": [
          "produceSpecification"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecificationGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/create": {
      "post": {
        "operationId": "createProduceSpecificationValue",
        "description": "Create a new ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValue/createMany": {
      "post": {
        "operationId": "createManyProduceSpecificationValue",
        "description": "Create several ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValueCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValue/findUnique": {
      "get": {
        "operationId": "findUniqueProduceSpecificationValue",
        "description": "Find one unique ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/findFirst": {
      "get": {
        "operationId": "findFirstProduceSpecificationValue",
        "description": "Find the first ProduceSpecificationValue matching the given condition",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/findMany": {
      "get": {
        "operationId": "findManyProduceSpecificationValue",
        "description": "Find a list of ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecificationValue"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/update": {
      "patch": {
        "operationId": "updateProduceSpecificationValue",
        "description": "Update a ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValue/updateMany": {
      "patch": {
        "operationId": "updateManyProduceSpecificationValue",
        "description": "Update ProduceSpecificationValues matching the given condition",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValue/upsert": {
      "post": {
        "operationId": "upsertProduceSpecificationValue",
        "description": "Upsert a ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValueUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValue/delete": {
      "delete": {
        "operationId": "deleteProduceSpecificationValue",
        "description": "Delete one unique ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/deleteMany": {
      "delete": {
        "operationId": "deleteManyProduceSpecificationValue",
        "description": "Delete ProduceSpecificationValues matching the given condition",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/count": {
      "get": {
        "operationId": "countProduceSpecificationValue",
        "description": "Find a list of ProduceSpecificationValue",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProduceSpecificationValueCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/aggregate": {
      "get": {
        "operationId": "aggregateProduceSpecificationValue",
        "description": "Aggregate ProduceSpecificationValues",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProduceSpecificationValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValue/groupBy": {
      "get": {
        "operationId": "groupByProduceSpecificationValue",
        "description": "Group ProduceSpecificationValues by fields",
        "tags": [
          "produceSpecificationValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecificationValueGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValueGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/create": {
      "post": {
        "operationId": "createProducePrice",
        "description": "Create a new ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducePriceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/producePrice/createMany": {
      "post": {
        "operationId": "createManyProducePrice",
        "description": "Create several ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducePriceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/producePrice/findUnique": {
      "get": {
        "operationId": "findUniqueProducePrice",
        "description": "Find one unique ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/findFirst": {
      "get": {
        "operationId": "findFirstProducePrice",
        "description": "Find the first ProducePrice matching the given condition",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/findMany": {
      "get": {
        "operationId": "findManyProducePrice",
        "description": "Find a list of ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProducePrice"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/update": {
      "patch": {
        "operationId": "updateProducePrice",
        "description": "Update a ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducePriceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/producePrice/updateMany": {
      "patch": {
        "operationId": "updateManyProducePrice",
        "description": "Update ProducePrices matching the given condition",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducePriceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/producePrice/upsert": {
      "post": {
        "operationId": "upsertProducePrice",
        "description": "Upsert a ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProducePriceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/producePrice/delete": {
      "delete": {
        "operationId": "deleteProducePrice",
        "description": "Delete one unique ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/deleteMany": {
      "delete": {
        "operationId": "deleteManyProducePrice",
        "description": "Delete ProducePrices matching the given condition",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/count": {
      "get": {
        "operationId": "countProducePrice",
        "description": "Find a list of ProducePrice",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProducePriceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/aggregate": {
      "get": {
        "operationId": "aggregateProducePrice",
        "description": "Aggregate ProducePrices",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProducePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/producePrice/groupBy": {
      "get": {
        "operationId": "groupByProducePrice",
        "description": "Group ProducePrices by fields",
        "tags": [
          "producePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProducePriceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducePriceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/create": {
      "post": {
        "operationId": "createProduceSpecificationValuePrice",
        "description": "Create a new ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValuePrice/createMany": {
      "post": {
        "operationId": "createManyProduceSpecificationValuePrice",
        "description": "Create several ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValuePrice/findUnique": {
      "get": {
        "operationId": "findUniqueProduceSpecificationValuePrice",
        "description": "Find one unique ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/findFirst": {
      "get": {
        "operationId": "findFirstProduceSpecificationValuePrice",
        "description": "Find the first ProduceSpecificationValuePrice matching the given condition",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/findMany": {
      "get": {
        "operationId": "findManyProduceSpecificationValuePrice",
        "description": "Find a list of ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecificationValuePrice"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/update": {
      "patch": {
        "operationId": "updateProduceSpecificationValuePrice",
        "description": "Update a ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValuePrice/updateMany": {
      "patch": {
        "operationId": "updateManyProduceSpecificationValuePrice",
        "description": "Update ProduceSpecificationValuePrices matching the given condition",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValuePrice/upsert": {
      "post": {
        "operationId": "upsertProduceSpecificationValuePrice",
        "description": "Upsert a ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceSpecificationValuePriceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/produceSpecificationValuePrice/delete": {
      "delete": {
        "operationId": "deleteProduceSpecificationValuePrice",
        "description": "Delete one unique ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/deleteMany": {
      "delete": {
        "operationId": "deleteManyProduceSpecificationValuePrice",
        "description": "Delete ProduceSpecificationValuePrices matching the given condition",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/count": {
      "get": {
        "operationId": "countProduceSpecificationValuePrice",
        "description": "Find a list of ProduceSpecificationValuePrice",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/aggregate": {
      "get": {
        "operationId": "aggregateProduceSpecificationValuePrice",
        "description": "Aggregate ProduceSpecificationValuePrices",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProduceSpecificationValuePrice",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produceSpecificationValuePrice/groupBy": {
      "get": {
        "operationId": "groupByProduceSpecificationValuePrice",
        "description": "Group ProduceSpecificationValuePrices by fields",
        "tags": [
          "produceSpecificationValuePrice"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceSpecificationValuePriceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceSpecificationValuePriceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/create": {
      "post": {
        "operationId": "createProduce",
        "description": "Create a new Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produce/createMany": {
      "post": {
        "operationId": "createManyProduce",
        "description": "Create several Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produce/findUnique": {
      "get": {
        "operationId": "findUniqueProduce",
        "description": "Find one unique Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/findFirst": {
      "get": {
        "operationId": "findFirstProduce",
        "description": "Find the first Produce matching the given condition",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/findMany": {
      "get": {
        "operationId": "findManyProduce",
        "description": "Find a list of Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Produce"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/update": {
      "patch": {
        "operationId": "updateProduce",
        "description": "Update a Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/produce/updateMany": {
      "patch": {
        "operationId": "updateManyProduce",
        "description": "Update Produces matching the given condition",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/produce/upsert": {
      "post": {
        "operationId": "upsertProduce",
        "description": "Upsert a Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProduceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/produce/delete": {
      "delete": {
        "operationId": "deleteProduce",
        "description": "Delete one unique Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Produce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/deleteMany": {
      "delete": {
        "operationId": "deleteManyProduce",
        "description": "Delete Produces matching the given condition",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/count": {
      "get": {
        "operationId": "countProduce",
        "description": "Find a list of Produce",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ProduceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/aggregate": {
      "get": {
        "operationId": "aggregateProduce",
        "description": "Aggregate Produces",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/produce/groupBy": {
      "get": {
        "operationId": "groupByProduce",
        "description": "Group Produces by fields",
        "tags": [
          "produce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProduceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProduceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/create": {
      "post": {
        "operationId": "createCardProduceAccount",
        "description": "Create a new CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceAccountCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduceAccount/createMany": {
      "post": {
        "operationId": "createManyCardProduceAccount",
        "description": "Create several CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceAccountCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduceAccount/findUnique": {
      "get": {
        "operationId": "findUniqueCardProduceAccount",
        "description": "Find one unique CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/findFirst": {
      "get": {
        "operationId": "findFirstCardProduceAccount",
        "description": "Find the first CardProduceAccount matching the given condition",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/findMany": {
      "get": {
        "operationId": "findManyCardProduceAccount",
        "description": "Find a list of CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CardProduceAccount"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/update": {
      "patch": {
        "operationId": "updateCardProduceAccount",
        "description": "Update a CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceAccountUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduceAccount/updateMany": {
      "patch": {
        "operationId": "updateManyCardProduceAccount",
        "description": "Update CardProduceAccounts matching the given condition",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceAccountUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduceAccount/upsert": {
      "post": {
        "operationId": "upsertCardProduceAccount",
        "description": "Upsert a CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceAccountUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduceAccount/delete": {
      "delete": {
        "operationId": "deleteCardProduceAccount",
        "description": "Delete one unique CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/deleteMany": {
      "delete": {
        "operationId": "deleteManyCardProduceAccount",
        "description": "Delete CardProduceAccounts matching the given condition",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/count": {
      "get": {
        "operationId": "countCardProduceAccount",
        "description": "Find a list of CardProduceAccount",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CardProduceAccountCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/aggregate": {
      "get": {
        "operationId": "aggregateCardProduceAccount",
        "description": "Aggregate CardProduceAccounts",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCardProduceAccount",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduceAccount/groupBy": {
      "get": {
        "operationId": "groupByCardProduceAccount",
        "description": "Group CardProduceAccounts by fields",
        "tags": [
          "cardProduceAccount"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CardProduceAccountGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAccountGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/create": {
      "post": {
        "operationId": "createCardProduce",
        "description": "Create a new CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduce/createMany": {
      "post": {
        "operationId": "createManyCardProduce",
        "description": "Create several CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduce/findUnique": {
      "get": {
        "operationId": "findUniqueCardProduce",
        "description": "Find one unique CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/findFirst": {
      "get": {
        "operationId": "findFirstCardProduce",
        "description": "Find the first CardProduce matching the given condition",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/findMany": {
      "get": {
        "operationId": "findManyCardProduce",
        "description": "Find a list of CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CardProduce"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/update": {
      "patch": {
        "operationId": "updateCardProduce",
        "description": "Update a CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduce/updateMany": {
      "patch": {
        "operationId": "updateManyCardProduce",
        "description": "Update CardProduces matching the given condition",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduce/upsert": {
      "post": {
        "operationId": "upsertCardProduce",
        "description": "Upsert a CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardProduceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/cardProduce/delete": {
      "delete": {
        "operationId": "deleteCardProduce",
        "description": "Delete one unique CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/deleteMany": {
      "delete": {
        "operationId": "deleteManyCardProduce",
        "description": "Delete CardProduces matching the given condition",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/count": {
      "get": {
        "operationId": "countCardProduce",
        "description": "Find a list of CardProduce",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CardProduceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/aggregate": {
      "get": {
        "operationId": "aggregateCardProduce",
        "description": "Aggregate CardProduces",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCardProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/cardProduce/groupBy": {
      "get": {
        "operationId": "groupByCardProduce",
        "description": "Group CardProduces by fields",
        "tags": [
          "cardProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CardProduceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardProduceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/create": {
      "post": {
        "operationId": "createComboProduce",
        "description": "Create a new ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComboProduceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/comboProduce/createMany": {
      "post": {
        "operationId": "createManyComboProduce",
        "description": "Create several ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComboProduceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/comboProduce/findUnique": {
      "get": {
        "operationId": "findUniqueComboProduce",
        "description": "Find one unique ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/findFirst": {
      "get": {
        "operationId": "findFirstComboProduce",
        "description": "Find the first ComboProduce matching the given condition",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/findMany": {
      "get": {
        "operationId": "findManyComboProduce",
        "description": "Find a list of ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ComboProduce"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/update": {
      "patch": {
        "operationId": "updateComboProduce",
        "description": "Update a ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComboProduceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/comboProduce/updateMany": {
      "patch": {
        "operationId": "updateManyComboProduce",
        "description": "Update ComboProduces matching the given condition",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComboProduceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/comboProduce/upsert": {
      "post": {
        "operationId": "upsertComboProduce",
        "description": "Upsert a ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComboProduceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/comboProduce/delete": {
      "delete": {
        "operationId": "deleteComboProduce",
        "description": "Delete one unique ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/deleteMany": {
      "delete": {
        "operationId": "deleteManyComboProduce",
        "description": "Delete ComboProduces matching the given condition",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/count": {
      "get": {
        "operationId": "countComboProduce",
        "description": "Find a list of ComboProduce",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ComboProduceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/aggregate": {
      "get": {
        "operationId": "aggregateComboProduce",
        "description": "Aggregate ComboProduces",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateComboProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/comboProduce/groupBy": {
      "get": {
        "operationId": "groupByComboProduce",
        "description": "Group ComboProduces by fields",
        "tags": [
          "comboProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ComboProduceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComboProduceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/create": {
      "post": {
        "operationId": "createFreeExpressFeeRule",
        "description": "Create a new FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRule/createMany": {
      "post": {
        "operationId": "createManyFreeExpressFeeRule",
        "description": "Create several FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRule/findUnique": {
      "get": {
        "operationId": "findUniqueFreeExpressFeeRule",
        "description": "Find one unique FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/findFirst": {
      "get": {
        "operationId": "findFirstFreeExpressFeeRule",
        "description": "Find the first FreeExpressFeeRule matching the given condition",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/findMany": {
      "get": {
        "operationId": "findManyFreeExpressFeeRule",
        "description": "Find a list of FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FreeExpressFeeRule"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/update": {
      "patch": {
        "operationId": "updateFreeExpressFeeRule",
        "description": "Update a FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRule/updateMany": {
      "patch": {
        "operationId": "updateManyFreeExpressFeeRule",
        "description": "Update FreeExpressFeeRules matching the given condition",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRule/upsert": {
      "post": {
        "operationId": "upsertFreeExpressFeeRule",
        "description": "Upsert a FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRule/delete": {
      "delete": {
        "operationId": "deleteFreeExpressFeeRule",
        "description": "Delete one unique FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/deleteMany": {
      "delete": {
        "operationId": "deleteManyFreeExpressFeeRule",
        "description": "Delete FreeExpressFeeRules matching the given condition",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/count": {
      "get": {
        "operationId": "countFreeExpressFeeRule",
        "description": "Find a list of FreeExpressFeeRule",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/FreeExpressFeeRuleCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/aggregate": {
      "get": {
        "operationId": "aggregateFreeExpressFeeRule",
        "description": "Aggregate FreeExpressFeeRules",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateFreeExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRule/groupBy": {
      "get": {
        "operationId": "groupByFreeExpressFeeRule",
        "description": "Group FreeExpressFeeRules by fields",
        "tags": [
          "freeExpressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FreeExpressFeeRuleGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/create": {
      "post": {
        "operationId": "createFreeExpressFeeRuleCity",
        "description": "Create a new FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRuleCity/createMany": {
      "post": {
        "operationId": "createManyFreeExpressFeeRuleCity",
        "description": "Create several FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRuleCity/findUnique": {
      "get": {
        "operationId": "findUniqueFreeExpressFeeRuleCity",
        "description": "Find one unique FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/findFirst": {
      "get": {
        "operationId": "findFirstFreeExpressFeeRuleCity",
        "description": "Find the first FreeExpressFeeRuleCity matching the given condition",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/findMany": {
      "get": {
        "operationId": "findManyFreeExpressFeeRuleCity",
        "description": "Find a list of FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FreeExpressFeeRuleCity"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/update": {
      "patch": {
        "operationId": "updateFreeExpressFeeRuleCity",
        "description": "Update a FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRuleCity/updateMany": {
      "patch": {
        "operationId": "updateManyFreeExpressFeeRuleCity",
        "description": "Update FreeExpressFeeRuleCitys matching the given condition",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRuleCity/upsert": {
      "post": {
        "operationId": "upsertFreeExpressFeeRuleCity",
        "description": "Upsert a FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreeExpressFeeRuleCityUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/freeExpressFeeRuleCity/delete": {
      "delete": {
        "operationId": "deleteFreeExpressFeeRuleCity",
        "description": "Delete one unique FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/FreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/deleteMany": {
      "delete": {
        "operationId": "deleteManyFreeExpressFeeRuleCity",
        "description": "Delete FreeExpressFeeRuleCitys matching the given condition",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/count": {
      "get": {
        "operationId": "countFreeExpressFeeRuleCity",
        "description": "Find a list of FreeExpressFeeRuleCity",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/aggregate": {
      "get": {
        "operationId": "aggregateFreeExpressFeeRuleCity",
        "description": "Aggregate FreeExpressFeeRuleCitys",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateFreeExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/freeExpressFeeRuleCity/groupBy": {
      "get": {
        "operationId": "groupByFreeExpressFeeRuleCity",
        "description": "Group FreeExpressFeeRuleCitys by fields",
        "tags": [
          "freeExpressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FreeExpressFeeRuleCityGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreeExpressFeeRuleCityGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/create": {
      "post": {
        "operationId": "createExpressFeeRule",
        "description": "Create a new ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRule/createMany": {
      "post": {
        "operationId": "createManyExpressFeeRule",
        "description": "Create several ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRule/findUnique": {
      "get": {
        "operationId": "findUniqueExpressFeeRule",
        "description": "Find one unique ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/findFirst": {
      "get": {
        "operationId": "findFirstExpressFeeRule",
        "description": "Find the first ExpressFeeRule matching the given condition",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/findMany": {
      "get": {
        "operationId": "findManyExpressFeeRule",
        "description": "Find a list of ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpressFeeRule"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/update": {
      "patch": {
        "operationId": "updateExpressFeeRule",
        "description": "Update a ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRule/updateMany": {
      "patch": {
        "operationId": "updateManyExpressFeeRule",
        "description": "Update ExpressFeeRules matching the given condition",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRule/upsert": {
      "post": {
        "operationId": "upsertExpressFeeRule",
        "description": "Upsert a ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRule/delete": {
      "delete": {
        "operationId": "deleteExpressFeeRule",
        "description": "Delete one unique ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/deleteMany": {
      "delete": {
        "operationId": "deleteManyExpressFeeRule",
        "description": "Delete ExpressFeeRules matching the given condition",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/count": {
      "get": {
        "operationId": "countExpressFeeRule",
        "description": "Find a list of ExpressFeeRule",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ExpressFeeRuleCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/aggregate": {
      "get": {
        "operationId": "aggregateExpressFeeRule",
        "description": "Aggregate ExpressFeeRules",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateExpressFeeRule",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRule/groupBy": {
      "get": {
        "operationId": "groupByExpressFeeRule",
        "description": "Group ExpressFeeRules by fields",
        "tags": [
          "expressFeeRule"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpressFeeRuleGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/create": {
      "post": {
        "operationId": "createExpressFeeRuleCity",
        "description": "Create a new ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRuleCity/createMany": {
      "post": {
        "operationId": "createManyExpressFeeRuleCity",
        "description": "Create several ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCityCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRuleCity/findUnique": {
      "get": {
        "operationId": "findUniqueExpressFeeRuleCity",
        "description": "Find one unique ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/findFirst": {
      "get": {
        "operationId": "findFirstExpressFeeRuleCity",
        "description": "Find the first ExpressFeeRuleCity matching the given condition",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/findMany": {
      "get": {
        "operationId": "findManyExpressFeeRuleCity",
        "description": "Find a list of ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpressFeeRuleCity"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/update": {
      "patch": {
        "operationId": "updateExpressFeeRuleCity",
        "description": "Update a ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRuleCity/updateMany": {
      "patch": {
        "operationId": "updateManyExpressFeeRuleCity",
        "description": "Update ExpressFeeRuleCitys matching the given condition",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRuleCity/upsert": {
      "post": {
        "operationId": "upsertExpressFeeRuleCity",
        "description": "Upsert a ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressFeeRuleCityUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/expressFeeRuleCity/delete": {
      "delete": {
        "operationId": "deleteExpressFeeRuleCity",
        "description": "Delete one unique ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/deleteMany": {
      "delete": {
        "operationId": "deleteManyExpressFeeRuleCity",
        "description": "Delete ExpressFeeRuleCitys matching the given condition",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/count": {
      "get": {
        "operationId": "countExpressFeeRuleCity",
        "description": "Find a list of ExpressFeeRuleCity",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ExpressFeeRuleCityCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/aggregate": {
      "get": {
        "operationId": "aggregateExpressFeeRuleCity",
        "description": "Aggregate ExpressFeeRuleCitys",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateExpressFeeRuleCity",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/expressFeeRuleCity/groupBy": {
      "get": {
        "operationId": "groupByExpressFeeRuleCity",
        "description": "Group ExpressFeeRuleCitys by fields",
        "tags": [
          "expressFeeRuleCity"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExpressFeeRuleCityGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressFeeRuleCityGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/create": {
      "post": {
        "operationId": "createPhysicalProduce",
        "description": "Create a new PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalProduceCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/physicalProduce/createMany": {
      "post": {
        "operationId": "createManyPhysicalProduce",
        "description": "Create several PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalProduceCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/physicalProduce/findUnique": {
      "get": {
        "operationId": "findUniquePhysicalProduce",
        "description": "Find one unique PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/findFirst": {
      "get": {
        "operationId": "findFirstPhysicalProduce",
        "description": "Find the first PhysicalProduce matching the given condition",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/findMany": {
      "get": {
        "operationId": "findManyPhysicalProduce",
        "description": "Find a list of PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PhysicalProduce"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/update": {
      "patch": {
        "operationId": "updatePhysicalProduce",
        "description": "Update a PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalProduceUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/physicalProduce/updateMany": {
      "patch": {
        "operationId": "updateManyPhysicalProduce",
        "description": "Update PhysicalProduces matching the given condition",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalProduceUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/physicalProduce/upsert": {
      "post": {
        "operationId": "upsertPhysicalProduce",
        "description": "Upsert a PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalProduceUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/physicalProduce/delete": {
      "delete": {
        "operationId": "deletePhysicalProduce",
        "description": "Delete one unique PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/deleteMany": {
      "delete": {
        "operationId": "deleteManyPhysicalProduce",
        "description": "Delete PhysicalProduces matching the given condition",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/count": {
      "get": {
        "operationId": "countPhysicalProduce",
        "description": "Find a list of PhysicalProduce",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/PhysicalProduceCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/aggregate": {
      "get": {
        "operationId": "aggregatePhysicalProduce",
        "description": "Aggregate PhysicalProduces",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregatePhysicalProduce",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/physicalProduce/groupBy": {
      "get": {
        "operationId": "groupByPhysicalProduce",
        "description": "Group PhysicalProduces by fields",
        "tags": [
          "physicalProduce"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PhysicalProduceGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalProduceGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/create": {
      "post": {
        "operationId": "createI18nValue",
        "description": "Create a new I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/I18nValueCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/i18nValue/createMany": {
      "post": {
        "operationId": "createManyI18nValue",
        "description": "Create several I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/I18nValueCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/i18nValue/findUnique": {
      "get": {
        "operationId": "findUniqueI18nValue",
        "description": "Find one unique I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/findFirst": {
      "get": {
        "operationId": "findFirstI18nValue",
        "description": "Find the first I18nValue matching the given condition",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/findMany": {
      "get": {
        "operationId": "findManyI18nValue",
        "description": "Find a list of I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/I18nValue"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/update": {
      "patch": {
        "operationId": "updateI18nValue",
        "description": "Update a I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/I18nValueUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/i18nValue/updateMany": {
      "patch": {
        "operationId": "updateManyI18nValue",
        "description": "Update I18nValues matching the given condition",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/I18nValueUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/i18nValue/upsert": {
      "post": {
        "operationId": "upsertI18nValue",
        "description": "Upsert a I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/I18nValueUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/i18nValue/delete": {
      "delete": {
        "operationId": "deleteI18nValue",
        "description": "Delete one unique I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/I18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/deleteMany": {
      "delete": {
        "operationId": "deleteManyI18nValue",
        "description": "Delete I18nValues matching the given condition",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/count": {
      "get": {
        "operationId": "countI18nValue",
        "description": "Find a list of I18nValue",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/I18nValueCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/aggregate": {
      "get": {
        "operationId": "aggregateI18nValue",
        "description": "Aggregate I18nValues",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateI18nValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/i18nValue/groupBy": {
      "get": {
        "operationId": "groupByI18nValue",
        "description": "Group I18nValues by fields",
        "tags": [
          "i18nValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/I18nValueGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/I18nValueGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/create": {
      "post": {
        "operationId": "createConfigValue",
        "description": "Create a new ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValueCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/configValue/createMany": {
      "post": {
        "operationId": "createManyConfigValue",
        "description": "Create several ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValueCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/configValue/findUnique": {
      "get": {
        "operationId": "findUniqueConfigValue",
        "description": "Find one unique ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/findFirst": {
      "get": {
        "operationId": "findFirstConfigValue",
        "description": "Find the first ConfigValue matching the given condition",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/findMany": {
      "get": {
        "operationId": "findManyConfigValue",
        "description": "Find a list of ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConfigValue"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/update": {
      "patch": {
        "operationId": "updateConfigValue",
        "description": "Update a ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValueUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/configValue/updateMany": {
      "patch": {
        "operationId": "updateManyConfigValue",
        "description": "Update ConfigValues matching the given condition",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValueUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/configValue/upsert": {
      "post": {
        "operationId": "upsertConfigValue",
        "description": "Upsert a ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigValueUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/configValue/delete": {
      "delete": {
        "operationId": "deleteConfigValue",
        "description": "Delete one unique ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/deleteMany": {
      "delete": {
        "operationId": "deleteManyConfigValue",
        "description": "Delete ConfigValues matching the given condition",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/count": {
      "get": {
        "operationId": "countConfigValue",
        "description": "Find a list of ConfigValue",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/ConfigValueCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/aggregate": {
      "get": {
        "operationId": "aggregateConfigValue",
        "description": "Aggregate ConfigValues",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateConfigValue",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/configValue/groupBy": {
      "get": {
        "operationId": "groupByConfigValue",
        "description": "Group ConfigValues by fields",
        "tags": [
          "configValue"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConfigValueGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigValueGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/create": {
      "post": {
        "operationId": "createVideo",
        "description": "Create a new Video",
        "tags": [
          "video"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/video/createMany": {
      "post": {
        "operationId": "createManyVideo",
        "description": "Create several Video",
        "tags": [
          "video"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/video/findUnique": {
      "get": {
        "operationId": "findUniqueVideo",
        "description": "Find one unique Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/findFirst": {
      "get": {
        "operationId": "findFirstVideo",
        "description": "Find the first Video matching the given condition",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/findMany": {
      "get": {
        "operationId": "findManyVideo",
        "description": "Find a list of Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Video"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/update": {
      "patch": {
        "operationId": "updateVideo",
        "description": "Update a Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/video/updateMany": {
      "patch": {
        "operationId": "updateManyVideo",
        "description": "Update Videos matching the given condition",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/video/upsert": {
      "post": {
        "operationId": "upsertVideo",
        "description": "Upsert a Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/video/delete": {
      "delete": {
        "operationId": "deleteVideo",
        "description": "Delete one unique Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Video",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/deleteMany": {
      "delete": {
        "operationId": "deleteManyVideo",
        "description": "Delete Videos matching the given condition",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/count": {
      "get": {
        "operationId": "countVideo",
        "description": "Find a list of Video",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/VideoCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/aggregate": {
      "get": {
        "operationId": "aggregateVideo",
        "description": "Aggregate Videos",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateVideo",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/video/groupBy": {
      "get": {
        "operationId": "groupByVideo",
        "description": "Group Videos by fields",
        "tags": [
          "video"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/create": {
      "post": {
        "operationId": "createVideoType",
        "description": "Create a new VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTypeCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoType/createMany": {
      "post": {
        "operationId": "createManyVideoType",
        "description": "Create several VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTypeCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoType/findUnique": {
      "get": {
        "operationId": "findUniqueVideoType",
        "description": "Find one unique VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/findFirst": {
      "get": {
        "operationId": "findFirstVideoType",
        "description": "Find the first VideoType matching the given condition",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/findMany": {
      "get": {
        "operationId": "findManyVideoType",
        "description": "Find a list of VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/update": {
      "patch": {
        "operationId": "updateVideoType",
        "description": "Update a VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTypeUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoType/updateMany": {
      "patch": {
        "operationId": "updateManyVideoType",
        "description": "Update VideoTypes matching the given condition",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTypeUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoType/upsert": {
      "post": {
        "operationId": "upsertVideoType",
        "description": "Upsert a VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTypeUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoType/delete": {
      "delete": {
        "operationId": "deleteVideoType",
        "description": "Delete one unique VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/deleteMany": {
      "delete": {
        "operationId": "deleteManyVideoType",
        "description": "Delete VideoTypes matching the given condition",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/count": {
      "get": {
        "operationId": "countVideoType",
        "description": "Find a list of VideoType",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/VideoTypeCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/aggregate": {
      "get": {
        "operationId": "aggregateVideoType",
        "description": "Aggregate VideoTypes",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateVideoType",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoType/groupBy": {
      "get": {
        "operationId": "groupByVideoType",
        "description": "Group VideoTypes by fields",
        "tags": [
          "videoType"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoTypeGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTypeGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/create": {
      "post": {
        "operationId": "createVideoTag",
        "description": "Create a new VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTagCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoTag/createMany": {
      "post": {
        "operationId": "createManyVideoTag",
        "description": "Create several VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTagCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoTag/findUnique": {
      "get": {
        "operationId": "findUniqueVideoTag",
        "description": "Find one unique VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/findFirst": {
      "get": {
        "operationId": "findFirstVideoTag",
        "description": "Find the first VideoTag matching the given condition",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/findMany": {
      "get": {
        "operationId": "findManyVideoTag",
        "description": "Find a list of VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoTag"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/update": {
      "patch": {
        "operationId": "updateVideoTag",
        "description": "Update a VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTagUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoTag/updateMany": {
      "patch": {
        "operationId": "updateManyVideoTag",
        "description": "Update VideoTags matching the given condition",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTagUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoTag/upsert": {
      "post": {
        "operationId": "upsertVideoTag",
        "description": "Upsert a VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoTagUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoTag/delete": {
      "delete": {
        "operationId": "deleteVideoTag",
        "description": "Delete one unique VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/deleteMany": {
      "delete": {
        "operationId": "deleteManyVideoTag",
        "description": "Delete VideoTags matching the given condition",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/count": {
      "get": {
        "operationId": "countVideoTag",
        "description": "Find a list of VideoTag",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/VideoTagCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/aggregate": {
      "get": {
        "operationId": "aggregateVideoTag",
        "description": "Aggregate VideoTags",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateVideoTag",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoTag/groupBy": {
      "get": {
        "operationId": "groupByVideoTag",
        "description": "Group VideoTags by fields",
        "tags": [
          "videoTag"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoTagGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoTagGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/create": {
      "post": {
        "operationId": "createVideoSet",
        "description": "Create a new VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoSetCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoSet/createMany": {
      "post": {
        "operationId": "createManyVideoSet",
        "description": "Create several VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoSetCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoSet/findUnique": {
      "get": {
        "operationId": "findUniqueVideoSet",
        "description": "Find one unique VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/findFirst": {
      "get": {
        "operationId": "findFirstVideoSet",
        "description": "Find the first VideoSet matching the given condition",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/findMany": {
      "get": {
        "operationId": "findManyVideoSet",
        "description": "Find a list of VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoSet"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/update": {
      "patch": {
        "operationId": "updateVideoSet",
        "description": "Update a VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoSetUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoSet/updateMany": {
      "patch": {
        "operationId": "updateManyVideoSet",
        "description": "Update VideoSets matching the given condition",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoSetUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoSet/upsert": {
      "post": {
        "operationId": "upsertVideoSet",
        "description": "Upsert a VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoSetUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/videoSet/delete": {
      "delete": {
        "operationId": "deleteVideoSet",
        "description": "Delete one unique VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/VideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/deleteMany": {
      "delete": {
        "operationId": "deleteManyVideoSet",
        "description": "Delete VideoSets matching the given condition",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/count": {
      "get": {
        "operationId": "countVideoSet",
        "description": "Find a list of VideoSet",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/VideoSetCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/aggregate": {
      "get": {
        "operationId": "aggregateVideoSet",
        "description": "Aggregate VideoSets",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateVideoSet",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/videoSet/groupBy": {
      "get": {
        "operationId": "groupByVideoSet",
        "description": "Group VideoSets by fields",
        "tags": [
          "videoSet"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VideoSetGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSetGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/create": {
      "post": {
        "operationId": "createSite",
        "description": "Create a new Site",
        "tags": [
          "site"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/site/createMany": {
      "post": {
        "operationId": "createManySite",
        "description": "Create several Site",
        "tags": [
          "site"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/site/findUnique": {
      "get": {
        "operationId": "findUniqueSite",
        "description": "Find one unique Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/findFirst": {
      "get": {
        "operationId": "findFirstSite",
        "description": "Find the first Site matching the given condition",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/findMany": {
      "get": {
        "operationId": "findManySite",
        "description": "Find a list of Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Site"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/update": {
      "patch": {
        "operationId": "updateSite",
        "description": "Update a Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/site/updateMany": {
      "patch": {
        "operationId": "updateManySite",
        "description": "Update Sites matching the given condition",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/site/upsert": {
      "post": {
        "operationId": "upsertSite",
        "description": "Upsert a Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/site/delete": {
      "delete": {
        "operationId": "deleteSite",
        "description": "Delete one unique Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Site",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/deleteMany": {
      "delete": {
        "operationId": "deleteManySite",
        "description": "Delete Sites matching the given condition",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/count": {
      "get": {
        "operationId": "countSite",
        "description": "Find a list of Site",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/SiteCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/aggregate": {
      "get": {
        "operationId": "aggregateSite",
        "description": "Aggregate Sites",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateSite",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/site/groupBy": {
      "get": {
        "operationId": "groupBySite",
        "description": "Group Sites by fields",
        "tags": [
          "site"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/create": {
      "post": {
        "operationId": "createPage",
        "description": "Create a new Page",
        "tags": [
          "page"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/page/createMany": {
      "post": {
        "operationId": "createManyPage",
        "description": "Create several Page",
        "tags": [
          "page"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/page/findUnique": {
      "get": {
        "operationId": "findUniquePage",
        "description": "Find one unique Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/findFirst": {
      "get": {
        "operationId": "findFirstPage",
        "description": "Find the first Page matching the given condition",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/findMany": {
      "get": {
        "operationId": "findManyPage",
        "description": "Find a list of Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Page"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/update": {
      "patch": {
        "operationId": "updatePage",
        "description": "Update a Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/page/updateMany": {
      "patch": {
        "operationId": "updateManyPage",
        "description": "Update Pages matching the given condition",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/page/upsert": {
      "post": {
        "operationId": "upsertPage",
        "description": "Upsert a Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/page/delete": {
      "delete": {
        "operationId": "deletePage",
        "description": "Delete one unique Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Page",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/deleteMany": {
      "delete": {
        "operationId": "deleteManyPage",
        "description": "Delete Pages matching the given condition",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/count": {
      "get": {
        "operationId": "countPage",
        "description": "Find a list of Page",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/PageCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/aggregate": {
      "get": {
        "operationId": "aggregatePage",
        "description": "Aggregate Pages",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregatePage",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/page/groupBy": {
      "get": {
        "operationId": "groupByPage",
        "description": "Group Pages by fields",
        "tags": [
          "page"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PageGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/create": {
      "post": {
        "operationId": "createCrawlTask",
        "description": "Create a new CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlTaskCreateArgs"
              }
            }
          }
        }
      }
    },
    "/api/crawlTask/createMany": {
      "post": {
        "operationId": "createManyCrawlTask",
        "description": "Create several CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlTaskCreateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/crawlTask/findUnique": {
      "get": {
        "operationId": "findUniqueCrawlTask",
        "description": "Find one unique CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskFindUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/findFirst": {
      "get": {
        "operationId": "findFirstCrawlTask",
        "description": "Find the first CrawlTask matching the given condition",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskFindFirstArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/findMany": {
      "get": {
        "operationId": "findManyCrawlTask",
        "description": "Find a list of CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CrawlTask"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskFindManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/update": {
      "patch": {
        "operationId": "updateCrawlTask",
        "description": "Update a CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlTaskUpdateArgs"
              }
            }
          }
        }
      }
    },
    "/api/crawlTask/updateMany": {
      "patch": {
        "operationId": "updateManyCrawlTask",
        "description": "Update CrawlTasks matching the given condition",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlTaskUpdateManyArgs"
              }
            }
          }
        }
      }
    },
    "/api/crawlTask/upsert": {
      "post": {
        "operationId": "upsertCrawlTask",
        "description": "Upsert a CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrawlTaskUpsertArgs"
              }
            }
          }
        }
      }
    },
    "/api/crawlTask/delete": {
      "delete": {
        "operationId": "deleteCrawlTask",
        "description": "Delete one unique CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskDeleteUniqueArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/deleteMany": {
      "delete": {
        "operationId": "deleteManyCrawlTask",
        "description": "Delete CrawlTasks matching the given condition",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/BatchPayload",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskDeleteManyArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/count": {
      "get": {
        "operationId": "countCrawlTask",
        "description": "Find a list of CrawlTask",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "$ref": "#/components/schemas/CrawlTaskCountAggregateOutputType"
                        }
                      ],
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskCountArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/aggregate": {
      "get": {
        "operationId": "aggregateCrawlTask",
        "description": "Aggregate CrawlTasks",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AggregateCrawlTask",
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskAggregateArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    },
    "/api/crawlTask/groupBy": {
      "get": {
        "operationId": "groupByCrawlTask",
        "description": "Group CrawlTasks by fields",
        "tags": [
          "crawlTask"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CrawlTaskGroupByOutputType"
                      },
                      "description": "The Prisma response data serialized with superjson"
                    },
                    "meta": {
                      "$ref": "#/components/schemas/_Meta",
                      "description": "The superjson serialization metadata for the \"data\" field"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Invalid request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Error"
                }
              }
            },
            "description": "Request is forbidden"
          }
        },
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "description": "Superjson-serialized Prisma query object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrawlTaskGroupByArgs"
                }
              }
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Superjson serialization metadata for parameter \"q\"",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        ]
      }
    }
  }
}